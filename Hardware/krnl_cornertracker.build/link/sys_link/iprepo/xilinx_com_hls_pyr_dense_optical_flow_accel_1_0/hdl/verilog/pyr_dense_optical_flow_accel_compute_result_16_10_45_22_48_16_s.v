// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module pyr_dense_optical_flow_accel_compute_result_16_10_45_22_48_16_s (
        ap_clk,
        ap_rst,
        fracI,
        fracJ,
        i0,
        i1,
        i2,
        i3,
        ap_return,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [23:0] fracI;
input  [23:0] fracJ;
input  [15:0] i0;
input  [15:0] i1;
input  [15:0] i2;
input  [15:0] i3;
output  [14:0] ap_return;
input   ap_ce;

reg[14:0] ap_return;

reg   [15:0] i3_read_reg_282;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_pp0_stage0_11001;
reg  signed [15:0] i3_read_reg_282_pp0_iter1_reg;
reg  signed [15:0] i2_read_reg_287;
reg  signed [15:0] i1_read_reg_292;
reg   [15:0] i0_read_reg_297;
reg  signed [15:0] i0_read_reg_297_pp0_iter1_reg;
reg  signed [17:0] p3_V_reg_302;
reg  signed [17:0] p3_V_reg_302_pp0_iter1_reg;
reg  signed [17:0] p2_V_reg_308;
reg  signed [17:0] p2_V_reg_308_pp0_iter1_reg;
reg  signed [17:0] p1_V_reg_314;
reg  signed [17:0] p1_V_reg_314_pp0_iter1_reg;
wire  signed [31:0] grp_fu_250_p2;
wire  signed [31:0] grp_fu_256_p2;
wire    ap_block_pp0_stage0;
wire   [17:0] tmp_fu_84_p4;
wire   [17:0] tmp_s_fu_102_p4;
wire  signed [35:0] shl_ln_fu_94_p3;
wire  signed [35:0] shl_ln728_8_fu_112_p3;
wire   [70:0] r_V_fu_128_p2;
wire   [35:0] fij_V_fu_134_p4;
wire   [35:0] ret_V_fu_154_p2;
wire   [35:0] ret_V_5_fu_170_p2;
wire  signed [18:0] sext_ln1193_2_fu_204_p1;
wire   [18:0] sub_ln1193_fu_207_p2;
wire   [19:0] zext_ln1193_fu_213_p1;
wire  signed [19:0] sext_ln1193_fu_198_p1;
wire  signed [19:0] sub_ln1193_4_fu_217_p2;
wire  signed [31:0] grp_fu_273_p3;
wire  signed [31:0] grp_fu_262_p4;
(* use_dsp48 = "no" *) wire   [31:0] ret_V_6_fu_236_p2;
reg    grp_fu_250_ce;
reg    grp_fu_256_ce;
reg    grp_fu_262_ce;
reg    grp_fu_273_ce;
reg    ap_ce_reg;
reg   [23:0] fracI_int_reg;
reg   [23:0] fracJ_int_reg;
reg   [15:0] i0_int_reg;
reg   [15:0] i1_int_reg;
reg   [15:0] i2_int_reg;
reg   [15:0] i3_int_reg;
reg   [14:0] ap_return_int_reg;

pyr_dense_optical_flow_accel_mul_36s_36s_71_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 36 ),
    .dout_WIDTH( 71 ))
mul_36s_36s_71_1_0_U187(
    .din0(shl_ln_fu_94_p3),
    .din1(shl_ln728_8_fu_112_p3),
    .dout(r_V_fu_128_p2)
);

pyr_dense_optical_flow_accel_mul_mul_18s_16s_32_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_mul_18s_16s_32_4_0_U188(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p1_V_reg_314),
    .din1(i1_read_reg_292),
    .ce(grp_fu_250_ce),
    .dout(grp_fu_250_p2)
);

pyr_dense_optical_flow_accel_mul_mul_18s_16s_32_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_mul_18s_16s_32_4_0_U189(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p2_V_reg_308),
    .din1(i2_read_reg_287),
    .ce(grp_fu_256_ce),
    .dout(grp_fu_256_p2)
);

pyr_dense_optical_flow_accel_ama_submuladd_20s_18s_16s_32s_32_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 20 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
ama_submuladd_20s_18s_16s_32s_32_4_0_U190(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sub_ln1193_4_fu_217_p2),
    .din1(p2_V_reg_308_pp0_iter1_reg),
    .din2(i0_read_reg_297_pp0_iter1_reg),
    .din3(grp_fu_250_p2),
    .ce(grp_fu_262_ce),
    .dout(grp_fu_262_p4)
);

pyr_dense_optical_flow_accel_mac_muladd_18s_16s_32s_32_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_18s_16s_32s_32_4_0_U191(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p3_V_reg_302_pp0_iter1_reg),
    .din1(i3_read_reg_282_pp0_iter1_reg),
    .din2(grp_fu_256_p2),
    .ce(grp_fu_273_ce),
    .dout(grp_fu_273_p3)
);

always @ (posedge ap_clk) begin
    ap_ce_reg <= ap_ce;
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce_reg)) begin
        ap_return_int_reg <= {{ret_V_6_fu_236_p2[31:17]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        fracI_int_reg <= fracI;
        fracJ_int_reg <= fracJ;
        i0_int_reg <= i0;
        i1_int_reg <= i1;
        i2_int_reg <= i2;
        i3_int_reg <= i3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        i0_read_reg_297 <= i0_int_reg;
        i0_read_reg_297_pp0_iter1_reg <= i0_read_reg_297;
        i1_read_reg_292 <= i1_int_reg;
        i2_read_reg_287 <= i2_int_reg;
        i3_read_reg_282 <= i3_int_reg;
        i3_read_reg_282_pp0_iter1_reg <= i3_read_reg_282;
        p1_V_reg_314 <= {{ret_V_5_fu_170_p2[35:18]}};
        p1_V_reg_314_pp0_iter1_reg <= p1_V_reg_314;
        p2_V_reg_308 <= {{ret_V_fu_154_p2[35:18]}};
        p2_V_reg_308_pp0_iter1_reg <= p2_V_reg_308;
        p3_V_reg_302 <= {{r_V_fu_128_p2[70:53]}};
        p3_V_reg_302_pp0_iter1_reg <= p3_V_reg_302;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return = ap_return_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return = {{ret_V_6_fu_236_p2[31:17]}};
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_250_ce = 1'b1;
    end else begin
        grp_fu_250_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_256_ce = 1'b1;
    end else begin
        grp_fu_256_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_262_ce = 1'b1;
    end else begin
        grp_fu_262_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_273_ce = 1'b1;
    end else begin
        grp_fu_273_ce = 1'b0;
    end
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign fij_V_fu_134_p4 = {{r_V_fu_128_p2[70:35]}};

assign ret_V_5_fu_170_p2 = ($signed(shl_ln728_8_fu_112_p3) - $signed(fij_V_fu_134_p4));

assign ret_V_6_fu_236_p2 = ($signed(grp_fu_273_p3) + $signed(grp_fu_262_p4));

assign ret_V_fu_154_p2 = ($signed(shl_ln_fu_94_p3) - $signed(fij_V_fu_134_p4));

assign sext_ln1193_2_fu_204_p1 = p3_V_reg_302_pp0_iter1_reg;

assign sext_ln1193_fu_198_p1 = p1_V_reg_314_pp0_iter1_reg;

assign shl_ln728_8_fu_112_p3 = {{tmp_s_fu_102_p4}, {18'd0}};

assign shl_ln_fu_94_p3 = {{tmp_fu_84_p4}, {18'd0}};

assign sub_ln1193_4_fu_217_p2 = ($signed(zext_ln1193_fu_213_p1) - $signed(sext_ln1193_fu_198_p1));

assign sub_ln1193_fu_207_p2 = ($signed(19'd131072) - $signed(sext_ln1193_2_fu_204_p1));

assign tmp_fu_84_p4 = {{fracI_int_reg[23:6]}};

assign tmp_s_fu_102_p4 = {{fracJ_int_reg[23:6]}};

assign zext_ln1193_fu_213_p1 = sub_ln1193_fu_207_p2;

endmodule //pyr_dense_optical_flow_accel_compute_result_16_10_45_22_48_16_s
