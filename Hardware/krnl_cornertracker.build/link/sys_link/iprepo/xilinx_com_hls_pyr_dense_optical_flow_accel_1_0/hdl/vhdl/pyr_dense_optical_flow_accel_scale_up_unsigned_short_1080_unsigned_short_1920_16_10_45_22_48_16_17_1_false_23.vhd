-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity pyr_dense_optical_flow_accel_scale_up_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_false_23 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    strmFlowU_split_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    strmFlowU_split_empty_n : IN STD_LOGIC;
    strmFlowU_split_read : OUT STD_LOGIC;
    strmFlowU_scaled_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    strmFlowU_scaled_full_n : IN STD_LOGIC;
    strmFlowU_scaled_write : OUT STD_LOGIC;
    prev_rows_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    prev_rows_empty_n : IN STD_LOGIC;
    prev_rows_read : OUT STD_LOGIC;
    prev_cols_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    prev_cols_empty_n : IN STD_LOGIC;
    prev_cols_read : OUT STD_LOGIC;
    rows_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    rows_empty_n : IN STD_LOGIC;
    rows_read : OUT STD_LOGIC;
    cols_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    cols_empty_n : IN STD_LOGIC;
    cols_read : OUT STD_LOGIC;
    scale_up_flag_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    scale_up_flag_empty_n : IN STD_LOGIC;
    scale_up_flag_read : OUT STD_LOGIC;
    scale_in_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    scale_in_empty_n : IN STD_LOGIC;
    scale_in_read : OUT STD_LOGIC;
    rows_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    rows_out_full_n : IN STD_LOGIC;
    rows_out_write : OUT STD_LOGIC;
    cols_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    cols_out_full_n : IN STD_LOGIC;
    cols_out_write : OUT STD_LOGIC );
end;


architecture behav of pyr_dense_optical_flow_accel_scale_up_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_false_23 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (10 downto 0) := "00000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (10 downto 0) := "00000001000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (10 downto 0) := "00000010000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (10 downto 0) := "00000100000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (10 downto 0) := "00001000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (10 downto 0) := "00010000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (10 downto 0) := "00100000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (10 downto 0) := "01000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_433 : STD_LOGIC_VECTOR (11 downto 0) := "010000110011";
    constant ap_const_lv12_10 : STD_LOGIC_VECTOR (11 downto 0) := "000000010000";
    constant ap_const_lv12_FF0 : STD_LOGIC_VECTOR (11 downto 0) := "111111110000";
    constant ap_const_lv12_36 : STD_LOGIC_VECTOR (11 downto 0) := "000000110110";
    constant ap_const_lv12_11 : STD_LOGIC_VECTOR (11 downto 0) := "000000010001";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv17_1FFFF : STD_LOGIC_VECTOR (16 downto 0) := "11111111111111111";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal strmFlowU_split_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln318_reg_784 : STD_LOGIC_VECTOR (0 downto 0);
    signal strmFlowU_scaled_blk_n : STD_LOGIC;
    signal prev_rows_blk_n : STD_LOGIC;
    signal prev_cols_blk_n : STD_LOGIC;
    signal rows_blk_n : STD_LOGIC;
    signal cols_blk_n : STD_LOGIC;
    signal scale_up_flag_blk_n : STD_LOGIC;
    signal scale_in_blk_n : STD_LOGIC;
    signal rows_out_blk_n : STD_LOGIC;
    signal cols_out_blk_n : STD_LOGIC;
    signal empty_155_reg_229 : STD_LOGIC_VECTOR (15 downto 0);
    signal prev_rows_read_reg_690 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal prev_cols_read_reg_695 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_up_flag_read_reg_700 : STD_LOGIC_VECTOR (0 downto 0);
    signal scale_in_read_reg_704 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln360_fu_344_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln360_reg_710 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln360_1_fu_348_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln360_1_reg_718 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln570_fu_404_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln570_reg_724 : STD_LOGIC_VECTOR (53 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln571_fu_412_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln571_reg_729 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln581_fu_424_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln581_reg_736 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln581_fu_430_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln581_reg_743 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln581_fu_436_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln581_reg_748 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln582_fu_442_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln582_reg_753 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln583_fu_448_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln583_reg_759 : STD_LOGIC_VECTOR (16 downto 0);
    signal scaleI_V_fu_609_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal scaleI_V_reg_765 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal icmp_ln314_fu_621_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal add_ln695_fu_626_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln695_reg_779 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln318_fu_632_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state5_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal add_ln695_3_fu_637_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal grp_load_data_1920_16_10_45_22_17_1_s_fu_302_ap_ready : STD_LOGIC;
    signal grp_load_data_1920_16_10_45_22_17_1_s_fu_302_ap_done : STD_LOGIC;
    signal op2_assign_fu_646_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal op2_assign_reg_798 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln882_fu_652_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln882_reg_804 : STD_LOGIC_VECTOR (0 downto 0);
    signal flagLoaded0_2_load_reg_826 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal zext_ln882_fu_663_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln882_reg_831 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_i_i52_i_i_fu_673_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_i_i52_i_i_reg_839 : STD_LOGIC_VECTOR (15 downto 0);
    signal prevIceil_3_load_reg_845 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln882_4_fu_668_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal flagLoaded1_1_load_reg_851 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_flag_phi_fu_244_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal flagLoaded1_1_load_1_reg_856 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state5 : STD_LOGIC;
    signal buffer_0_V_ce0 : STD_LOGIC;
    signal buffer_0_V_we0 : STD_LOGIC;
    signal buffer_0_V_ce1 : STD_LOGIC;
    signal buffer_0_V_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal buffer_1_V_ce0 : STD_LOGIC;
    signal buffer_1_V_we0 : STD_LOGIC;
    signal buffer_1_V_ce1 : STD_LOGIC;
    signal buffer_1_V_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf0_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf0_V_ce0 : STD_LOGIC;
    signal buf0_V_we0 : STD_LOGIC;
    signal buf0_V_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf1_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf1_V_ce0 : STD_LOGIC;
    signal buf1_V_we0 : STD_LOGIC;
    signal buf1_V_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_ap_start : STD_LOGIC;
    signal grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_ap_done : STD_LOGIC;
    signal grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_ap_idle : STD_LOGIC;
    signal grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_ap_ready : STD_LOGIC;
    signal grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_strmFlowU_scaled17_din : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_strmFlowU_scaled17_write : STD_LOGIC;
    signal grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_buf_r_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_buf_r_ce0 : STD_LOGIC;
    signal grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_buf_r_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_buffer_r_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_buffer_r_ce0 : STD_LOGIC;
    signal grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_buffer_r_we0 : STD_LOGIC;
    signal grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_buffer_r_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_buffer_r_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_buffer_r_ce1 : STD_LOGIC;
    signal grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_buffer1_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_buffer1_ce0 : STD_LOGIC;
    signal grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_buffer1_we0 : STD_LOGIC;
    signal grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_buffer1_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_buffer1_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_buffer1_ce1 : STD_LOGIC;
    signal grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_flagLoaded : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_row : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_load_data_1920_16_10_45_22_17_1_s_fu_302_ap_start : STD_LOGIC;
    signal grp_load_data_1920_16_10_45_22_17_1_s_fu_302_ap_idle : STD_LOGIC;
    signal grp_load_data_1920_16_10_45_22_17_1_s_fu_302_strmFlowU_split15_read : STD_LOGIC;
    signal grp_load_data_1920_16_10_45_22_17_1_s_fu_302_buf_r_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_load_data_1920_16_10_45_22_17_1_s_fu_302_buf_r_ce0 : STD_LOGIC;
    signal grp_load_data_1920_16_10_45_22_17_1_s_fu_302_buf_r_we0 : STD_LOGIC;
    signal grp_load_data_1920_16_10_45_22_17_1_s_fu_302_buf_r_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_load_data_1920_16_10_45_22_17_1_s_fu_302_inCurrRow : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_load_data_1920_16_10_45_22_17_1_s_fu_302_prevIceil_read_5 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_data_1920_16_10_45_22_17_1_s_fu_302_prevIceil_read : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_data_1920_16_10_45_22_17_1_s_fu_302_ap_return_0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_data_1920_16_10_45_22_17_1_s_fu_302_ap_return_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_reg_218 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal icmp_ln882_3_fu_616_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_flag_1_phi_fu_277_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal flag_reg_240 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_block_state11_on_subcall_done : BOOLEAN;
    signal empty_156_reg_252 : STD_LOGIC_VECTOR (15 downto 0);
    signal flagLoaded0_2_i_i_reg_263 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal grp_load_data_1920_16_10_45_22_17_1_s_fu_302_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal prevIceil_3_fu_140 : STD_LOGIC_VECTOR (31 downto 0);
    signal flagLoaded0_2_fu_144 : STD_LOGIC_VECTOR (0 downto 0);
    signal flagLoaded1_1_fu_148 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal grp_fu_318_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ireg_fu_352_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_tmp_V_fu_368_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln565_fu_382_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal p_Result_1_fu_386_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal zext_ln569_fu_394_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal p_Result_s_fu_360_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal man_V_1_fu_398_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal trunc_ln555_fu_356_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln455_fu_378_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_fu_418_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_fu_452_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln586_fu_473_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln586_fu_477_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal ashr_ln586_fu_481_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal bitcast_ln702_fu_490_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_493_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln581_fu_457_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln581cast_fu_509_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal xor_ln571_fu_518_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln582_fu_523_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln582_fu_535_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln582_fu_539_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln581_fu_545_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln585_fu_461_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln585_fu_550_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln586_1_fu_486_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal select_ln582_fu_528_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal xor_ln585_fu_564_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln585_1_fu_570_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln588_fu_501_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal select_ln585_fu_556_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal or_ln581_fu_584_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln603_fu_467_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln581_fu_589_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln603_fu_595_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln604_fu_513_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal select_ln585_1_fu_576_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal select_ln603_fu_601_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal outRows_cast_i_i_fu_643_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_318_ce : STD_LOGIC;
    signal ap_predicate_op161_call_state12 : BOOLEAN;
    signal ap_predicate_op163_call_state12 : BOOLEAN;
    signal ap_block_state12_on_subcall_done : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component pyr_dense_optical_flow_accel_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        strmFlowU_scaled17_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        strmFlowU_scaled17_full_n : IN STD_LOGIC;
        strmFlowU_scaled17_write : OUT STD_LOGIC;
        buf_r_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        buf_r_ce0 : OUT STD_LOGIC;
        buf_r_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        buffer_r_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        buffer_r_ce0 : OUT STD_LOGIC;
        buffer_r_we0 : OUT STD_LOGIC;
        buffer_r_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        buffer_r_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        buffer_r_ce1 : OUT STD_LOGIC;
        buffer_r_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        buffer1_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        buffer1_ce0 : OUT STD_LOGIC;
        buffer1_we0 : OUT STD_LOGIC;
        buffer1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        buffer1_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        buffer1_ce1 : OUT STD_LOGIC;
        buffer1_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        outRows : IN STD_LOGIC_VECTOR (15 downto 0);
        outCols : IN STD_LOGIC_VECTOR (15 downto 0);
        flagLoaded : IN STD_LOGIC_VECTOR (0 downto 0);
        row : IN STD_LOGIC_VECTOR (16 downto 0);
        scaleI : IN STD_LOGIC_VECTOR (16 downto 0);
        scaleJ : IN STD_LOGIC_VECTOR (16 downto 0) );
    end component;


    component pyr_dense_optical_flow_accel_load_data_1920_16_10_45_22_17_1_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        strmFlowU_split15_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        strmFlowU_split15_empty_n : IN STD_LOGIC;
        strmFlowU_split15_read : OUT STD_LOGIC;
        buf_r_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        buf_r_ce0 : OUT STD_LOGIC;
        buf_r_we0 : OUT STD_LOGIC;
        buf_r_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        rows : IN STD_LOGIC_VECTOR (15 downto 0);
        cols : IN STD_LOGIC_VECTOR (15 downto 0);
        inCurrRow : IN STD_LOGIC_VECTOR (15 downto 0);
        scaleI : IN STD_LOGIC_VECTOR (16 downto 0);
        prevIceil_read_5 : IN STD_LOGIC_VECTOR (31 downto 0);
        prevIceil_read : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component pyr_dense_optical_flow_accel_fpext_32ns_64_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component pyr_dense_optical_flow_accel_scale_up_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_falsebkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component pyr_dense_optical_flow_accel_scale_up_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_falsedEe IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    buffer_0_V_U : component pyr_dense_optical_flow_accel_scale_up_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_falsebkb
    generic map (
        DataWidth => 16,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_buffer_r_address0,
        ce0 => buffer_0_V_ce0,
        we0 => buffer_0_V_we0,
        d0 => grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_buffer_r_d0,
        address1 => grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_buffer_r_address1,
        ce1 => buffer_0_V_ce1,
        q1 => buffer_0_V_q1);

    buffer_1_V_U : component pyr_dense_optical_flow_accel_scale_up_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_falsebkb
    generic map (
        DataWidth => 16,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_buffer1_address0,
        ce0 => buffer_1_V_ce0,
        we0 => buffer_1_V_we0,
        d0 => grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_buffer1_d0,
        address1 => grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_buffer1_address1,
        ce1 => buffer_1_V_ce1,
        q1 => buffer_1_V_q1);

    buf0_V_U : component pyr_dense_optical_flow_accel_scale_up_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_falsedEe
    generic map (
        DataWidth => 16,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf0_V_address0,
        ce0 => buf0_V_ce0,
        we0 => buf0_V_we0,
        d0 => grp_load_data_1920_16_10_45_22_17_1_s_fu_302_buf_r_d0,
        q0 => buf0_V_q0);

    buf1_V_U : component pyr_dense_optical_flow_accel_scale_up_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_falsedEe
    generic map (
        DataWidth => 16,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf1_V_address0,
        ce0 => buf1_V_ce0,
        we0 => buf1_V_we0,
        d0 => grp_load_data_1920_16_10_45_22_17_1_s_fu_302_buf_r_d0,
        q0 => buf1_V_q0);

    grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286 : component pyr_dense_optical_flow_accel_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_ap_start,
        ap_done => grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_ap_done,
        ap_idle => grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_ap_idle,
        ap_ready => grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_ap_ready,
        strmFlowU_scaled17_din => grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_strmFlowU_scaled17_din,
        strmFlowU_scaled17_full_n => strmFlowU_scaled_full_n,
        strmFlowU_scaled17_write => grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_strmFlowU_scaled17_write,
        buf_r_address0 => grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_buf_r_address0,
        buf_r_ce0 => grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_buf_r_ce0,
        buf_r_q0 => grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_buf_r_q0,
        buffer_r_address0 => grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_buffer_r_address0,
        buffer_r_ce0 => grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_buffer_r_ce0,
        buffer_r_we0 => grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_buffer_r_we0,
        buffer_r_d0 => grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_buffer_r_d0,
        buffer_r_address1 => grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_buffer_r_address1,
        buffer_r_ce1 => grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_buffer_r_ce1,
        buffer_r_q1 => buffer_0_V_q1,
        buffer1_address0 => grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_buffer1_address0,
        buffer1_ce0 => grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_buffer1_ce0,
        buffer1_we0 => grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_buffer1_we0,
        buffer1_d0 => grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_buffer1_d0,
        buffer1_address1 => grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_buffer1_address1,
        buffer1_ce1 => grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_buffer1_ce1,
        buffer1_q1 => buffer_1_V_q1,
        outRows => trunc_ln360_reg_710,
        outCols => trunc_ln360_1_reg_718,
        flagLoaded => grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_flagLoaded,
        row => grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_row,
        scaleI => scaleI_V_reg_765,
        scaleJ => scaleI_V_reg_765);

    grp_load_data_1920_16_10_45_22_17_1_s_fu_302 : component pyr_dense_optical_flow_accel_load_data_1920_16_10_45_22_17_1_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_load_data_1920_16_10_45_22_17_1_s_fu_302_ap_start,
        ap_done => grp_load_data_1920_16_10_45_22_17_1_s_fu_302_ap_done,
        ap_idle => grp_load_data_1920_16_10_45_22_17_1_s_fu_302_ap_idle,
        ap_ready => grp_load_data_1920_16_10_45_22_17_1_s_fu_302_ap_ready,
        strmFlowU_split15_dout => strmFlowU_split_dout,
        strmFlowU_split15_empty_n => strmFlowU_split_empty_n,
        strmFlowU_split15_read => grp_load_data_1920_16_10_45_22_17_1_s_fu_302_strmFlowU_split15_read,
        buf_r_address0 => grp_load_data_1920_16_10_45_22_17_1_s_fu_302_buf_r_address0,
        buf_r_ce0 => grp_load_data_1920_16_10_45_22_17_1_s_fu_302_buf_r_ce0,
        buf_r_we0 => grp_load_data_1920_16_10_45_22_17_1_s_fu_302_buf_r_we0,
        buf_r_d0 => grp_load_data_1920_16_10_45_22_17_1_s_fu_302_buf_r_d0,
        rows => prev_rows_read_reg_690,
        cols => prev_cols_read_reg_695,
        inCurrRow => grp_load_data_1920_16_10_45_22_17_1_s_fu_302_inCurrRow,
        scaleI => scaleI_V_reg_765,
        prevIceil_read_5 => grp_load_data_1920_16_10_45_22_17_1_s_fu_302_prevIceil_read_5,
        prevIceil_read => grp_load_data_1920_16_10_45_22_17_1_s_fu_302_prevIceil_read,
        ap_return_0 => grp_load_data_1920_16_10_45_22_17_1_s_fu_302_ap_return_0,
        ap_return_1 => grp_load_data_1920_16_10_45_22_17_1_s_fu_302_ap_return_1);

    fpext_32ns_64_2_no_dsp_1_U214 : component pyr_dense_optical_flow_accel_fpext_32ns_64_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => scale_in_dout,
        ce => grp_fu_318_ce,
        dout => grp_fu_318_p1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_state12_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state5))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln314_fu_621_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state5))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state5);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln314_fu_621_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_load_data_1920_16_10_45_22_17_1_s_fu_302_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_load_data_1920_16_10_45_22_17_1_s_fu_302_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state8) or ((ap_phi_mux_flag_phi_fu_244_p4 = ap_const_lv1_0) and (icmp_ln882_4_fu_668_p2 = ap_const_lv1_1) and (icmp_ln882_reg_804 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((ap_phi_mux_flag_phi_fu_244_p4 = ap_const_lv1_1) and (icmp_ln882_4_fu_668_p2 = ap_const_lv1_1) and (icmp_ln882_reg_804 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
                    grp_load_data_1920_16_10_45_22_17_1_s_fu_302_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_load_data_1920_16_10_45_22_17_1_s_fu_302_ap_ready = ap_const_logic_1)) then 
                    grp_load_data_1920_16_10_45_22_17_1_s_fu_302_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_phi_mux_flag_phi_fu_244_p4 = ap_const_lv1_0) and (icmp_ln882_4_fu_668_p2 = ap_const_lv1_1) and (icmp_ln882_reg_804 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((ap_phi_mux_flag_phi_fu_244_p4 = ap_const_lv1_1) and (icmp_ln882_4_fu_668_p2 = ap_const_lv1_0) and (icmp_ln882_reg_804 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((ap_phi_mux_flag_phi_fu_244_p4 = ap_const_lv1_1) and (icmp_ln882_4_fu_668_p2 = ap_const_lv1_1) and (icmp_ln882_reg_804 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((ap_const_logic_1 = ap_CS_fsm_state10) and ((icmp_ln882_reg_804 = ap_const_lv1_0) or ((ap_phi_mux_flag_phi_fu_244_p4 = ap_const_lv1_0) and (icmp_ln882_4_fu_668_p2 = ap_const_lv1_0)))))) then 
                    grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_ap_ready = ap_const_logic_1)) then 
                    grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    empty_155_reg_229_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln318_fu_632_p2 = ap_const_lv1_0))) then 
                empty_155_reg_229 <= add_ln695_3_fu_637_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln314_fu_621_p2 = ap_const_lv1_0))) then 
                empty_155_reg_229 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    empty_156_reg_252_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln882_fu_652_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9) and (grp_load_data_1920_16_10_45_22_17_1_s_fu_302_ap_done = ap_const_logic_1))) then 
                empty_156_reg_252 <= ap_const_lv16_0;
            elsif (((ap_const_boolean_0 = ap_block_state11_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                empty_156_reg_252 <= add_i_i52_i_i_reg_839;
            end if; 
        end if;
    end process;

    empty_reg_218_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln882_3_fu_616_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3) and (scale_up_flag_read_reg_700 = ap_const_lv1_0))) then 
                empty_reg_218 <= ap_const_lv16_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                empty_reg_218 <= add_ln695_reg_779;
            end if; 
        end if;
    end process;

    flagLoaded0_2_i_i_reg_263_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln882_fu_652_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9) and (grp_load_data_1920_16_10_45_22_17_1_s_fu_302_ap_done = ap_const_logic_1))) then 
                flagLoaded0_2_i_i_reg_263 <= grp_load_data_1920_16_10_45_22_17_1_s_fu_302_ap_return_0;
            elsif (((ap_phi_mux_flag_phi_fu_244_p4 = ap_const_lv1_0) and (icmp_ln882_4_fu_668_p2 = ap_const_lv1_0) and (icmp_ln882_reg_804 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                flagLoaded0_2_i_i_reg_263 <= flagLoaded0_2_fu_144;
            end if; 
        end if;
    end process;

    flag_reg_240_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln882_fu_652_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9) and (grp_load_data_1920_16_10_45_22_17_1_s_fu_302_ap_done = ap_const_logic_1))) then 
                flag_reg_240 <= ap_const_lv1_0;
            elsif (((ap_const_boolean_0 = ap_block_state11_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                flag_reg_240 <= ap_phi_mux_flag_1_phi_fu_277_p4;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln882_reg_804 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                add_i_i52_i_i_reg_839 <= add_i_i52_i_i_fu_673_p2;
                flagLoaded0_2_load_reg_826 <= flagLoaded0_2_fu_144;
                    zext_ln882_reg_831(15 downto 0) <= zext_ln882_fu_663_p1(15 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln581_reg_743 <= add_ln581_fu_430_p2;
                icmp_ln571_reg_729 <= icmp_ln571_fu_412_p2;
                icmp_ln581_reg_736 <= icmp_ln581_fu_424_p2;
                icmp_ln582_reg_753 <= icmp_ln582_fu_442_p2;
                select_ln570_reg_724 <= select_ln570_fu_404_p3;
                sub_ln581_reg_748 <= sub_ln581_fu_436_p2;
                trunc_ln583_reg_759 <= trunc_ln583_fu_448_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                add_ln695_reg_779 <= add_ln695_fu_626_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln882_fu_652_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9) and (grp_load_data_1920_16_10_45_22_17_1_s_fu_302_ap_done = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_state11_on_subcall_done) and (flag_reg_240 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then
                flagLoaded0_2_fu_144 <= grp_load_data_1920_16_10_45_22_17_1_s_fu_302_ap_return_0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state11_on_subcall_done) and (flag_reg_240 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                flagLoaded1_1_fu_148 <= grp_load_data_1920_16_10_45_22_17_1_s_fu_302_ap_return_0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_phi_mux_flag_phi_fu_244_p4 = ap_const_lv1_1) and (icmp_ln882_4_fu_668_p2 = ap_const_lv1_0) and (icmp_ln882_reg_804 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                flagLoaded1_1_load_1_reg_856 <= flagLoaded1_1_fu_148;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_phi_mux_flag_phi_fu_244_p4 = ap_const_lv1_1) and (icmp_ln882_4_fu_668_p2 = ap_const_lv1_1) and (icmp_ln882_reg_804 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                flagLoaded1_1_load_reg_851 <= flagLoaded1_1_fu_148;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln318_reg_784 <= icmp_ln318_fu_632_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) and (grp_load_data_1920_16_10_45_22_17_1_s_fu_302_ap_done = ap_const_logic_1))) then
                icmp_ln882_reg_804 <= icmp_ln882_fu_652_p2;
                op2_assign_reg_798 <= op2_assign_fu_646_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln882_fu_652_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9) and (grp_load_data_1920_16_10_45_22_17_1_s_fu_302_ap_done = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_state11_on_subcall_done) and (flag_reg_240 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((ap_const_boolean_0 = ap_block_state11_on_subcall_done) and (flag_reg_240 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then
                prevIceil_3_fu_140 <= grp_load_data_1920_16_10_45_22_17_1_s_fu_302_ap_return_1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln882_4_fu_668_p2 = ap_const_lv1_1) and (icmp_ln882_reg_804 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                prevIceil_3_load_reg_845 <= prevIceil_3_fu_140;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((cols_out_full_n = ap_const_logic_0) or (rows_out_full_n = ap_const_logic_0) or (scale_in_empty_n = ap_const_logic_0) or (scale_up_flag_empty_n = ap_const_logic_0) or (cols_empty_n = ap_const_logic_0) or (rows_empty_n = ap_const_logic_0) or (prev_cols_empty_n = ap_const_logic_0) or (prev_rows_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                prev_cols_read_reg_695 <= prev_cols_dout;
                prev_rows_read_reg_690 <= prev_rows_dout;
                scale_in_read_reg_704 <= scale_in_dout;
                scale_up_flag_read_reg_700 <= scale_up_flag_dout;
                trunc_ln360_1_reg_718 <= trunc_ln360_1_fu_348_p1;
                trunc_ln360_reg_710 <= trunc_ln360_fu_344_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                scaleI_V_reg_765 <= scaleI_V_fu_609_p3;
            end if;
        end if;
    end process;
    zext_ln882_reg_831(16) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, prev_rows_empty_n, prev_cols_empty_n, rows_empty_n, cols_empty_n, scale_up_flag_empty_n, scale_in_empty_n, rows_out_full_n, cols_out_full_n, scale_up_flag_read_reg_700, ap_CS_fsm_state3, icmp_ln314_fu_621_p2, ap_CS_fsm_state4, icmp_ln318_fu_632_p2, ap_enable_reg_pp0_iter0, ap_CS_fsm_state9, grp_load_data_1920_16_10_45_22_17_1_s_fu_302_ap_done, icmp_ln882_reg_804, ap_CS_fsm_state10, icmp_ln882_4_fu_668_p2, ap_block_pp0_stage0_subdone, icmp_ln882_3_fu_616_p2, ap_CS_fsm_state11, ap_block_state11_on_subcall_done, ap_CS_fsm_state12, ap_block_state12_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((cols_out_full_n = ap_const_logic_0) or (rows_out_full_n = ap_const_logic_0) or (scale_in_empty_n = ap_const_logic_0) or (scale_up_flag_empty_n = ap_const_logic_0) or (cols_empty_n = ap_const_logic_0) or (rows_empty_n = ap_const_logic_0) or (prev_cols_empty_n = ap_const_logic_0) or (prev_rows_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((icmp_ln882_3_fu_616_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3) and (scale_up_flag_read_reg_700 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                elsif (((icmp_ln882_3_fu_616_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3) and (scale_up_flag_read_reg_700 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln314_fu_621_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln318_fu_632_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln318_fu_632_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (grp_load_data_1920_16_10_45_22_17_1_s_fu_302_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state10) and ((icmp_ln882_4_fu_668_p2 = ap_const_lv1_0) or (icmp_ln882_reg_804 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state11 => 
                if (((ap_const_boolean_0 = ap_block_state11_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                if (((ap_const_boolean_0 = ap_block_state12_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXX";
        end case;
    end process;
    F2_fu_418_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln455_fu_378_p1));
    add_i_i52_i_i_fu_673_p2 <= std_logic_vector(unsigned(empty_156_reg_252) + unsigned(ap_const_lv16_1));
    add_ln581_fu_430_p2 <= std_logic_vector(signed(ap_const_lv12_FF0) + signed(F2_fu_418_p2));
    add_ln695_3_fu_637_p2 <= std_logic_vector(unsigned(empty_155_reg_229) + unsigned(ap_const_lv16_1));
    add_ln695_fu_626_p2 <= std_logic_vector(unsigned(empty_reg_218) + unsigned(ap_const_lv16_1));
    and_ln581_fu_545_p2 <= (xor_ln582_fu_539_p2 and icmp_ln581_reg_736);
    and_ln582_fu_523_p2 <= (xor_ln571_fu_518_p2 and icmp_ln582_reg_753);
    and_ln585_1_fu_570_p2 <= (xor_ln585_fu_564_p2 and and_ln581_fu_545_p2);
    and_ln585_fu_550_p2 <= (icmp_ln585_fu_461_p2 and and_ln581_fu_545_p2);
    and_ln603_fu_595_p2 <= (xor_ln581_fu_589_p2 and icmp_ln603_fu_467_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(4);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(8);
    ap_CS_fsm_state11 <= ap_CS_fsm(9);
    ap_CS_fsm_state12 <= ap_CS_fsm(10);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state7 <= ap_CS_fsm(5);
    ap_CS_fsm_state8 <= ap_CS_fsm(6);
    ap_CS_fsm_state9 <= ap_CS_fsm(7);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(strmFlowU_split_empty_n, strmFlowU_scaled_full_n, ap_enable_reg_pp0_iter1, icmp_ln318_reg_784)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((icmp_ln318_reg_784 = ap_const_lv1_0) and (strmFlowU_scaled_full_n = ap_const_logic_0)) or ((icmp_ln318_reg_784 = ap_const_lv1_0) and (strmFlowU_split_empty_n = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(strmFlowU_split_empty_n, strmFlowU_scaled_full_n, ap_enable_reg_pp0_iter1, icmp_ln318_reg_784)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((icmp_ln318_reg_784 = ap_const_lv1_0) and (strmFlowU_scaled_full_n = ap_const_logic_0)) or ((icmp_ln318_reg_784 = ap_const_lv1_0) and (strmFlowU_split_empty_n = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(strmFlowU_split_empty_n, strmFlowU_scaled_full_n, ap_enable_reg_pp0_iter1, icmp_ln318_reg_784)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((icmp_ln318_reg_784 = ap_const_lv1_0) and (strmFlowU_scaled_full_n = ap_const_logic_0)) or ((icmp_ln318_reg_784 = ap_const_lv1_0) and (strmFlowU_split_empty_n = ap_const_logic_0))));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, prev_rows_empty_n, prev_cols_empty_n, rows_empty_n, cols_empty_n, scale_up_flag_empty_n, scale_in_empty_n, rows_out_full_n, cols_out_full_n)
    begin
                ap_block_state1 <= ((cols_out_full_n = ap_const_logic_0) or (rows_out_full_n = ap_const_logic_0) or (scale_in_empty_n = ap_const_logic_0) or (scale_up_flag_empty_n = ap_const_logic_0) or (cols_empty_n = ap_const_logic_0) or (rows_empty_n = ap_const_logic_0) or (prev_cols_empty_n = ap_const_logic_0) or (prev_rows_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state11_on_subcall_done_assign_proc : process(grp_load_data_1920_16_10_45_22_17_1_s_fu_302_ap_done, grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_ap_done, flag_reg_240)
    begin
                ap_block_state11_on_subcall_done <= (((flag_reg_240 = ap_const_lv1_1) and (grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_ap_done = ap_const_logic_0)) or ((flag_reg_240 = ap_const_lv1_1) and (grp_load_data_1920_16_10_45_22_17_1_s_fu_302_ap_done = ap_const_logic_0)) or ((flag_reg_240 = ap_const_lv1_0) and (grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_ap_done = ap_const_logic_0)) or ((flag_reg_240 = ap_const_lv1_0) and (grp_load_data_1920_16_10_45_22_17_1_s_fu_302_ap_done = ap_const_logic_0)));
    end process;


    ap_block_state12_on_subcall_done_assign_proc : process(grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_ap_done, ap_predicate_op161_call_state12, ap_predicate_op163_call_state12)
    begin
                ap_block_state12_on_subcall_done <= (((ap_predicate_op163_call_state12 = ap_const_boolean_1) and (grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_ap_done = ap_const_logic_0)) or ((ap_predicate_op161_call_state12 = ap_const_boolean_1) and (grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_ap_done = ap_const_logic_0)));
    end process;

        ap_block_state5_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state6_pp0_stage0_iter1_assign_proc : process(strmFlowU_split_empty_n, strmFlowU_scaled_full_n, icmp_ln318_reg_784)
    begin
                ap_block_state6_pp0_stage0_iter1 <= (((icmp_ln318_reg_784 = ap_const_lv1_0) and (strmFlowU_scaled_full_n = ap_const_logic_0)) or ((icmp_ln318_reg_784 = ap_const_lv1_0) and (strmFlowU_split_empty_n = ap_const_logic_0)));
    end process;


    ap_condition_pp0_exit_iter0_state5_assign_proc : process(icmp_ln318_fu_632_p2)
    begin
        if ((icmp_ln318_fu_632_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state5 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state12, ap_block_state12_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state12_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_flag_1_phi_fu_277_p4_assign_proc : process(flag_reg_240, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
            if ((flag_reg_240 = ap_const_lv1_0)) then 
                ap_phi_mux_flag_1_phi_fu_277_p4 <= ap_const_lv1_1;
            elsif ((flag_reg_240 = ap_const_lv1_1)) then 
                ap_phi_mux_flag_1_phi_fu_277_p4 <= ap_const_lv1_0;
            else 
                ap_phi_mux_flag_1_phi_fu_277_p4 <= "X";
            end if;
        else 
            ap_phi_mux_flag_1_phi_fu_277_p4 <= "X";
        end if; 
    end process;

    ap_phi_mux_flag_phi_fu_244_p4 <= flag_reg_240;

    ap_predicate_op161_call_state12_assign_proc : process(scale_up_flag_read_reg_700, icmp_ln882_reg_804, flag_reg_240)
    begin
                ap_predicate_op161_call_state12 <= (((icmp_ln882_reg_804 = ap_const_lv1_0) and (scale_up_flag_read_reg_700 = ap_const_lv1_1)) or ((flag_reg_240 = ap_const_lv1_0) and (scale_up_flag_read_reg_700 = ap_const_lv1_1)));
    end process;


    ap_predicate_op163_call_state12_assign_proc : process(scale_up_flag_read_reg_700, icmp_ln882_reg_804, flag_reg_240)
    begin
                ap_predicate_op163_call_state12 <= ((flag_reg_240 = ap_const_lv1_1) and (icmp_ln882_reg_804 = ap_const_lv1_1) and (scale_up_flag_read_reg_700 = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state12, ap_block_state12_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state12_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ashr_ln586_fu_481_p2 <= std_logic_vector(shift_right(signed(select_ln570_reg_724),to_integer(unsigned('0' & zext_ln586_fu_477_p1(31-1 downto 0)))));
    bitcast_ln702_fu_490_p1 <= scale_in_read_reg_704;

    buf0_V_address0_assign_proc : process(scale_up_flag_read_reg_700, ap_CS_fsm_state9, icmp_ln882_reg_804, grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_buf_r_address0, grp_load_data_1920_16_10_45_22_17_1_s_fu_302_buf_r_address0, flag_reg_240, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or ((flag_reg_240 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            buf0_V_address0 <= grp_load_data_1920_16_10_45_22_17_1_s_fu_302_buf_r_address0;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state12) and (((icmp_ln882_reg_804 = ap_const_lv1_0) and (scale_up_flag_read_reg_700 = ap_const_lv1_1)) or ((flag_reg_240 = ap_const_lv1_0) and (scale_up_flag_read_reg_700 = ap_const_lv1_1)))) or ((flag_reg_240 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            buf0_V_address0 <= grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_buf_r_address0;
        else 
            buf0_V_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf0_V_ce0_assign_proc : process(scale_up_flag_read_reg_700, ap_CS_fsm_state9, icmp_ln882_reg_804, grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_buf_r_ce0, grp_load_data_1920_16_10_45_22_17_1_s_fu_302_buf_r_ce0, flag_reg_240, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or ((flag_reg_240 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            buf0_V_ce0 <= grp_load_data_1920_16_10_45_22_17_1_s_fu_302_buf_r_ce0;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state12) and (((icmp_ln882_reg_804 = ap_const_lv1_0) and (scale_up_flag_read_reg_700 = ap_const_lv1_1)) or ((flag_reg_240 = ap_const_lv1_0) and (scale_up_flag_read_reg_700 = ap_const_lv1_1)))) or ((flag_reg_240 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            buf0_V_ce0 <= grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_buf_r_ce0;
        else 
            buf0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf0_V_we0_assign_proc : process(ap_CS_fsm_state9, grp_load_data_1920_16_10_45_22_17_1_s_fu_302_buf_r_we0, flag_reg_240, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or ((flag_reg_240 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            buf0_V_we0 <= grp_load_data_1920_16_10_45_22_17_1_s_fu_302_buf_r_we0;
        else 
            buf0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    buf1_V_address0_assign_proc : process(scale_up_flag_read_reg_700, icmp_ln882_reg_804, grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_buf_r_address0, grp_load_data_1920_16_10_45_22_17_1_s_fu_302_buf_r_address0, flag_reg_240, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((flag_reg_240 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            buf1_V_address0 <= grp_load_data_1920_16_10_45_22_17_1_s_fu_302_buf_r_address0;
        elsif ((((flag_reg_240 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((flag_reg_240 = ap_const_lv1_1) and (icmp_ln882_reg_804 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12) and (scale_up_flag_read_reg_700 = ap_const_lv1_1)))) then 
            buf1_V_address0 <= grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_buf_r_address0;
        else 
            buf1_V_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf1_V_ce0_assign_proc : process(scale_up_flag_read_reg_700, icmp_ln882_reg_804, grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_buf_r_ce0, grp_load_data_1920_16_10_45_22_17_1_s_fu_302_buf_r_ce0, flag_reg_240, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((flag_reg_240 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            buf1_V_ce0 <= grp_load_data_1920_16_10_45_22_17_1_s_fu_302_buf_r_ce0;
        elsif ((((flag_reg_240 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((flag_reg_240 = ap_const_lv1_1) and (icmp_ln882_reg_804 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12) and (scale_up_flag_read_reg_700 = ap_const_lv1_1)))) then 
            buf1_V_ce0 <= grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_buf_r_ce0;
        else 
            buf1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf1_V_we0_assign_proc : process(grp_load_data_1920_16_10_45_22_17_1_s_fu_302_buf_r_we0, flag_reg_240, ap_CS_fsm_state11)
    begin
        if (((flag_reg_240 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            buf1_V_we0 <= grp_load_data_1920_16_10_45_22_17_1_s_fu_302_buf_r_we0;
        else 
            buf1_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    buffer_0_V_ce0_assign_proc : process(scale_up_flag_read_reg_700, icmp_ln882_reg_804, grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_buffer_r_ce0, flag_reg_240, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state12) and (((icmp_ln882_reg_804 = ap_const_lv1_0) and (scale_up_flag_read_reg_700 = ap_const_lv1_1)) or ((flag_reg_240 = ap_const_lv1_0) and (scale_up_flag_read_reg_700 = ap_const_lv1_1)))) or ((flag_reg_240 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((flag_reg_240 = ap_const_lv1_1) and (icmp_ln882_reg_804 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12) and (scale_up_flag_read_reg_700 = ap_const_lv1_1)) or ((flag_reg_240 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            buffer_0_V_ce0 <= grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_buffer_r_ce0;
        else 
            buffer_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buffer_0_V_ce1_assign_proc : process(scale_up_flag_read_reg_700, icmp_ln882_reg_804, grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_buffer_r_ce1, flag_reg_240, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state12) and (((icmp_ln882_reg_804 = ap_const_lv1_0) and (scale_up_flag_read_reg_700 = ap_const_lv1_1)) or ((flag_reg_240 = ap_const_lv1_0) and (scale_up_flag_read_reg_700 = ap_const_lv1_1)))) or ((flag_reg_240 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((flag_reg_240 = ap_const_lv1_1) and (icmp_ln882_reg_804 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12) and (scale_up_flag_read_reg_700 = ap_const_lv1_1)) or ((flag_reg_240 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            buffer_0_V_ce1 <= grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_buffer_r_ce1;
        else 
            buffer_0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buffer_0_V_we0_assign_proc : process(scale_up_flag_read_reg_700, icmp_ln882_reg_804, grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_buffer_r_we0, flag_reg_240, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state12) and (((icmp_ln882_reg_804 = ap_const_lv1_0) and (scale_up_flag_read_reg_700 = ap_const_lv1_1)) or ((flag_reg_240 = ap_const_lv1_0) and (scale_up_flag_read_reg_700 = ap_const_lv1_1)))) or ((flag_reg_240 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((flag_reg_240 = ap_const_lv1_1) and (icmp_ln882_reg_804 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12) and (scale_up_flag_read_reg_700 = ap_const_lv1_1)) or ((flag_reg_240 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            buffer_0_V_we0 <= grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_buffer_r_we0;
        else 
            buffer_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    buffer_1_V_ce0_assign_proc : process(scale_up_flag_read_reg_700, icmp_ln882_reg_804, grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_buffer1_ce0, flag_reg_240, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state12) and (((icmp_ln882_reg_804 = ap_const_lv1_0) and (scale_up_flag_read_reg_700 = ap_const_lv1_1)) or ((flag_reg_240 = ap_const_lv1_0) and (scale_up_flag_read_reg_700 = ap_const_lv1_1)))) or ((flag_reg_240 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((flag_reg_240 = ap_const_lv1_1) and (icmp_ln882_reg_804 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12) and (scale_up_flag_read_reg_700 = ap_const_lv1_1)) or ((flag_reg_240 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            buffer_1_V_ce0 <= grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_buffer1_ce0;
        else 
            buffer_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buffer_1_V_ce1_assign_proc : process(scale_up_flag_read_reg_700, icmp_ln882_reg_804, grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_buffer1_ce1, flag_reg_240, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state12) and (((icmp_ln882_reg_804 = ap_const_lv1_0) and (scale_up_flag_read_reg_700 = ap_const_lv1_1)) or ((flag_reg_240 = ap_const_lv1_0) and (scale_up_flag_read_reg_700 = ap_const_lv1_1)))) or ((flag_reg_240 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((flag_reg_240 = ap_const_lv1_1) and (icmp_ln882_reg_804 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12) and (scale_up_flag_read_reg_700 = ap_const_lv1_1)) or ((flag_reg_240 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            buffer_1_V_ce1 <= grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_buffer1_ce1;
        else 
            buffer_1_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buffer_1_V_we0_assign_proc : process(scale_up_flag_read_reg_700, icmp_ln882_reg_804, grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_buffer1_we0, flag_reg_240, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state12) and (((icmp_ln882_reg_804 = ap_const_lv1_0) and (scale_up_flag_read_reg_700 = ap_const_lv1_1)) or ((flag_reg_240 = ap_const_lv1_0) and (scale_up_flag_read_reg_700 = ap_const_lv1_1)))) or ((flag_reg_240 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((flag_reg_240 = ap_const_lv1_1) and (icmp_ln882_reg_804 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12) and (scale_up_flag_read_reg_700 = ap_const_lv1_1)) or ((flag_reg_240 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            buffer_1_V_we0 <= grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_buffer1_we0;
        else 
            buffer_1_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    cols_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, cols_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            cols_blk_n <= cols_empty_n;
        else 
            cols_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    cols_out_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, cols_out_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            cols_out_blk_n <= cols_out_full_n;
        else 
            cols_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    cols_out_din <= cols_dout;

    cols_out_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, prev_rows_empty_n, prev_cols_empty_n, rows_empty_n, cols_empty_n, scale_up_flag_empty_n, scale_in_empty_n, rows_out_full_n, cols_out_full_n)
    begin
        if ((not(((cols_out_full_n = ap_const_logic_0) or (rows_out_full_n = ap_const_logic_0) or (scale_in_empty_n = ap_const_logic_0) or (scale_up_flag_empty_n = ap_const_logic_0) or (cols_empty_n = ap_const_logic_0) or (rows_empty_n = ap_const_logic_0) or (prev_cols_empty_n = ap_const_logic_0) or (prev_rows_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            cols_out_write <= ap_const_logic_1;
        else 
            cols_out_write <= ap_const_logic_0;
        end if; 
    end process;


    cols_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, prev_rows_empty_n, prev_cols_empty_n, rows_empty_n, cols_empty_n, scale_up_flag_empty_n, scale_in_empty_n, rows_out_full_n, cols_out_full_n)
    begin
        if ((not(((cols_out_full_n = ap_const_logic_0) or (rows_out_full_n = ap_const_logic_0) or (scale_in_empty_n = ap_const_logic_0) or (scale_up_flag_empty_n = ap_const_logic_0) or (cols_empty_n = ap_const_logic_0) or (rows_empty_n = ap_const_logic_0) or (prev_cols_empty_n = ap_const_logic_0) or (prev_rows_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            cols_read <= ap_const_logic_1;
        else 
            cols_read <= ap_const_logic_0;
        end if; 
    end process;

    exp_tmp_V_fu_368_p4 <= ireg_fu_352_p1(62 downto 52);

    grp_fu_318_ce_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, prev_rows_empty_n, prev_cols_empty_n, rows_empty_n, cols_empty_n, scale_up_flag_empty_n, scale_in_empty_n, rows_out_full_n, cols_out_full_n, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (not(((cols_out_full_n = ap_const_logic_0) or (rows_out_full_n = ap_const_logic_0) or (scale_in_empty_n = ap_const_logic_0) or (scale_up_flag_empty_n = ap_const_logic_0) or (cols_empty_n = ap_const_logic_0) or (rows_empty_n = ap_const_logic_0) or (prev_cols_empty_n = ap_const_logic_0) or (prev_rows_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            grp_fu_318_ce <= ap_const_logic_1;
        else 
            grp_fu_318_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_load_data_1920_16_10_45_22_17_1_s_fu_302_ap_start <= grp_load_data_1920_16_10_45_22_17_1_s_fu_302_ap_start_reg;

    grp_load_data_1920_16_10_45_22_17_1_s_fu_302_inCurrRow_assign_proc : process(ap_CS_fsm_state9, add_i_i52_i_i_reg_839, flag_reg_240, ap_CS_fsm_state11)
    begin
        if ((((flag_reg_240 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((flag_reg_240 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            grp_load_data_1920_16_10_45_22_17_1_s_fu_302_inCurrRow <= add_i_i52_i_i_reg_839;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_load_data_1920_16_10_45_22_17_1_s_fu_302_inCurrRow <= ap_const_lv16_0;
        else 
            grp_load_data_1920_16_10_45_22_17_1_s_fu_302_inCurrRow <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_load_data_1920_16_10_45_22_17_1_s_fu_302_prevIceil_read_assign_proc : process(ap_CS_fsm_state9, prevIceil_3_load_reg_845, flag_reg_240, ap_CS_fsm_state11)
    begin
        if ((((flag_reg_240 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((flag_reg_240 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            grp_load_data_1920_16_10_45_22_17_1_s_fu_302_prevIceil_read <= prevIceil_3_load_reg_845;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_load_data_1920_16_10_45_22_17_1_s_fu_302_prevIceil_read <= ap_const_lv32_FFFFFFFF;
        else 
            grp_load_data_1920_16_10_45_22_17_1_s_fu_302_prevIceil_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_load_data_1920_16_10_45_22_17_1_s_fu_302_prevIceil_read_5_assign_proc : process(ap_CS_fsm_state9, prevIceil_3_load_reg_845, flag_reg_240, ap_CS_fsm_state11)
    begin
        if ((((flag_reg_240 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((flag_reg_240 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            grp_load_data_1920_16_10_45_22_17_1_s_fu_302_prevIceil_read_5 <= prevIceil_3_load_reg_845;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_load_data_1920_16_10_45_22_17_1_s_fu_302_prevIceil_read_5 <= ap_const_lv32_FFFFFFFF;
        else 
            grp_load_data_1920_16_10_45_22_17_1_s_fu_302_prevIceil_read_5 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_ap_start <= grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_ap_start_reg;

    grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_buf_r_q0_assign_proc : process(scale_up_flag_read_reg_700, icmp_ln882_reg_804, buf0_V_q0, buf1_V_q0, flag_reg_240, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if ((((flag_reg_240 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((flag_reg_240 = ap_const_lv1_1) and (icmp_ln882_reg_804 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12) and (scale_up_flag_read_reg_700 = ap_const_lv1_1)))) then 
            grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_buf_r_q0 <= buf1_V_q0;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state12) and (((icmp_ln882_reg_804 = ap_const_lv1_0) and (scale_up_flag_read_reg_700 = ap_const_lv1_1)) or ((flag_reg_240 = ap_const_lv1_0) and (scale_up_flag_read_reg_700 = ap_const_lv1_1)))) or ((flag_reg_240 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_buf_r_q0 <= buf0_V_q0;
        else 
            grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_buf_r_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_flagLoaded_assign_proc : process(scale_up_flag_read_reg_700, icmp_ln882_reg_804, flagLoaded0_2_load_reg_826, flagLoaded1_1_load_reg_851, flagLoaded1_1_load_1_reg_856, flag_reg_240, ap_CS_fsm_state11, flagLoaded0_2_i_i_reg_263, ap_CS_fsm_state12)
    begin
        if (((flag_reg_240 = ap_const_lv1_1) and (icmp_ln882_reg_804 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12) and (scale_up_flag_read_reg_700 = ap_const_lv1_1))) then 
            grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_flagLoaded <= flagLoaded1_1_load_1_reg_856;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) and (((icmp_ln882_reg_804 = ap_const_lv1_0) and (scale_up_flag_read_reg_700 = ap_const_lv1_1)) or ((flag_reg_240 = ap_const_lv1_0) and (scale_up_flag_read_reg_700 = ap_const_lv1_1))))) then 
            grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_flagLoaded <= flagLoaded0_2_i_i_reg_263;
        elsif (((flag_reg_240 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_flagLoaded <= flagLoaded1_1_load_reg_851;
        elsif (((flag_reg_240 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_flagLoaded <= flagLoaded0_2_load_reg_826;
        else 
            grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_flagLoaded <= "X";
        end if; 
    end process;


    grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_row_assign_proc : process(scale_up_flag_read_reg_700, op2_assign_reg_798, icmp_ln882_reg_804, zext_ln882_reg_831, flag_reg_240, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state12) and (((icmp_ln882_reg_804 = ap_const_lv1_0) and (scale_up_flag_read_reg_700 = ap_const_lv1_1)) or ((flag_reg_240 = ap_const_lv1_0) and (scale_up_flag_read_reg_700 = ap_const_lv1_1)))) or ((flag_reg_240 = ap_const_lv1_1) and (icmp_ln882_reg_804 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12) and (scale_up_flag_read_reg_700 = ap_const_lv1_1)))) then 
            grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_row <= op2_assign_reg_798;
        elsif ((((flag_reg_240 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((flag_reg_240 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_row <= zext_ln882_reg_831;
        else 
            grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_row <= "XXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    icmp_ln314_fu_621_p2 <= "1" when (empty_reg_218 = trunc_ln360_reg_710) else "0";
    icmp_ln318_fu_632_p2 <= "1" when (empty_155_reg_229 = trunc_ln360_1_reg_718) else "0";
    icmp_ln571_fu_412_p2 <= "1" when (trunc_ln555_fu_356_p1 = ap_const_lv63_0) else "0";
    icmp_ln581_fu_424_p2 <= "1" when (signed(F2_fu_418_p2) > signed(ap_const_lv12_10)) else "0";
    icmp_ln582_fu_442_p2 <= "1" when (F2_fu_418_p2 = ap_const_lv12_10) else "0";
    icmp_ln585_fu_461_p2 <= "1" when (unsigned(sh_amt_fu_452_p3) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln603_fu_467_p2 <= "1" when (unsigned(sh_amt_fu_452_p3) < unsigned(ap_const_lv12_11)) else "0";
    icmp_ln882_3_fu_616_p2 <= "1" when (trunc_ln360_reg_710 = ap_const_lv16_0) else "0";
    icmp_ln882_4_fu_668_p2 <= "1" when (signed(zext_ln882_fu_663_p1) < signed(op2_assign_reg_798)) else "0";
    icmp_ln882_fu_652_p2 <= "1" when (signed(op2_assign_fu_646_p2) > signed(ap_const_lv17_0)) else "0";
    ireg_fu_352_p1 <= grp_fu_318_p1;
    man_V_1_fu_398_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(zext_ln569_fu_394_p1));
    op2_assign_fu_646_p2 <= std_logic_vector(unsigned(outRows_cast_i_i_fu_643_p1) + unsigned(ap_const_lv17_1FFFF));
    or_ln581_fu_584_p2 <= (or_ln582_fu_535_p2 or icmp_ln581_reg_736);
    or_ln582_fu_535_p2 <= (icmp_ln582_reg_753 or icmp_ln571_reg_729);
    outRows_cast_i_i_fu_643_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln360_reg_710),17));
    p_Result_1_fu_386_p3 <= (ap_const_lv1_1 & trunc_ln565_fu_382_p1);
    p_Result_s_fu_360_p3 <= ireg_fu_352_p1(63 downto 63);

    prev_cols_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, prev_cols_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            prev_cols_blk_n <= prev_cols_empty_n;
        else 
            prev_cols_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    prev_cols_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, prev_rows_empty_n, prev_cols_empty_n, rows_empty_n, cols_empty_n, scale_up_flag_empty_n, scale_in_empty_n, rows_out_full_n, cols_out_full_n)
    begin
        if ((not(((cols_out_full_n = ap_const_logic_0) or (rows_out_full_n = ap_const_logic_0) or (scale_in_empty_n = ap_const_logic_0) or (scale_up_flag_empty_n = ap_const_logic_0) or (cols_empty_n = ap_const_logic_0) or (rows_empty_n = ap_const_logic_0) or (prev_cols_empty_n = ap_const_logic_0) or (prev_rows_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            prev_cols_read <= ap_const_logic_1;
        else 
            prev_cols_read <= ap_const_logic_0;
        end if; 
    end process;


    prev_rows_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, prev_rows_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            prev_rows_blk_n <= prev_rows_empty_n;
        else 
            prev_rows_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    prev_rows_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, prev_rows_empty_n, prev_cols_empty_n, rows_empty_n, cols_empty_n, scale_up_flag_empty_n, scale_in_empty_n, rows_out_full_n, cols_out_full_n)
    begin
        if ((not(((cols_out_full_n = ap_const_logic_0) or (rows_out_full_n = ap_const_logic_0) or (scale_in_empty_n = ap_const_logic_0) or (scale_up_flag_empty_n = ap_const_logic_0) or (cols_empty_n = ap_const_logic_0) or (rows_empty_n = ap_const_logic_0) or (prev_cols_empty_n = ap_const_logic_0) or (prev_rows_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            prev_rows_read <= ap_const_logic_1;
        else 
            prev_rows_read <= ap_const_logic_0;
        end if; 
    end process;


    rows_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, rows_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            rows_blk_n <= rows_empty_n;
        else 
            rows_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    rows_out_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, rows_out_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            rows_out_blk_n <= rows_out_full_n;
        else 
            rows_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    rows_out_din <= rows_dout;

    rows_out_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, prev_rows_empty_n, prev_cols_empty_n, rows_empty_n, cols_empty_n, scale_up_flag_empty_n, scale_in_empty_n, rows_out_full_n, cols_out_full_n)
    begin
        if ((not(((cols_out_full_n = ap_const_logic_0) or (rows_out_full_n = ap_const_logic_0) or (scale_in_empty_n = ap_const_logic_0) or (scale_up_flag_empty_n = ap_const_logic_0) or (cols_empty_n = ap_const_logic_0) or (rows_empty_n = ap_const_logic_0) or (prev_cols_empty_n = ap_const_logic_0) or (prev_rows_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            rows_out_write <= ap_const_logic_1;
        else 
            rows_out_write <= ap_const_logic_0;
        end if; 
    end process;


    rows_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, prev_rows_empty_n, prev_cols_empty_n, rows_empty_n, cols_empty_n, scale_up_flag_empty_n, scale_in_empty_n, rows_out_full_n, cols_out_full_n)
    begin
        if ((not(((cols_out_full_n = ap_const_logic_0) or (rows_out_full_n = ap_const_logic_0) or (scale_in_empty_n = ap_const_logic_0) or (scale_up_flag_empty_n = ap_const_logic_0) or (cols_empty_n = ap_const_logic_0) or (rows_empty_n = ap_const_logic_0) or (prev_cols_empty_n = ap_const_logic_0) or (prev_rows_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            rows_read <= ap_const_logic_1;
        else 
            rows_read <= ap_const_logic_0;
        end if; 
    end process;

    scaleI_V_fu_609_p3 <= 
        ap_const_lv17_0 when (icmp_ln571_reg_729(0) = '1') else 
        select_ln603_fu_601_p3;

    scale_in_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, scale_in_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            scale_in_blk_n <= scale_in_empty_n;
        else 
            scale_in_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    scale_in_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, prev_rows_empty_n, prev_cols_empty_n, rows_empty_n, cols_empty_n, scale_up_flag_empty_n, scale_in_empty_n, rows_out_full_n, cols_out_full_n)
    begin
        if ((not(((cols_out_full_n = ap_const_logic_0) or (rows_out_full_n = ap_const_logic_0) or (scale_in_empty_n = ap_const_logic_0) or (scale_up_flag_empty_n = ap_const_logic_0) or (cols_empty_n = ap_const_logic_0) or (rows_empty_n = ap_const_logic_0) or (prev_cols_empty_n = ap_const_logic_0) or (prev_rows_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            scale_in_read <= ap_const_logic_1;
        else 
            scale_in_read <= ap_const_logic_0;
        end if; 
    end process;


    scale_up_flag_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, scale_up_flag_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            scale_up_flag_blk_n <= scale_up_flag_empty_n;
        else 
            scale_up_flag_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    scale_up_flag_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, prev_rows_empty_n, prev_cols_empty_n, rows_empty_n, cols_empty_n, scale_up_flag_empty_n, scale_in_empty_n, rows_out_full_n, cols_out_full_n)
    begin
        if ((not(((cols_out_full_n = ap_const_logic_0) or (rows_out_full_n = ap_const_logic_0) or (scale_in_empty_n = ap_const_logic_0) or (scale_up_flag_empty_n = ap_const_logic_0) or (cols_empty_n = ap_const_logic_0) or (rows_empty_n = ap_const_logic_0) or (prev_cols_empty_n = ap_const_logic_0) or (prev_rows_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            scale_up_flag_read <= ap_const_logic_1;
        else 
            scale_up_flag_read <= ap_const_logic_0;
        end if; 
    end process;

    select_ln570_fu_404_p3 <= 
        man_V_1_fu_398_p2 when (p_Result_s_fu_360_p3(0) = '1') else 
        zext_ln569_fu_394_p1;
    select_ln582_fu_528_p3 <= 
        trunc_ln583_reg_759 when (and_ln582_fu_523_p2(0) = '1') else 
        ap_const_lv17_0;
    select_ln585_1_fu_576_p3 <= 
        select_ln588_fu_501_p3 when (and_ln585_1_fu_570_p2(0) = '1') else 
        select_ln585_fu_556_p3;
    select_ln585_fu_556_p3 <= 
        trunc_ln586_1_fu_486_p1 when (and_ln585_fu_550_p2(0) = '1') else 
        select_ln582_fu_528_p3;
    select_ln588_fu_501_p3 <= 
        ap_const_lv17_1FFFF when (tmp_fu_493_p3(0) = '1') else 
        ap_const_lv17_0;
    select_ln603_fu_601_p3 <= 
        shl_ln604_fu_513_p2 when (and_ln603_fu_595_p2(0) = '1') else 
        select_ln585_1_fu_576_p3;
        sext_ln581_fu_457_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_fu_452_p3),32));

    sext_ln581cast_fu_509_p1 <= sext_ln581_fu_457_p1(17 - 1 downto 0);
    sh_amt_fu_452_p3 <= 
        add_ln581_reg_743 when (icmp_ln581_reg_736(0) = '1') else 
        sub_ln581_reg_748;
    shl_ln604_fu_513_p2 <= std_logic_vector(shift_left(unsigned(trunc_ln583_reg_759),to_integer(unsigned('0' & sext_ln581cast_fu_509_p1(17-1 downto 0)))));

    strmFlowU_scaled_blk_n_assign_proc : process(strmFlowU_scaled_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln318_reg_784)
    begin
        if (((icmp_ln318_reg_784 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            strmFlowU_scaled_blk_n <= strmFlowU_scaled_full_n;
        else 
            strmFlowU_scaled_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    strmFlowU_scaled_din_assign_proc : process(strmFlowU_split_dout, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln318_reg_784, scale_up_flag_read_reg_700, icmp_ln882_reg_804, grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_strmFlowU_scaled17_din, flag_reg_240, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_block_pp0_stage0_01001)
    begin
        if (((icmp_ln318_reg_784 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            strmFlowU_scaled_din <= strmFlowU_split_dout;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state12) and (((icmp_ln882_reg_804 = ap_const_lv1_0) and (scale_up_flag_read_reg_700 = ap_const_lv1_1)) or ((flag_reg_240 = ap_const_lv1_0) and (scale_up_flag_read_reg_700 = ap_const_lv1_1)))) or ((flag_reg_240 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((flag_reg_240 = ap_const_lv1_1) and (icmp_ln882_reg_804 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12) and (scale_up_flag_read_reg_700 = ap_const_lv1_1)) or ((flag_reg_240 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            strmFlowU_scaled_din <= grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_strmFlowU_scaled17_din;
        else 
            strmFlowU_scaled_din <= grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_strmFlowU_scaled17_din;
        end if; 
    end process;


    strmFlowU_scaled_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln318_reg_784, scale_up_flag_read_reg_700, ap_block_pp0_stage0_11001, icmp_ln882_reg_804, grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_strmFlowU_scaled17_write, flag_reg_240, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((icmp_ln318_reg_784 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            strmFlowU_scaled_write <= ap_const_logic_1;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state12) and (((icmp_ln882_reg_804 = ap_const_lv1_0) and (scale_up_flag_read_reg_700 = ap_const_lv1_1)) or ((flag_reg_240 = ap_const_lv1_0) and (scale_up_flag_read_reg_700 = ap_const_lv1_1)))) or ((flag_reg_240 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((flag_reg_240 = ap_const_lv1_1) and (icmp_ln882_reg_804 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12) and (scale_up_flag_read_reg_700 = ap_const_lv1_1)) or ((flag_reg_240 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            strmFlowU_scaled_write <= grp_process_unsigned_short_1080_unsigned_short_1920_16_10_45_22_48_16_17_1_s_fu_286_strmFlowU_scaled17_write;
        else 
            strmFlowU_scaled_write <= ap_const_logic_0;
        end if; 
    end process;


    strmFlowU_split_blk_n_assign_proc : process(strmFlowU_split_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln318_reg_784)
    begin
        if (((icmp_ln318_reg_784 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            strmFlowU_split_blk_n <= strmFlowU_split_empty_n;
        else 
            strmFlowU_split_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    strmFlowU_split_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln318_reg_784, ap_block_pp0_stage0_11001, ap_CS_fsm_state9, grp_load_data_1920_16_10_45_22_17_1_s_fu_302_strmFlowU_split15_read, flag_reg_240, ap_CS_fsm_state11)
    begin
        if (((icmp_ln318_reg_784 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            strmFlowU_split_read <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) or ((flag_reg_240 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((flag_reg_240 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            strmFlowU_split_read <= grp_load_data_1920_16_10_45_22_17_1_s_fu_302_strmFlowU_split15_read;
        else 
            strmFlowU_split_read <= ap_const_logic_0;
        end if; 
    end process;

    sub_ln581_fu_436_p2 <= std_logic_vector(unsigned(ap_const_lv12_10) - unsigned(F2_fu_418_p2));
    tmp_fu_493_p3 <= bitcast_ln702_fu_490_p1(31 downto 31);
    trunc_ln360_1_fu_348_p1 <= cols_dout(16 - 1 downto 0);
    trunc_ln360_fu_344_p1 <= rows_dout(16 - 1 downto 0);
    trunc_ln555_fu_356_p1 <= ireg_fu_352_p1(63 - 1 downto 0);
    trunc_ln565_fu_382_p1 <= ireg_fu_352_p1(52 - 1 downto 0);
    trunc_ln583_fu_448_p1 <= select_ln570_fu_404_p3(17 - 1 downto 0);
    trunc_ln586_1_fu_486_p1 <= ashr_ln586_fu_481_p2(17 - 1 downto 0);
    trunc_ln586_fu_473_p1 <= sh_amt_fu_452_p3(6 - 1 downto 0);
    xor_ln571_fu_518_p2 <= (icmp_ln571_reg_729 xor ap_const_lv1_1);
    xor_ln581_fu_589_p2 <= (or_ln581_fu_584_p2 xor ap_const_lv1_1);
    xor_ln582_fu_539_p2 <= (or_ln582_fu_535_p2 xor ap_const_lv1_1);
    xor_ln585_fu_564_p2 <= (icmp_ln585_fu_461_p2 xor ap_const_lv1_1);
    zext_ln455_fu_378_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_V_fu_368_p4),12));
    zext_ln569_fu_394_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_1_fu_386_p3),54));
    zext_ln586_fu_477_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln586_fu_473_p1),54));
    zext_ln882_fu_663_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_156_reg_252),17));
end behav;
