-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity pyr_down_accel is
generic (
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 7;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM1_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM1_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM1_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM2_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM2_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM2_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM2_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM2_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM2_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM2_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM2_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM3_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM3_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM3_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM3_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM3_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM3_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM3_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM3_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM4_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM4_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM4_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM4_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM4_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM4_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM4_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM4_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM1_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM1_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_GMEM2_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM2_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM2_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_GMEM3_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM3_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM3_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_GMEM4_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM4_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM4_CACHE_VALUE : INTEGER := 3 );
port (
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    interrupt : OUT STD_LOGIC;
    m_axi_gmem1_AWVALID : OUT STD_LOGIC;
    m_axi_gmem1_AWREADY : IN STD_LOGIC;
    m_axi_gmem1_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ADDR_WIDTH-1 downto 0);
    m_axi_gmem1_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem1_WVALID : OUT STD_LOGIC;
    m_axi_gmem1_WREADY : IN STD_LOGIC;
    m_axi_gmem1_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_DATA_WIDTH-1 downto 0);
    m_axi_gmem1_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem1_WLAST : OUT STD_LOGIC;
    m_axi_gmem1_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_WUSER_WIDTH-1 downto 0);
    m_axi_gmem1_ARVALID : OUT STD_LOGIC;
    m_axi_gmem1_ARREADY : IN STD_LOGIC;
    m_axi_gmem1_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ADDR_WIDTH-1 downto 0);
    m_axi_gmem1_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem1_RVALID : IN STD_LOGIC;
    m_axi_gmem1_RREADY : OUT STD_LOGIC;
    m_axi_gmem1_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_DATA_WIDTH-1 downto 0);
    m_axi_gmem1_RLAST : IN STD_LOGIC;
    m_axi_gmem1_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_RUSER_WIDTH-1 downto 0);
    m_axi_gmem1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_BVALID : IN STD_LOGIC;
    m_axi_gmem1_BREADY : OUT STD_LOGIC;
    m_axi_gmem1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_BUSER_WIDTH-1 downto 0);
    m_axi_gmem2_AWVALID : OUT STD_LOGIC;
    m_axi_gmem2_AWREADY : IN STD_LOGIC;
    m_axi_gmem2_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ADDR_WIDTH-1 downto 0);
    m_axi_gmem2_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ID_WIDTH-1 downto 0);
    m_axi_gmem2_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem2_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem2_WVALID : OUT STD_LOGIC;
    m_axi_gmem2_WREADY : IN STD_LOGIC;
    m_axi_gmem2_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_DATA_WIDTH-1 downto 0);
    m_axi_gmem2_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem2_WLAST : OUT STD_LOGIC;
    m_axi_gmem2_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ID_WIDTH-1 downto 0);
    m_axi_gmem2_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_WUSER_WIDTH-1 downto 0);
    m_axi_gmem2_ARVALID : OUT STD_LOGIC;
    m_axi_gmem2_ARREADY : IN STD_LOGIC;
    m_axi_gmem2_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ADDR_WIDTH-1 downto 0);
    m_axi_gmem2_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ID_WIDTH-1 downto 0);
    m_axi_gmem2_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem2_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem2_RVALID : IN STD_LOGIC;
    m_axi_gmem2_RREADY : OUT STD_LOGIC;
    m_axi_gmem2_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM2_DATA_WIDTH-1 downto 0);
    m_axi_gmem2_RLAST : IN STD_LOGIC;
    m_axi_gmem2_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ID_WIDTH-1 downto 0);
    m_axi_gmem2_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM2_RUSER_WIDTH-1 downto 0);
    m_axi_gmem2_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_BVALID : IN STD_LOGIC;
    m_axi_gmem2_BREADY : OUT STD_LOGIC;
    m_axi_gmem2_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ID_WIDTH-1 downto 0);
    m_axi_gmem2_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM2_BUSER_WIDTH-1 downto 0);
    m_axi_gmem3_AWVALID : OUT STD_LOGIC;
    m_axi_gmem3_AWREADY : IN STD_LOGIC;
    m_axi_gmem3_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM3_ADDR_WIDTH-1 downto 0);
    m_axi_gmem3_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM3_ID_WIDTH-1 downto 0);
    m_axi_gmem3_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem3_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem3_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem3_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM3_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem3_WVALID : OUT STD_LOGIC;
    m_axi_gmem3_WREADY : IN STD_LOGIC;
    m_axi_gmem3_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM3_DATA_WIDTH-1 downto 0);
    m_axi_gmem3_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM3_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem3_WLAST : OUT STD_LOGIC;
    m_axi_gmem3_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM3_ID_WIDTH-1 downto 0);
    m_axi_gmem3_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM3_WUSER_WIDTH-1 downto 0);
    m_axi_gmem3_ARVALID : OUT STD_LOGIC;
    m_axi_gmem3_ARREADY : IN STD_LOGIC;
    m_axi_gmem3_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM3_ADDR_WIDTH-1 downto 0);
    m_axi_gmem3_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM3_ID_WIDTH-1 downto 0);
    m_axi_gmem3_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem3_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem3_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem3_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM3_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem3_RVALID : IN STD_LOGIC;
    m_axi_gmem3_RREADY : OUT STD_LOGIC;
    m_axi_gmem3_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM3_DATA_WIDTH-1 downto 0);
    m_axi_gmem3_RLAST : IN STD_LOGIC;
    m_axi_gmem3_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM3_ID_WIDTH-1 downto 0);
    m_axi_gmem3_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM3_RUSER_WIDTH-1 downto 0);
    m_axi_gmem3_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_BVALID : IN STD_LOGIC;
    m_axi_gmem3_BREADY : OUT STD_LOGIC;
    m_axi_gmem3_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM3_ID_WIDTH-1 downto 0);
    m_axi_gmem3_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM3_BUSER_WIDTH-1 downto 0);
    m_axi_gmem4_AWVALID : OUT STD_LOGIC;
    m_axi_gmem4_AWREADY : IN STD_LOGIC;
    m_axi_gmem4_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM4_ADDR_WIDTH-1 downto 0);
    m_axi_gmem4_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM4_ID_WIDTH-1 downto 0);
    m_axi_gmem4_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem4_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem4_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem4_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem4_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem4_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem4_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem4_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem4_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM4_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem4_WVALID : OUT STD_LOGIC;
    m_axi_gmem4_WREADY : IN STD_LOGIC;
    m_axi_gmem4_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM4_DATA_WIDTH-1 downto 0);
    m_axi_gmem4_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM4_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem4_WLAST : OUT STD_LOGIC;
    m_axi_gmem4_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM4_ID_WIDTH-1 downto 0);
    m_axi_gmem4_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM4_WUSER_WIDTH-1 downto 0);
    m_axi_gmem4_ARVALID : OUT STD_LOGIC;
    m_axi_gmem4_ARREADY : IN STD_LOGIC;
    m_axi_gmem4_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM4_ADDR_WIDTH-1 downto 0);
    m_axi_gmem4_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM4_ID_WIDTH-1 downto 0);
    m_axi_gmem4_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem4_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem4_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem4_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem4_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem4_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem4_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem4_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem4_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM4_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem4_RVALID : IN STD_LOGIC;
    m_axi_gmem4_RREADY : OUT STD_LOGIC;
    m_axi_gmem4_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM4_DATA_WIDTH-1 downto 0);
    m_axi_gmem4_RLAST : IN STD_LOGIC;
    m_axi_gmem4_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM4_ID_WIDTH-1 downto 0);
    m_axi_gmem4_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM4_RUSER_WIDTH-1 downto 0);
    m_axi_gmem4_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem4_BVALID : IN STD_LOGIC;
    m_axi_gmem4_BREADY : OUT STD_LOGIC;
    m_axi_gmem4_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem4_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM4_ID_WIDTH-1 downto 0);
    m_axi_gmem4_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM4_BUSER_WIDTH-1 downto 0) );
end;


architecture behav of pyr_down_accel is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "pyr_down_accel_pyr_down_accel,hls_ip_2020_1_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu7ev-ffvc1156-2-e,HLS_INPUT_CLOCK=6.667000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=5.043750,HLS_SYN_LAT=1036879,HLS_SYN_TPT=1036879,HLS_SYN_MEM=22,HLS_SYN_DSP=0,HLS_SYN_FF=15885,HLS_SYN_LUT=23317,HLS_VERSION=2020_1_1}";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_S_AXI_WSTRB_WIDTH : INTEGER range 63 downto 0 := 4;
    constant C_S_AXI_ADDR_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant C_M_AXI_ID_WIDTH : INTEGER range 63 downto 0 := 1;
    constant C_M_AXI_ADDR_WIDTH : INTEGER range 63 downto 0 := 40;
    constant C_M_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_M_AXI_WSTRB_WIDTH : INTEGER range 63 downto 0 := 4;
    constant C_M_AXI_AWUSER_WIDTH : INTEGER range 63 downto 0 := 1;
    constant C_M_AXI_ARUSER_WIDTH : INTEGER range 63 downto 0 := 1;
    constant C_M_AXI_WUSER_WIDTH : INTEGER range 63 downto 0 := 1;
    constant C_M_AXI_RUSER_WIDTH : INTEGER range 63 downto 0 := 1;
    constant C_M_AXI_BUSER_WIDTH : INTEGER range 63 downto 0 := 1;
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";

attribute shreg_extract : string;
    signal ap_rst_reg_2 : STD_LOGIC := '1';
attribute shreg_extract of ap_rst_reg_2 : signal is "no";
    signal ap_rst_reg_1 : STD_LOGIC := '1';
attribute shreg_extract of ap_rst_reg_1 : signal is "no";
    signal ap_rst_n_inv : STD_LOGIC := '1';
attribute shreg_extract of ap_rst_n_inv : signal is "no";
    signal inImgPyr1 : STD_LOGIC_VECTOR (63 downto 0);
    signal outImgPyr1 : STD_LOGIC_VECTOR (63 downto 0);
    signal inImgPyr2 : STD_LOGIC_VECTOR (63 downto 0);
    signal outImgPyr2 : STD_LOGIC_VECTOR (63 downto 0);
    signal pyr_h : STD_LOGIC_VECTOR (31 downto 0);
    signal pyr_w : STD_LOGIC_VECTOR (31 downto 0);
    signal pyr_out_h : STD_LOGIC_VECTOR (31 downto 0);
    signal pyr_out_w : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_start : STD_LOGIC;
    signal ap_ready : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_continue : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal gmem1_AWREADY : STD_LOGIC;
    signal gmem1_WREADY : STD_LOGIC;
    signal gmem1_ARREADY : STD_LOGIC;
    signal gmem1_RVALID : STD_LOGIC;
    signal gmem1_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem1_RLAST : STD_LOGIC;
    signal gmem1_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem1_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem1_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem1_BVALID : STD_LOGIC;
    signal gmem1_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem1_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem1_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem2_AWREADY : STD_LOGIC;
    signal gmem2_WREADY : STD_LOGIC;
    signal gmem2_ARREADY : STD_LOGIC;
    signal gmem2_RVALID : STD_LOGIC;
    signal gmem2_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem2_RLAST : STD_LOGIC;
    signal gmem2_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem2_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem2_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem2_BVALID : STD_LOGIC;
    signal gmem2_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem2_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem2_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem3_AWREADY : STD_LOGIC;
    signal gmem3_WREADY : STD_LOGIC;
    signal gmem3_ARREADY : STD_LOGIC;
    signal gmem3_RVALID : STD_LOGIC;
    signal gmem3_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem3_RLAST : STD_LOGIC;
    signal gmem3_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem3_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem3_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem3_BVALID : STD_LOGIC;
    signal gmem3_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem3_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem3_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem4_AWREADY : STD_LOGIC;
    signal gmem4_WREADY : STD_LOGIC;
    signal gmem4_ARREADY : STD_LOGIC;
    signal gmem4_RVALID : STD_LOGIC;
    signal gmem4_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem4_RLAST : STD_LOGIC;
    signal gmem4_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem4_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem4_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem4_BVALID : STD_LOGIC;
    signal gmem4_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem4_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem4_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_split1_proc30_U0_ap_start : STD_LOGIC;
    signal Block_split1_proc30_U0_start_full_n : STD_LOGIC;
    signal Block_split1_proc30_U0_ap_done : STD_LOGIC;
    signal Block_split1_proc30_U0_ap_continue : STD_LOGIC;
    signal Block_split1_proc30_U0_ap_idle : STD_LOGIC;
    signal Block_split1_proc30_U0_ap_ready : STD_LOGIC;
    signal Block_split1_proc30_U0_start_out : STD_LOGIC;
    signal Block_split1_proc30_U0_start_write : STD_LOGIC;
    signal Block_split1_proc30_U0_pyr1_in_mat_rows_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_split1_proc30_U0_pyr1_in_mat_rows_out_write : STD_LOGIC;
    signal Block_split1_proc30_U0_pyr1_in_mat_cols_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_split1_proc30_U0_pyr1_in_mat_cols_out_write : STD_LOGIC;
    signal Block_split1_proc30_U0_pyr1_out_mat_rows_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_split1_proc30_U0_pyr1_out_mat_rows_out_write : STD_LOGIC;
    signal Block_split1_proc30_U0_pyr1_out_mat_cols_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_split1_proc30_U0_pyr1_out_mat_cols_out_write : STD_LOGIC;
    signal Block_split1_proc30_U0_pyr2_in_mat_rows_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_split1_proc30_U0_pyr2_in_mat_rows_out_write : STD_LOGIC;
    signal Block_split1_proc30_U0_pyr2_in_mat_cols_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_split1_proc30_U0_pyr2_in_mat_cols_out_write : STD_LOGIC;
    signal Block_split1_proc30_U0_pyr2_out_mat_rows_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_split1_proc30_U0_pyr2_out_mat_rows_out_write : STD_LOGIC;
    signal Block_split1_proc30_U0_pyr2_out_mat_cols_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_split1_proc30_U0_pyr2_out_mat_cols_out_write : STD_LOGIC;
    signal Block_split1_proc30_U0_inImgPyr1_out_din : STD_LOGIC_VECTOR (63 downto 0);
    signal Block_split1_proc30_U0_inImgPyr1_out_write : STD_LOGIC;
    signal Block_split1_proc30_U0_outImgPyr1_out_din : STD_LOGIC_VECTOR (63 downto 0);
    signal Block_split1_proc30_U0_outImgPyr1_out_write : STD_LOGIC;
    signal Block_split1_proc30_U0_inImgPyr2_out_din : STD_LOGIC_VECTOR (63 downto 0);
    signal Block_split1_proc30_U0_inImgPyr2_out_write : STD_LOGIC;
    signal Block_split1_proc30_U0_outImgPyr2_out_din : STD_LOGIC_VECTOR (63 downto 0);
    signal Block_split1_proc30_U0_outImgPyr2_out_write : STD_LOGIC;
    signal Array2xfMat_32_0_1080_1920_1_6_U0_ap_start : STD_LOGIC;
    signal Array2xfMat_32_0_1080_1920_1_6_U0_ap_done : STD_LOGIC;
    signal Array2xfMat_32_0_1080_1920_1_6_U0_ap_continue : STD_LOGIC;
    signal Array2xfMat_32_0_1080_1920_1_6_U0_ap_idle : STD_LOGIC;
    signal Array2xfMat_32_0_1080_1920_1_6_U0_ap_ready : STD_LOGIC;
    signal Array2xfMat_32_0_1080_1920_1_6_U0_start_out : STD_LOGIC;
    signal Array2xfMat_32_0_1080_1920_1_6_U0_start_write : STD_LOGIC;
    signal Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_AWVALID : STD_LOGIC;
    signal Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_WVALID : STD_LOGIC;
    signal Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_WLAST : STD_LOGIC;
    signal Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_ARVALID : STD_LOGIC;
    signal Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_RREADY : STD_LOGIC;
    signal Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_BREADY : STD_LOGIC;
    signal Array2xfMat_32_0_1080_1920_1_6_U0_pyr1_in_mat_431_din : STD_LOGIC_VECTOR (7 downto 0);
    signal Array2xfMat_32_0_1080_1920_1_6_U0_pyr1_in_mat_431_write : STD_LOGIC;
    signal Array2xfMat_32_0_1080_1920_1_6_U0_srcPtr_read : STD_LOGIC;
    signal Array2xfMat_32_0_1080_1920_1_6_U0_dstMat_1_read : STD_LOGIC;
    signal Array2xfMat_32_0_1080_1920_1_6_U0_dstMat_2_read : STD_LOGIC;
    signal Array2xfMat_32_0_1080_1920_1_6_U0_dstMat_1_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Array2xfMat_32_0_1080_1920_1_6_U0_dstMat_1_out_write : STD_LOGIC;
    signal Array2xfMat_32_0_1080_1920_1_6_U0_dstMat_2_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Array2xfMat_32_0_1080_1920_1_6_U0_dstMat_2_out_write : STD_LOGIC;
    signal pyrDown_0_1080_1920_1_false_7_U0_ap_start : STD_LOGIC;
    signal pyrDown_0_1080_1920_1_false_7_U0_ap_done : STD_LOGIC;
    signal pyrDown_0_1080_1920_1_false_7_U0_ap_continue : STD_LOGIC;
    signal pyrDown_0_1080_1920_1_false_7_U0_ap_idle : STD_LOGIC;
    signal pyrDown_0_1080_1920_1_false_7_U0_ap_ready : STD_LOGIC;
    signal pyrDown_0_1080_1920_1_false_7_U0_pyr1_in_mat_431_read : STD_LOGIC;
    signal pyrDown_0_1080_1920_1_false_7_U0_pyr1_out_mat_432_din : STD_LOGIC_VECTOR (7 downto 0);
    signal pyrDown_0_1080_1920_1_false_7_U0_pyr1_out_mat_432_write : STD_LOGIC;
    signal pyrDown_0_1080_1920_1_false_7_U0_p_src_1_read : STD_LOGIC;
    signal pyrDown_0_1080_1920_1_false_7_U0_p_src_2_read : STD_LOGIC;
    signal xfMat2Array_32_0_1080_1920_1_8_U0_ap_start : STD_LOGIC;
    signal xfMat2Array_32_0_1080_1920_1_8_U0_ap_done : STD_LOGIC;
    signal xfMat2Array_32_0_1080_1920_1_8_U0_ap_continue : STD_LOGIC;
    signal xfMat2Array_32_0_1080_1920_1_8_U0_ap_idle : STD_LOGIC;
    signal xfMat2Array_32_0_1080_1920_1_8_U0_ap_ready : STD_LOGIC;
    signal xfMat2Array_32_0_1080_1920_1_8_U0_pyr1_out_mat_432_read : STD_LOGIC;
    signal xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_AWVALID : STD_LOGIC;
    signal xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_WVALID : STD_LOGIC;
    signal xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_WLAST : STD_LOGIC;
    signal xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_ARVALID : STD_LOGIC;
    signal xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_RREADY : STD_LOGIC;
    signal xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_BREADY : STD_LOGIC;
    signal xfMat2Array_32_0_1080_1920_1_8_U0_srcMat_1_read : STD_LOGIC;
    signal xfMat2Array_32_0_1080_1920_1_8_U0_srcMat_2_read : STD_LOGIC;
    signal xfMat2Array_32_0_1080_1920_1_8_U0_dstPtr_read : STD_LOGIC;
    signal ap_sync_continue : STD_LOGIC;
    signal Array2xfMat_32_0_1080_1920_1_U0_ap_start : STD_LOGIC;
    signal Array2xfMat_32_0_1080_1920_1_U0_ap_done : STD_LOGIC;
    signal Array2xfMat_32_0_1080_1920_1_U0_ap_continue : STD_LOGIC;
    signal Array2xfMat_32_0_1080_1920_1_U0_ap_idle : STD_LOGIC;
    signal Array2xfMat_32_0_1080_1920_1_U0_ap_ready : STD_LOGIC;
    signal Array2xfMat_32_0_1080_1920_1_U0_start_out : STD_LOGIC;
    signal Array2xfMat_32_0_1080_1920_1_U0_start_write : STD_LOGIC;
    signal Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_AWVALID : STD_LOGIC;
    signal Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_WVALID : STD_LOGIC;
    signal Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_WLAST : STD_LOGIC;
    signal Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_ARVALID : STD_LOGIC;
    signal Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_RREADY : STD_LOGIC;
    signal Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_BREADY : STD_LOGIC;
    signal Array2xfMat_32_0_1080_1920_1_U0_pyr1_in_mat_431_din : STD_LOGIC_VECTOR (7 downto 0);
    signal Array2xfMat_32_0_1080_1920_1_U0_pyr1_in_mat_431_write : STD_LOGIC;
    signal Array2xfMat_32_0_1080_1920_1_U0_srcPtr_read : STD_LOGIC;
    signal Array2xfMat_32_0_1080_1920_1_U0_dstMat_1_read : STD_LOGIC;
    signal Array2xfMat_32_0_1080_1920_1_U0_dstMat_2_read : STD_LOGIC;
    signal Array2xfMat_32_0_1080_1920_1_U0_dstMat_1_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Array2xfMat_32_0_1080_1920_1_U0_dstMat_1_out_write : STD_LOGIC;
    signal Array2xfMat_32_0_1080_1920_1_U0_dstMat_2_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Array2xfMat_32_0_1080_1920_1_U0_dstMat_2_out_write : STD_LOGIC;
    signal pyrDown_0_1080_1920_1_false_U0_ap_start : STD_LOGIC;
    signal pyrDown_0_1080_1920_1_false_U0_ap_done : STD_LOGIC;
    signal pyrDown_0_1080_1920_1_false_U0_ap_continue : STD_LOGIC;
    signal pyrDown_0_1080_1920_1_false_U0_ap_idle : STD_LOGIC;
    signal pyrDown_0_1080_1920_1_false_U0_ap_ready : STD_LOGIC;
    signal pyrDown_0_1080_1920_1_false_U0_pyr1_in_mat_431_read : STD_LOGIC;
    signal pyrDown_0_1080_1920_1_false_U0_pyr1_out_mat_432_din : STD_LOGIC_VECTOR (7 downto 0);
    signal pyrDown_0_1080_1920_1_false_U0_pyr1_out_mat_432_write : STD_LOGIC;
    signal pyrDown_0_1080_1920_1_false_U0_p_src_1_read : STD_LOGIC;
    signal pyrDown_0_1080_1920_1_false_U0_p_src_2_read : STD_LOGIC;
    signal xfMat2Array_32_0_1080_1920_1_U0_ap_start : STD_LOGIC;
    signal xfMat2Array_32_0_1080_1920_1_U0_ap_done : STD_LOGIC;
    signal xfMat2Array_32_0_1080_1920_1_U0_ap_continue : STD_LOGIC;
    signal xfMat2Array_32_0_1080_1920_1_U0_ap_idle : STD_LOGIC;
    signal xfMat2Array_32_0_1080_1920_1_U0_ap_ready : STD_LOGIC;
    signal xfMat2Array_32_0_1080_1920_1_U0_pyr1_out_mat_432_read : STD_LOGIC;
    signal xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_AWVALID : STD_LOGIC;
    signal xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_WVALID : STD_LOGIC;
    signal xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_WLAST : STD_LOGIC;
    signal xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_ARVALID : STD_LOGIC;
    signal xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_RREADY : STD_LOGIC;
    signal xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_BREADY : STD_LOGIC;
    signal xfMat2Array_32_0_1080_1920_1_U0_srcMat_1_read : STD_LOGIC;
    signal xfMat2Array_32_0_1080_1920_1_U0_srcMat_2_read : STD_LOGIC;
    signal xfMat2Array_32_0_1080_1920_1_U0_dstPtr_read : STD_LOGIC;
    signal pyr1_in_mat_rows_c_full_n : STD_LOGIC;
    signal pyr1_in_mat_rows_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal pyr1_in_mat_rows_c_empty_n : STD_LOGIC;
    signal pyr1_in_mat_cols_c_full_n : STD_LOGIC;
    signal pyr1_in_mat_cols_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal pyr1_in_mat_cols_c_empty_n : STD_LOGIC;
    signal pyr1_out_mat_rows_c_full_n : STD_LOGIC;
    signal pyr1_out_mat_rows_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal pyr1_out_mat_rows_c_empty_n : STD_LOGIC;
    signal pyr1_out_mat_cols_c_full_n : STD_LOGIC;
    signal pyr1_out_mat_cols_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal pyr1_out_mat_cols_c_empty_n : STD_LOGIC;
    signal pyr2_in_mat_rows_c_full_n : STD_LOGIC;
    signal pyr2_in_mat_rows_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal pyr2_in_mat_rows_c_empty_n : STD_LOGIC;
    signal pyr2_in_mat_cols_c_full_n : STD_LOGIC;
    signal pyr2_in_mat_cols_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal pyr2_in_mat_cols_c_empty_n : STD_LOGIC;
    signal pyr2_out_mat_rows_c_full_n : STD_LOGIC;
    signal pyr2_out_mat_rows_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal pyr2_out_mat_rows_c_empty_n : STD_LOGIC;
    signal pyr2_out_mat_cols_c_full_n : STD_LOGIC;
    signal pyr2_out_mat_cols_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal pyr2_out_mat_cols_c_empty_n : STD_LOGIC;
    signal inImgPyr1_c_full_n : STD_LOGIC;
    signal inImgPyr1_c_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal inImgPyr1_c_empty_n : STD_LOGIC;
    signal outImgPyr1_c_full_n : STD_LOGIC;
    signal outImgPyr1_c_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal outImgPyr1_c_empty_n : STD_LOGIC;
    signal inImgPyr2_c_full_n : STD_LOGIC;
    signal inImgPyr2_c_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal inImgPyr2_c_empty_n : STD_LOGIC;
    signal outImgPyr2_c_full_n : STD_LOGIC;
    signal outImgPyr2_c_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal outImgPyr2_c_empty_n : STD_LOGIC;
    signal pyr1_in_mat_data_full_n : STD_LOGIC;
    signal pyr1_in_mat_data_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal pyr1_in_mat_data_empty_n : STD_LOGIC;
    signal pyr1_in_mat_rows_c15_full_n : STD_LOGIC;
    signal pyr1_in_mat_rows_c15_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal pyr1_in_mat_rows_c15_empty_n : STD_LOGIC;
    signal pyr1_in_mat_cols_c16_full_n : STD_LOGIC;
    signal pyr1_in_mat_cols_c16_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal pyr1_in_mat_cols_c16_empty_n : STD_LOGIC;
    signal pyr1_out_mat_data_full_n : STD_LOGIC;
    signal pyr1_out_mat_data_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal pyr1_out_mat_data_empty_n : STD_LOGIC;
    signal pyr2_in_mat_data_full_n : STD_LOGIC;
    signal pyr2_in_mat_data_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal pyr2_in_mat_data_empty_n : STD_LOGIC;
    signal pyr2_in_mat_rows_c17_full_n : STD_LOGIC;
    signal pyr2_in_mat_rows_c17_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal pyr2_in_mat_rows_c17_empty_n : STD_LOGIC;
    signal pyr2_in_mat_cols_c18_full_n : STD_LOGIC;
    signal pyr2_in_mat_cols_c18_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal pyr2_in_mat_cols_c18_empty_n : STD_LOGIC;
    signal pyr2_out_mat_data_full_n : STD_LOGIC;
    signal pyr2_out_mat_data_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal pyr2_out_mat_data_empty_n : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal ap_sync_reg_Block_split1_proc30_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_Block_split1_proc30_U0_ap_ready : STD_LOGIC;
    signal Block_split1_proc30_U0_ap_ready_count : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal ap_sync_reg_Array2xfMat_32_0_1080_1920_1_6_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_Array2xfMat_32_0_1080_1920_1_6_U0_ap_ready : STD_LOGIC;
    signal Array2xfMat_32_0_1080_1920_1_6_U0_ap_ready_count : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal ap_sync_reg_Array2xfMat_32_0_1080_1920_1_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_Array2xfMat_32_0_1080_1920_1_U0_ap_ready : STD_LOGIC;
    signal Array2xfMat_32_0_1080_1920_1_U0_ap_ready_count : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal start_for_xfMat2Array_32_0_1080_1920_1_8_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xfMat2Array_32_0_1080_1920_1_8_U0_full_n : STD_LOGIC;
    signal start_for_xfMat2Array_32_0_1080_1920_1_8_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xfMat2Array_32_0_1080_1920_1_8_U0_empty_n : STD_LOGIC;
    signal start_for_xfMat2Array_32_0_1080_1920_1_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xfMat2Array_32_0_1080_1920_1_U0_full_n : STD_LOGIC;
    signal start_for_xfMat2Array_32_0_1080_1920_1_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xfMat2Array_32_0_1080_1920_1_U0_empty_n : STD_LOGIC;
    signal start_for_pyrDown_0_1080_1920_1_false_7_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_pyrDown_0_1080_1920_1_false_7_U0_full_n : STD_LOGIC;
    signal start_for_pyrDown_0_1080_1920_1_false_7_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_pyrDown_0_1080_1920_1_false_7_U0_empty_n : STD_LOGIC;
    signal pyrDown_0_1080_1920_1_false_7_U0_start_full_n : STD_LOGIC;
    signal pyrDown_0_1080_1920_1_false_7_U0_start_write : STD_LOGIC;
    signal xfMat2Array_32_0_1080_1920_1_8_U0_start_full_n : STD_LOGIC;
    signal xfMat2Array_32_0_1080_1920_1_8_U0_start_write : STD_LOGIC;
    signal start_for_pyrDown_0_1080_1920_1_false_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_pyrDown_0_1080_1920_1_false_U0_full_n : STD_LOGIC;
    signal start_for_pyrDown_0_1080_1920_1_false_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_pyrDown_0_1080_1920_1_false_U0_empty_n : STD_LOGIC;
    signal pyrDown_0_1080_1920_1_false_U0_start_full_n : STD_LOGIC;
    signal pyrDown_0_1080_1920_1_false_U0_start_write : STD_LOGIC;
    signal xfMat2Array_32_0_1080_1920_1_U0_start_full_n : STD_LOGIC;
    signal xfMat2Array_32_0_1080_1920_1_U0_start_write : STD_LOGIC;

    component pyr_down_accel_Block_split1_proc30 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        pyr_h : IN STD_LOGIC_VECTOR (31 downto 0);
        pyr_w : IN STD_LOGIC_VECTOR (31 downto 0);
        pyr_out_h : IN STD_LOGIC_VECTOR (31 downto 0);
        pyr_out_w : IN STD_LOGIC_VECTOR (31 downto 0);
        inImgPyr1 : IN STD_LOGIC_VECTOR (63 downto 0);
        outImgPyr1 : IN STD_LOGIC_VECTOR (63 downto 0);
        inImgPyr2 : IN STD_LOGIC_VECTOR (63 downto 0);
        outImgPyr2 : IN STD_LOGIC_VECTOR (63 downto 0);
        pyr1_in_mat_rows_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        pyr1_in_mat_rows_out_full_n : IN STD_LOGIC;
        pyr1_in_mat_rows_out_write : OUT STD_LOGIC;
        pyr1_in_mat_cols_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        pyr1_in_mat_cols_out_full_n : IN STD_LOGIC;
        pyr1_in_mat_cols_out_write : OUT STD_LOGIC;
        pyr1_out_mat_rows_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        pyr1_out_mat_rows_out_full_n : IN STD_LOGIC;
        pyr1_out_mat_rows_out_write : OUT STD_LOGIC;
        pyr1_out_mat_cols_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        pyr1_out_mat_cols_out_full_n : IN STD_LOGIC;
        pyr1_out_mat_cols_out_write : OUT STD_LOGIC;
        pyr2_in_mat_rows_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        pyr2_in_mat_rows_out_full_n : IN STD_LOGIC;
        pyr2_in_mat_rows_out_write : OUT STD_LOGIC;
        pyr2_in_mat_cols_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        pyr2_in_mat_cols_out_full_n : IN STD_LOGIC;
        pyr2_in_mat_cols_out_write : OUT STD_LOGIC;
        pyr2_out_mat_rows_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        pyr2_out_mat_rows_out_full_n : IN STD_LOGIC;
        pyr2_out_mat_rows_out_write : OUT STD_LOGIC;
        pyr2_out_mat_cols_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        pyr2_out_mat_cols_out_full_n : IN STD_LOGIC;
        pyr2_out_mat_cols_out_write : OUT STD_LOGIC;
        inImgPyr1_out_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        inImgPyr1_out_full_n : IN STD_LOGIC;
        inImgPyr1_out_write : OUT STD_LOGIC;
        outImgPyr1_out_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        outImgPyr1_out_full_n : IN STD_LOGIC;
        outImgPyr1_out_write : OUT STD_LOGIC;
        inImgPyr2_out_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        inImgPyr2_out_full_n : IN STD_LOGIC;
        inImgPyr2_out_write : OUT STD_LOGIC;
        outImgPyr2_out_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        outImgPyr2_out_full_n : IN STD_LOGIC;
        outImgPyr2_out_write : OUT STD_LOGIC );
    end component;


    component pyr_down_accel_Array2xfMat_32_0_1080_1920_1_6 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        m_axi_gmem1_AWVALID : OUT STD_LOGIC;
        m_axi_gmem1_AWREADY : IN STD_LOGIC;
        m_axi_gmem1_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem1_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_WVALID : OUT STD_LOGIC;
        m_axi_gmem1_WREADY : IN STD_LOGIC;
        m_axi_gmem1_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_WLAST : OUT STD_LOGIC;
        m_axi_gmem1_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_ARVALID : OUT STD_LOGIC;
        m_axi_gmem1_ARREADY : IN STD_LOGIC;
        m_axi_gmem1_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem1_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_RVALID : IN STD_LOGIC;
        m_axi_gmem1_RREADY : OUT STD_LOGIC;
        m_axi_gmem1_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_RLAST : IN STD_LOGIC;
        m_axi_gmem1_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_BVALID : IN STD_LOGIC;
        m_axi_gmem1_BREADY : OUT STD_LOGIC;
        m_axi_gmem1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        pyr1_in_mat_431_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        pyr1_in_mat_431_full_n : IN STD_LOGIC;
        pyr1_in_mat_431_write : OUT STD_LOGIC;
        srcPtr_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        srcPtr_empty_n : IN STD_LOGIC;
        srcPtr_read : OUT STD_LOGIC;
        dstMat_1_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        dstMat_1_empty_n : IN STD_LOGIC;
        dstMat_1_read : OUT STD_LOGIC;
        dstMat_2_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        dstMat_2_empty_n : IN STD_LOGIC;
        dstMat_2_read : OUT STD_LOGIC;
        dstMat_1_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        dstMat_1_out_full_n : IN STD_LOGIC;
        dstMat_1_out_write : OUT STD_LOGIC;
        dstMat_2_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        dstMat_2_out_full_n : IN STD_LOGIC;
        dstMat_2_out_write : OUT STD_LOGIC );
    end component;


    component pyr_down_accel_pyrDown_0_1080_1920_1_false_7 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        pyr1_in_mat_431_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        pyr1_in_mat_431_empty_n : IN STD_LOGIC;
        pyr1_in_mat_431_read : OUT STD_LOGIC;
        pyr1_out_mat_432_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        pyr1_out_mat_432_full_n : IN STD_LOGIC;
        pyr1_out_mat_432_write : OUT STD_LOGIC;
        p_src_1_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        p_src_1_empty_n : IN STD_LOGIC;
        p_src_1_read : OUT STD_LOGIC;
        p_src_2_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        p_src_2_empty_n : IN STD_LOGIC;
        p_src_2_read : OUT STD_LOGIC );
    end component;


    component pyr_down_accel_xfMat2Array_32_0_1080_1920_1_8 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        pyr1_out_mat_432_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        pyr1_out_mat_432_empty_n : IN STD_LOGIC;
        pyr1_out_mat_432_read : OUT STD_LOGIC;
        m_axi_gmem2_AWVALID : OUT STD_LOGIC;
        m_axi_gmem2_AWREADY : IN STD_LOGIC;
        m_axi_gmem2_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem2_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem2_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem2_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem2_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_WVALID : OUT STD_LOGIC;
        m_axi_gmem2_WREADY : IN STD_LOGIC;
        m_axi_gmem2_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem2_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_WLAST : OUT STD_LOGIC;
        m_axi_gmem2_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_ARVALID : OUT STD_LOGIC;
        m_axi_gmem2_ARREADY : IN STD_LOGIC;
        m_axi_gmem2_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem2_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem2_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem2_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem2_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_RVALID : IN STD_LOGIC;
        m_axi_gmem2_RREADY : OUT STD_LOGIC;
        m_axi_gmem2_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem2_RLAST : IN STD_LOGIC;
        m_axi_gmem2_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_BVALID : IN STD_LOGIC;
        m_axi_gmem2_BREADY : OUT STD_LOGIC;
        m_axi_gmem2_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        srcMat_1_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        srcMat_1_empty_n : IN STD_LOGIC;
        srcMat_1_read : OUT STD_LOGIC;
        srcMat_2_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        srcMat_2_empty_n : IN STD_LOGIC;
        srcMat_2_read : OUT STD_LOGIC;
        dstPtr_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        dstPtr_empty_n : IN STD_LOGIC;
        dstPtr_read : OUT STD_LOGIC );
    end component;


    component pyr_down_accel_Array2xfMat_32_0_1080_1920_1_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        m_axi_gmem1_AWVALID : OUT STD_LOGIC;
        m_axi_gmem1_AWREADY : IN STD_LOGIC;
        m_axi_gmem1_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem1_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_WVALID : OUT STD_LOGIC;
        m_axi_gmem1_WREADY : IN STD_LOGIC;
        m_axi_gmem1_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_WLAST : OUT STD_LOGIC;
        m_axi_gmem1_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_ARVALID : OUT STD_LOGIC;
        m_axi_gmem1_ARREADY : IN STD_LOGIC;
        m_axi_gmem1_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem1_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_RVALID : IN STD_LOGIC;
        m_axi_gmem1_RREADY : OUT STD_LOGIC;
        m_axi_gmem1_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_RLAST : IN STD_LOGIC;
        m_axi_gmem1_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_BVALID : IN STD_LOGIC;
        m_axi_gmem1_BREADY : OUT STD_LOGIC;
        m_axi_gmem1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        pyr1_in_mat_431_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        pyr1_in_mat_431_full_n : IN STD_LOGIC;
        pyr1_in_mat_431_write : OUT STD_LOGIC;
        srcPtr_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        srcPtr_empty_n : IN STD_LOGIC;
        srcPtr_read : OUT STD_LOGIC;
        dstMat_1_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        dstMat_1_empty_n : IN STD_LOGIC;
        dstMat_1_read : OUT STD_LOGIC;
        dstMat_2_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        dstMat_2_empty_n : IN STD_LOGIC;
        dstMat_2_read : OUT STD_LOGIC;
        dstMat_1_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        dstMat_1_out_full_n : IN STD_LOGIC;
        dstMat_1_out_write : OUT STD_LOGIC;
        dstMat_2_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        dstMat_2_out_full_n : IN STD_LOGIC;
        dstMat_2_out_write : OUT STD_LOGIC );
    end component;


    component pyr_down_accel_pyrDown_0_1080_1920_1_false_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        pyr1_in_mat_431_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        pyr1_in_mat_431_empty_n : IN STD_LOGIC;
        pyr1_in_mat_431_read : OUT STD_LOGIC;
        pyr1_out_mat_432_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        pyr1_out_mat_432_full_n : IN STD_LOGIC;
        pyr1_out_mat_432_write : OUT STD_LOGIC;
        p_src_1_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        p_src_1_empty_n : IN STD_LOGIC;
        p_src_1_read : OUT STD_LOGIC;
        p_src_2_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        p_src_2_empty_n : IN STD_LOGIC;
        p_src_2_read : OUT STD_LOGIC );
    end component;


    component pyr_down_accel_xfMat2Array_32_0_1080_1920_1_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        pyr1_out_mat_432_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        pyr1_out_mat_432_empty_n : IN STD_LOGIC;
        pyr1_out_mat_432_read : OUT STD_LOGIC;
        m_axi_gmem2_AWVALID : OUT STD_LOGIC;
        m_axi_gmem2_AWREADY : IN STD_LOGIC;
        m_axi_gmem2_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem2_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem2_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem2_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem2_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_WVALID : OUT STD_LOGIC;
        m_axi_gmem2_WREADY : IN STD_LOGIC;
        m_axi_gmem2_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem2_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_WLAST : OUT STD_LOGIC;
        m_axi_gmem2_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_ARVALID : OUT STD_LOGIC;
        m_axi_gmem2_ARREADY : IN STD_LOGIC;
        m_axi_gmem2_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem2_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem2_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem2_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem2_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_RVALID : IN STD_LOGIC;
        m_axi_gmem2_RREADY : OUT STD_LOGIC;
        m_axi_gmem2_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem2_RLAST : IN STD_LOGIC;
        m_axi_gmem2_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_BVALID : IN STD_LOGIC;
        m_axi_gmem2_BREADY : OUT STD_LOGIC;
        m_axi_gmem2_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        srcMat_1_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        srcMat_1_empty_n : IN STD_LOGIC;
        srcMat_1_read : OUT STD_LOGIC;
        srcMat_2_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        srcMat_2_empty_n : IN STD_LOGIC;
        srcMat_2_read : OUT STD_LOGIC;
        dstPtr_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        dstPtr_empty_n : IN STD_LOGIC;
        dstPtr_read : OUT STD_LOGIC );
    end component;


    component pyr_down_accel_fifo_w32_d2_S_x1 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component pyr_down_accel_fifo_w32_d4_S_x IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component pyr_down_accel_fifo_w64_d2_S_x IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (63 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (63 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component pyr_down_accel_fifo_w64_d4_S_x0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (63 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (63 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component pyr_down_accel_fifo_w8_d1920_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component pyr_down_accel_start_for_xfMat2Array_32_0_1080_1920_1_8_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component pyr_down_accel_start_for_xfMat2Array_32_0_1080_1920_1_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component pyr_down_accel_start_for_pyrDown_0_1080_1920_1_false_7_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component pyr_down_accel_start_for_pyrDown_0_1080_1920_1_false_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component pyr_down_accel_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        inImgPyr1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        outImgPyr1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        inImgPyr2 : OUT STD_LOGIC_VECTOR (63 downto 0);
        outImgPyr2 : OUT STD_LOGIC_VECTOR (63 downto 0);
        pyr_h : OUT STD_LOGIC_VECTOR (31 downto 0);
        pyr_w : OUT STD_LOGIC_VECTOR (31 downto 0);
        pyr_out_h : OUT STD_LOGIC_VECTOR (31 downto 0);
        pyr_out_w : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_continue : OUT STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;


    component pyr_down_accel_gmem1_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component pyr_down_accel_gmem2_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component pyr_down_accel_gmem3_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component pyr_down_accel_gmem4_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    control_s_axi_U : component pyr_down_accel_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        inImgPyr1 => inImgPyr1,
        outImgPyr1 => outImgPyr1,
        inImgPyr2 => inImgPyr2,
        outImgPyr2 => outImgPyr2,
        pyr_h => pyr_h,
        pyr_w => pyr_w,
        pyr_out_h => pyr_out_h,
        pyr_out_w => pyr_out_w,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_continue => ap_continue,
        ap_idle => ap_idle);

    gmem1_m_axi_U : component pyr_down_accel_gmem1_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_DW => 32,
        USER_AW => 64,
        USER_MAXREQS => 69,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM1_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM1_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM1_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM1_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM1_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM1_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM1_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM1_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM1_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM1_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM1_CACHE_VALUE)
    port map (
        AWVALID => m_axi_gmem1_AWVALID,
        AWREADY => m_axi_gmem1_AWREADY,
        AWADDR => m_axi_gmem1_AWADDR,
        AWID => m_axi_gmem1_AWID,
        AWLEN => m_axi_gmem1_AWLEN,
        AWSIZE => m_axi_gmem1_AWSIZE,
        AWBURST => m_axi_gmem1_AWBURST,
        AWLOCK => m_axi_gmem1_AWLOCK,
        AWCACHE => m_axi_gmem1_AWCACHE,
        AWPROT => m_axi_gmem1_AWPROT,
        AWQOS => m_axi_gmem1_AWQOS,
        AWREGION => m_axi_gmem1_AWREGION,
        AWUSER => m_axi_gmem1_AWUSER,
        WVALID => m_axi_gmem1_WVALID,
        WREADY => m_axi_gmem1_WREADY,
        WDATA => m_axi_gmem1_WDATA,
        WSTRB => m_axi_gmem1_WSTRB,
        WLAST => m_axi_gmem1_WLAST,
        WID => m_axi_gmem1_WID,
        WUSER => m_axi_gmem1_WUSER,
        ARVALID => m_axi_gmem1_ARVALID,
        ARREADY => m_axi_gmem1_ARREADY,
        ARADDR => m_axi_gmem1_ARADDR,
        ARID => m_axi_gmem1_ARID,
        ARLEN => m_axi_gmem1_ARLEN,
        ARSIZE => m_axi_gmem1_ARSIZE,
        ARBURST => m_axi_gmem1_ARBURST,
        ARLOCK => m_axi_gmem1_ARLOCK,
        ARCACHE => m_axi_gmem1_ARCACHE,
        ARPROT => m_axi_gmem1_ARPROT,
        ARQOS => m_axi_gmem1_ARQOS,
        ARREGION => m_axi_gmem1_ARREGION,
        ARUSER => m_axi_gmem1_ARUSER,
        RVALID => m_axi_gmem1_RVALID,
        RREADY => m_axi_gmem1_RREADY,
        RDATA => m_axi_gmem1_RDATA,
        RLAST => m_axi_gmem1_RLAST,
        RID => m_axi_gmem1_RID,
        RUSER => m_axi_gmem1_RUSER,
        RRESP => m_axi_gmem1_RRESP,
        BVALID => m_axi_gmem1_BVALID,
        BREADY => m_axi_gmem1_BREADY,
        BRESP => m_axi_gmem1_BRESP,
        BID => m_axi_gmem1_BID,
        BUSER => m_axi_gmem1_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_ARVALID,
        I_ARREADY => gmem1_ARREADY,
        I_ARADDR => Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_ARADDR,
        I_ARID => Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_ARID,
        I_ARLEN => Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_ARLEN,
        I_ARSIZE => Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_ARSIZE,
        I_ARLOCK => Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_ARLOCK,
        I_ARCACHE => Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_ARCACHE,
        I_ARQOS => Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_ARQOS,
        I_ARPROT => Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_ARPROT,
        I_ARUSER => Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_ARUSER,
        I_ARBURST => Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_ARBURST,
        I_ARREGION => Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_ARREGION,
        I_RVALID => gmem1_RVALID,
        I_RREADY => Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_RREADY,
        I_RDATA => gmem1_RDATA,
        I_RID => gmem1_RID,
        I_RUSER => gmem1_RUSER,
        I_RRESP => gmem1_RRESP,
        I_RLAST => gmem1_RLAST,
        I_AWVALID => ap_const_logic_0,
        I_AWREADY => gmem1_AWREADY,
        I_AWADDR => ap_const_lv64_0,
        I_AWID => ap_const_lv1_0,
        I_AWLEN => ap_const_lv32_0,
        I_AWSIZE => ap_const_lv3_0,
        I_AWLOCK => ap_const_lv2_0,
        I_AWCACHE => ap_const_lv4_0,
        I_AWQOS => ap_const_lv4_0,
        I_AWPROT => ap_const_lv3_0,
        I_AWUSER => ap_const_lv1_0,
        I_AWBURST => ap_const_lv2_0,
        I_AWREGION => ap_const_lv4_0,
        I_WVALID => ap_const_logic_0,
        I_WREADY => gmem1_WREADY,
        I_WDATA => ap_const_lv32_0,
        I_WID => ap_const_lv1_0,
        I_WUSER => ap_const_lv1_0,
        I_WLAST => ap_const_logic_0,
        I_WSTRB => ap_const_lv4_0,
        I_BVALID => gmem1_BVALID,
        I_BREADY => ap_const_logic_0,
        I_BRESP => gmem1_BRESP,
        I_BID => gmem1_BID,
        I_BUSER => gmem1_BUSER);

    gmem2_m_axi_U : component pyr_down_accel_gmem2_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_DW => 32,
        USER_AW => 64,
        USER_MAXREQS => 69,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM2_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM2_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM2_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM2_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM2_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM2_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM2_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM2_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM2_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM2_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM2_CACHE_VALUE)
    port map (
        AWVALID => m_axi_gmem2_AWVALID,
        AWREADY => m_axi_gmem2_AWREADY,
        AWADDR => m_axi_gmem2_AWADDR,
        AWID => m_axi_gmem2_AWID,
        AWLEN => m_axi_gmem2_AWLEN,
        AWSIZE => m_axi_gmem2_AWSIZE,
        AWBURST => m_axi_gmem2_AWBURST,
        AWLOCK => m_axi_gmem2_AWLOCK,
        AWCACHE => m_axi_gmem2_AWCACHE,
        AWPROT => m_axi_gmem2_AWPROT,
        AWQOS => m_axi_gmem2_AWQOS,
        AWREGION => m_axi_gmem2_AWREGION,
        AWUSER => m_axi_gmem2_AWUSER,
        WVALID => m_axi_gmem2_WVALID,
        WREADY => m_axi_gmem2_WREADY,
        WDATA => m_axi_gmem2_WDATA,
        WSTRB => m_axi_gmem2_WSTRB,
        WLAST => m_axi_gmem2_WLAST,
        WID => m_axi_gmem2_WID,
        WUSER => m_axi_gmem2_WUSER,
        ARVALID => m_axi_gmem2_ARVALID,
        ARREADY => m_axi_gmem2_ARREADY,
        ARADDR => m_axi_gmem2_ARADDR,
        ARID => m_axi_gmem2_ARID,
        ARLEN => m_axi_gmem2_ARLEN,
        ARSIZE => m_axi_gmem2_ARSIZE,
        ARBURST => m_axi_gmem2_ARBURST,
        ARLOCK => m_axi_gmem2_ARLOCK,
        ARCACHE => m_axi_gmem2_ARCACHE,
        ARPROT => m_axi_gmem2_ARPROT,
        ARQOS => m_axi_gmem2_ARQOS,
        ARREGION => m_axi_gmem2_ARREGION,
        ARUSER => m_axi_gmem2_ARUSER,
        RVALID => m_axi_gmem2_RVALID,
        RREADY => m_axi_gmem2_RREADY,
        RDATA => m_axi_gmem2_RDATA,
        RLAST => m_axi_gmem2_RLAST,
        RID => m_axi_gmem2_RID,
        RUSER => m_axi_gmem2_RUSER,
        RRESP => m_axi_gmem2_RRESP,
        BVALID => m_axi_gmem2_BVALID,
        BREADY => m_axi_gmem2_BREADY,
        BRESP => m_axi_gmem2_BRESP,
        BID => m_axi_gmem2_BID,
        BUSER => m_axi_gmem2_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => ap_const_logic_0,
        I_ARREADY => gmem2_ARREADY,
        I_ARADDR => ap_const_lv64_0,
        I_ARID => ap_const_lv1_0,
        I_ARLEN => ap_const_lv32_0,
        I_ARSIZE => ap_const_lv3_0,
        I_ARLOCK => ap_const_lv2_0,
        I_ARCACHE => ap_const_lv4_0,
        I_ARQOS => ap_const_lv4_0,
        I_ARPROT => ap_const_lv3_0,
        I_ARUSER => ap_const_lv1_0,
        I_ARBURST => ap_const_lv2_0,
        I_ARREGION => ap_const_lv4_0,
        I_RVALID => gmem2_RVALID,
        I_RREADY => ap_const_logic_0,
        I_RDATA => gmem2_RDATA,
        I_RID => gmem2_RID,
        I_RUSER => gmem2_RUSER,
        I_RRESP => gmem2_RRESP,
        I_RLAST => gmem2_RLAST,
        I_AWVALID => xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_AWVALID,
        I_AWREADY => gmem2_AWREADY,
        I_AWADDR => xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_AWADDR,
        I_AWID => xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_AWID,
        I_AWLEN => xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_AWLEN,
        I_AWSIZE => xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_AWSIZE,
        I_AWLOCK => xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_AWLOCK,
        I_AWCACHE => xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_AWCACHE,
        I_AWQOS => xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_AWQOS,
        I_AWPROT => xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_AWPROT,
        I_AWUSER => xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_AWUSER,
        I_AWBURST => xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_AWBURST,
        I_AWREGION => xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_AWREGION,
        I_WVALID => xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_WVALID,
        I_WREADY => gmem2_WREADY,
        I_WDATA => xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_WDATA,
        I_WID => xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_WID,
        I_WUSER => xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_WUSER,
        I_WLAST => xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_WLAST,
        I_WSTRB => xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_WSTRB,
        I_BVALID => gmem2_BVALID,
        I_BREADY => xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_BREADY,
        I_BRESP => gmem2_BRESP,
        I_BID => gmem2_BID,
        I_BUSER => gmem2_BUSER);

    gmem3_m_axi_U : component pyr_down_accel_gmem3_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_DW => 32,
        USER_AW => 64,
        USER_MAXREQS => 69,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM3_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM3_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM3_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM3_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM3_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM3_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM3_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM3_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM3_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM3_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM3_CACHE_VALUE)
    port map (
        AWVALID => m_axi_gmem3_AWVALID,
        AWREADY => m_axi_gmem3_AWREADY,
        AWADDR => m_axi_gmem3_AWADDR,
        AWID => m_axi_gmem3_AWID,
        AWLEN => m_axi_gmem3_AWLEN,
        AWSIZE => m_axi_gmem3_AWSIZE,
        AWBURST => m_axi_gmem3_AWBURST,
        AWLOCK => m_axi_gmem3_AWLOCK,
        AWCACHE => m_axi_gmem3_AWCACHE,
        AWPROT => m_axi_gmem3_AWPROT,
        AWQOS => m_axi_gmem3_AWQOS,
        AWREGION => m_axi_gmem3_AWREGION,
        AWUSER => m_axi_gmem3_AWUSER,
        WVALID => m_axi_gmem3_WVALID,
        WREADY => m_axi_gmem3_WREADY,
        WDATA => m_axi_gmem3_WDATA,
        WSTRB => m_axi_gmem3_WSTRB,
        WLAST => m_axi_gmem3_WLAST,
        WID => m_axi_gmem3_WID,
        WUSER => m_axi_gmem3_WUSER,
        ARVALID => m_axi_gmem3_ARVALID,
        ARREADY => m_axi_gmem3_ARREADY,
        ARADDR => m_axi_gmem3_ARADDR,
        ARID => m_axi_gmem3_ARID,
        ARLEN => m_axi_gmem3_ARLEN,
        ARSIZE => m_axi_gmem3_ARSIZE,
        ARBURST => m_axi_gmem3_ARBURST,
        ARLOCK => m_axi_gmem3_ARLOCK,
        ARCACHE => m_axi_gmem3_ARCACHE,
        ARPROT => m_axi_gmem3_ARPROT,
        ARQOS => m_axi_gmem3_ARQOS,
        ARREGION => m_axi_gmem3_ARREGION,
        ARUSER => m_axi_gmem3_ARUSER,
        RVALID => m_axi_gmem3_RVALID,
        RREADY => m_axi_gmem3_RREADY,
        RDATA => m_axi_gmem3_RDATA,
        RLAST => m_axi_gmem3_RLAST,
        RID => m_axi_gmem3_RID,
        RUSER => m_axi_gmem3_RUSER,
        RRESP => m_axi_gmem3_RRESP,
        BVALID => m_axi_gmem3_BVALID,
        BREADY => m_axi_gmem3_BREADY,
        BRESP => m_axi_gmem3_BRESP,
        BID => m_axi_gmem3_BID,
        BUSER => m_axi_gmem3_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_ARVALID,
        I_ARREADY => gmem3_ARREADY,
        I_ARADDR => Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_ARADDR,
        I_ARID => Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_ARID,
        I_ARLEN => Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_ARLEN,
        I_ARSIZE => Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_ARSIZE,
        I_ARLOCK => Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_ARLOCK,
        I_ARCACHE => Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_ARCACHE,
        I_ARQOS => Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_ARQOS,
        I_ARPROT => Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_ARPROT,
        I_ARUSER => Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_ARUSER,
        I_ARBURST => Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_ARBURST,
        I_ARREGION => Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_ARREGION,
        I_RVALID => gmem3_RVALID,
        I_RREADY => Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_RREADY,
        I_RDATA => gmem3_RDATA,
        I_RID => gmem3_RID,
        I_RUSER => gmem3_RUSER,
        I_RRESP => gmem3_RRESP,
        I_RLAST => gmem3_RLAST,
        I_AWVALID => ap_const_logic_0,
        I_AWREADY => gmem3_AWREADY,
        I_AWADDR => ap_const_lv64_0,
        I_AWID => ap_const_lv1_0,
        I_AWLEN => ap_const_lv32_0,
        I_AWSIZE => ap_const_lv3_0,
        I_AWLOCK => ap_const_lv2_0,
        I_AWCACHE => ap_const_lv4_0,
        I_AWQOS => ap_const_lv4_0,
        I_AWPROT => ap_const_lv3_0,
        I_AWUSER => ap_const_lv1_0,
        I_AWBURST => ap_const_lv2_0,
        I_AWREGION => ap_const_lv4_0,
        I_WVALID => ap_const_logic_0,
        I_WREADY => gmem3_WREADY,
        I_WDATA => ap_const_lv32_0,
        I_WID => ap_const_lv1_0,
        I_WUSER => ap_const_lv1_0,
        I_WLAST => ap_const_logic_0,
        I_WSTRB => ap_const_lv4_0,
        I_BVALID => gmem3_BVALID,
        I_BREADY => ap_const_logic_0,
        I_BRESP => gmem3_BRESP,
        I_BID => gmem3_BID,
        I_BUSER => gmem3_BUSER);

    gmem4_m_axi_U : component pyr_down_accel_gmem4_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_DW => 32,
        USER_AW => 64,
        USER_MAXREQS => 69,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM4_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM4_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM4_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM4_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM4_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM4_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM4_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM4_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM4_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM4_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM4_CACHE_VALUE)
    port map (
        AWVALID => m_axi_gmem4_AWVALID,
        AWREADY => m_axi_gmem4_AWREADY,
        AWADDR => m_axi_gmem4_AWADDR,
        AWID => m_axi_gmem4_AWID,
        AWLEN => m_axi_gmem4_AWLEN,
        AWSIZE => m_axi_gmem4_AWSIZE,
        AWBURST => m_axi_gmem4_AWBURST,
        AWLOCK => m_axi_gmem4_AWLOCK,
        AWCACHE => m_axi_gmem4_AWCACHE,
        AWPROT => m_axi_gmem4_AWPROT,
        AWQOS => m_axi_gmem4_AWQOS,
        AWREGION => m_axi_gmem4_AWREGION,
        AWUSER => m_axi_gmem4_AWUSER,
        WVALID => m_axi_gmem4_WVALID,
        WREADY => m_axi_gmem4_WREADY,
        WDATA => m_axi_gmem4_WDATA,
        WSTRB => m_axi_gmem4_WSTRB,
        WLAST => m_axi_gmem4_WLAST,
        WID => m_axi_gmem4_WID,
        WUSER => m_axi_gmem4_WUSER,
        ARVALID => m_axi_gmem4_ARVALID,
        ARREADY => m_axi_gmem4_ARREADY,
        ARADDR => m_axi_gmem4_ARADDR,
        ARID => m_axi_gmem4_ARID,
        ARLEN => m_axi_gmem4_ARLEN,
        ARSIZE => m_axi_gmem4_ARSIZE,
        ARBURST => m_axi_gmem4_ARBURST,
        ARLOCK => m_axi_gmem4_ARLOCK,
        ARCACHE => m_axi_gmem4_ARCACHE,
        ARPROT => m_axi_gmem4_ARPROT,
        ARQOS => m_axi_gmem4_ARQOS,
        ARREGION => m_axi_gmem4_ARREGION,
        ARUSER => m_axi_gmem4_ARUSER,
        RVALID => m_axi_gmem4_RVALID,
        RREADY => m_axi_gmem4_RREADY,
        RDATA => m_axi_gmem4_RDATA,
        RLAST => m_axi_gmem4_RLAST,
        RID => m_axi_gmem4_RID,
        RUSER => m_axi_gmem4_RUSER,
        RRESP => m_axi_gmem4_RRESP,
        BVALID => m_axi_gmem4_BVALID,
        BREADY => m_axi_gmem4_BREADY,
        BRESP => m_axi_gmem4_BRESP,
        BID => m_axi_gmem4_BID,
        BUSER => m_axi_gmem4_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => ap_const_logic_0,
        I_ARREADY => gmem4_ARREADY,
        I_ARADDR => ap_const_lv64_0,
        I_ARID => ap_const_lv1_0,
        I_ARLEN => ap_const_lv32_0,
        I_ARSIZE => ap_const_lv3_0,
        I_ARLOCK => ap_const_lv2_0,
        I_ARCACHE => ap_const_lv4_0,
        I_ARQOS => ap_const_lv4_0,
        I_ARPROT => ap_const_lv3_0,
        I_ARUSER => ap_const_lv1_0,
        I_ARBURST => ap_const_lv2_0,
        I_ARREGION => ap_const_lv4_0,
        I_RVALID => gmem4_RVALID,
        I_RREADY => ap_const_logic_0,
        I_RDATA => gmem4_RDATA,
        I_RID => gmem4_RID,
        I_RUSER => gmem4_RUSER,
        I_RRESP => gmem4_RRESP,
        I_RLAST => gmem4_RLAST,
        I_AWVALID => xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_AWVALID,
        I_AWREADY => gmem4_AWREADY,
        I_AWADDR => xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_AWADDR,
        I_AWID => xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_AWID,
        I_AWLEN => xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_AWLEN,
        I_AWSIZE => xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_AWSIZE,
        I_AWLOCK => xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_AWLOCK,
        I_AWCACHE => xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_AWCACHE,
        I_AWQOS => xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_AWQOS,
        I_AWPROT => xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_AWPROT,
        I_AWUSER => xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_AWUSER,
        I_AWBURST => xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_AWBURST,
        I_AWREGION => xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_AWREGION,
        I_WVALID => xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_WVALID,
        I_WREADY => gmem4_WREADY,
        I_WDATA => xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_WDATA,
        I_WID => xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_WID,
        I_WUSER => xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_WUSER,
        I_WLAST => xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_WLAST,
        I_WSTRB => xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_WSTRB,
        I_BVALID => gmem4_BVALID,
        I_BREADY => xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_BREADY,
        I_BRESP => gmem4_BRESP,
        I_BID => gmem4_BID,
        I_BUSER => gmem4_BUSER);

    Block_split1_proc30_U0 : component pyr_down_accel_Block_split1_proc30
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Block_split1_proc30_U0_ap_start,
        start_full_n => Block_split1_proc30_U0_start_full_n,
        ap_done => Block_split1_proc30_U0_ap_done,
        ap_continue => Block_split1_proc30_U0_ap_continue,
        ap_idle => Block_split1_proc30_U0_ap_idle,
        ap_ready => Block_split1_proc30_U0_ap_ready,
        start_out => Block_split1_proc30_U0_start_out,
        start_write => Block_split1_proc30_U0_start_write,
        pyr_h => pyr_h,
        pyr_w => pyr_w,
        pyr_out_h => pyr_out_h,
        pyr_out_w => pyr_out_w,
        inImgPyr1 => inImgPyr1,
        outImgPyr1 => outImgPyr1,
        inImgPyr2 => inImgPyr2,
        outImgPyr2 => outImgPyr2,
        pyr1_in_mat_rows_out_din => Block_split1_proc30_U0_pyr1_in_mat_rows_out_din,
        pyr1_in_mat_rows_out_full_n => pyr1_in_mat_rows_c_full_n,
        pyr1_in_mat_rows_out_write => Block_split1_proc30_U0_pyr1_in_mat_rows_out_write,
        pyr1_in_mat_cols_out_din => Block_split1_proc30_U0_pyr1_in_mat_cols_out_din,
        pyr1_in_mat_cols_out_full_n => pyr1_in_mat_cols_c_full_n,
        pyr1_in_mat_cols_out_write => Block_split1_proc30_U0_pyr1_in_mat_cols_out_write,
        pyr1_out_mat_rows_out_din => Block_split1_proc30_U0_pyr1_out_mat_rows_out_din,
        pyr1_out_mat_rows_out_full_n => pyr1_out_mat_rows_c_full_n,
        pyr1_out_mat_rows_out_write => Block_split1_proc30_U0_pyr1_out_mat_rows_out_write,
        pyr1_out_mat_cols_out_din => Block_split1_proc30_U0_pyr1_out_mat_cols_out_din,
        pyr1_out_mat_cols_out_full_n => pyr1_out_mat_cols_c_full_n,
        pyr1_out_mat_cols_out_write => Block_split1_proc30_U0_pyr1_out_mat_cols_out_write,
        pyr2_in_mat_rows_out_din => Block_split1_proc30_U0_pyr2_in_mat_rows_out_din,
        pyr2_in_mat_rows_out_full_n => pyr2_in_mat_rows_c_full_n,
        pyr2_in_mat_rows_out_write => Block_split1_proc30_U0_pyr2_in_mat_rows_out_write,
        pyr2_in_mat_cols_out_din => Block_split1_proc30_U0_pyr2_in_mat_cols_out_din,
        pyr2_in_mat_cols_out_full_n => pyr2_in_mat_cols_c_full_n,
        pyr2_in_mat_cols_out_write => Block_split1_proc30_U0_pyr2_in_mat_cols_out_write,
        pyr2_out_mat_rows_out_din => Block_split1_proc30_U0_pyr2_out_mat_rows_out_din,
        pyr2_out_mat_rows_out_full_n => pyr2_out_mat_rows_c_full_n,
        pyr2_out_mat_rows_out_write => Block_split1_proc30_U0_pyr2_out_mat_rows_out_write,
        pyr2_out_mat_cols_out_din => Block_split1_proc30_U0_pyr2_out_mat_cols_out_din,
        pyr2_out_mat_cols_out_full_n => pyr2_out_mat_cols_c_full_n,
        pyr2_out_mat_cols_out_write => Block_split1_proc30_U0_pyr2_out_mat_cols_out_write,
        inImgPyr1_out_din => Block_split1_proc30_U0_inImgPyr1_out_din,
        inImgPyr1_out_full_n => inImgPyr1_c_full_n,
        inImgPyr1_out_write => Block_split1_proc30_U0_inImgPyr1_out_write,
        outImgPyr1_out_din => Block_split1_proc30_U0_outImgPyr1_out_din,
        outImgPyr1_out_full_n => outImgPyr1_c_full_n,
        outImgPyr1_out_write => Block_split1_proc30_U0_outImgPyr1_out_write,
        inImgPyr2_out_din => Block_split1_proc30_U0_inImgPyr2_out_din,
        inImgPyr2_out_full_n => inImgPyr2_c_full_n,
        inImgPyr2_out_write => Block_split1_proc30_U0_inImgPyr2_out_write,
        outImgPyr2_out_din => Block_split1_proc30_U0_outImgPyr2_out_din,
        outImgPyr2_out_full_n => outImgPyr2_c_full_n,
        outImgPyr2_out_write => Block_split1_proc30_U0_outImgPyr2_out_write);

    Array2xfMat_32_0_1080_1920_1_6_U0 : component pyr_down_accel_Array2xfMat_32_0_1080_1920_1_6
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Array2xfMat_32_0_1080_1920_1_6_U0_ap_start,
        start_full_n => start_for_pyrDown_0_1080_1920_1_false_7_U0_full_n,
        ap_done => Array2xfMat_32_0_1080_1920_1_6_U0_ap_done,
        ap_continue => Array2xfMat_32_0_1080_1920_1_6_U0_ap_continue,
        ap_idle => Array2xfMat_32_0_1080_1920_1_6_U0_ap_idle,
        ap_ready => Array2xfMat_32_0_1080_1920_1_6_U0_ap_ready,
        start_out => Array2xfMat_32_0_1080_1920_1_6_U0_start_out,
        start_write => Array2xfMat_32_0_1080_1920_1_6_U0_start_write,
        m_axi_gmem1_AWVALID => Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_AWVALID,
        m_axi_gmem1_AWREADY => ap_const_logic_0,
        m_axi_gmem1_AWADDR => Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_AWADDR,
        m_axi_gmem1_AWID => Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_AWID,
        m_axi_gmem1_AWLEN => Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_AWLEN,
        m_axi_gmem1_AWSIZE => Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_AWSIZE,
        m_axi_gmem1_AWBURST => Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_AWBURST,
        m_axi_gmem1_AWLOCK => Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_AWLOCK,
        m_axi_gmem1_AWCACHE => Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_AWCACHE,
        m_axi_gmem1_AWPROT => Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_AWPROT,
        m_axi_gmem1_AWQOS => Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_AWQOS,
        m_axi_gmem1_AWREGION => Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_AWREGION,
        m_axi_gmem1_AWUSER => Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_AWUSER,
        m_axi_gmem1_WVALID => Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_WVALID,
        m_axi_gmem1_WREADY => ap_const_logic_0,
        m_axi_gmem1_WDATA => Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_WDATA,
        m_axi_gmem1_WSTRB => Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_WSTRB,
        m_axi_gmem1_WLAST => Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_WLAST,
        m_axi_gmem1_WID => Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_WID,
        m_axi_gmem1_WUSER => Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_WUSER,
        m_axi_gmem1_ARVALID => Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_ARVALID,
        m_axi_gmem1_ARREADY => gmem1_ARREADY,
        m_axi_gmem1_ARADDR => Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_ARADDR,
        m_axi_gmem1_ARID => Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_ARID,
        m_axi_gmem1_ARLEN => Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_ARLEN,
        m_axi_gmem1_ARSIZE => Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_ARSIZE,
        m_axi_gmem1_ARBURST => Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_ARBURST,
        m_axi_gmem1_ARLOCK => Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_ARLOCK,
        m_axi_gmem1_ARCACHE => Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_ARCACHE,
        m_axi_gmem1_ARPROT => Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_ARPROT,
        m_axi_gmem1_ARQOS => Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_ARQOS,
        m_axi_gmem1_ARREGION => Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_ARREGION,
        m_axi_gmem1_ARUSER => Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_ARUSER,
        m_axi_gmem1_RVALID => gmem1_RVALID,
        m_axi_gmem1_RREADY => Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_RREADY,
        m_axi_gmem1_RDATA => gmem1_RDATA,
        m_axi_gmem1_RLAST => gmem1_RLAST,
        m_axi_gmem1_RID => gmem1_RID,
        m_axi_gmem1_RUSER => gmem1_RUSER,
        m_axi_gmem1_RRESP => gmem1_RRESP,
        m_axi_gmem1_BVALID => ap_const_logic_0,
        m_axi_gmem1_BREADY => Array2xfMat_32_0_1080_1920_1_6_U0_m_axi_gmem1_BREADY,
        m_axi_gmem1_BRESP => ap_const_lv2_0,
        m_axi_gmem1_BID => ap_const_lv1_0,
        m_axi_gmem1_BUSER => ap_const_lv1_0,
        pyr1_in_mat_431_din => Array2xfMat_32_0_1080_1920_1_6_U0_pyr1_in_mat_431_din,
        pyr1_in_mat_431_full_n => pyr1_in_mat_data_full_n,
        pyr1_in_mat_431_write => Array2xfMat_32_0_1080_1920_1_6_U0_pyr1_in_mat_431_write,
        srcPtr_dout => inImgPyr1_c_dout,
        srcPtr_empty_n => inImgPyr1_c_empty_n,
        srcPtr_read => Array2xfMat_32_0_1080_1920_1_6_U0_srcPtr_read,
        dstMat_1_dout => pyr1_in_mat_rows_c_dout,
        dstMat_1_empty_n => pyr1_in_mat_rows_c_empty_n,
        dstMat_1_read => Array2xfMat_32_0_1080_1920_1_6_U0_dstMat_1_read,
        dstMat_2_dout => pyr1_in_mat_cols_c_dout,
        dstMat_2_empty_n => pyr1_in_mat_cols_c_empty_n,
        dstMat_2_read => Array2xfMat_32_0_1080_1920_1_6_U0_dstMat_2_read,
        dstMat_1_out_din => Array2xfMat_32_0_1080_1920_1_6_U0_dstMat_1_out_din,
        dstMat_1_out_full_n => pyr1_in_mat_rows_c15_full_n,
        dstMat_1_out_write => Array2xfMat_32_0_1080_1920_1_6_U0_dstMat_1_out_write,
        dstMat_2_out_din => Array2xfMat_32_0_1080_1920_1_6_U0_dstMat_2_out_din,
        dstMat_2_out_full_n => pyr1_in_mat_cols_c16_full_n,
        dstMat_2_out_write => Array2xfMat_32_0_1080_1920_1_6_U0_dstMat_2_out_write);

    pyrDown_0_1080_1920_1_false_7_U0 : component pyr_down_accel_pyrDown_0_1080_1920_1_false_7
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => pyrDown_0_1080_1920_1_false_7_U0_ap_start,
        ap_done => pyrDown_0_1080_1920_1_false_7_U0_ap_done,
        ap_continue => pyrDown_0_1080_1920_1_false_7_U0_ap_continue,
        ap_idle => pyrDown_0_1080_1920_1_false_7_U0_ap_idle,
        ap_ready => pyrDown_0_1080_1920_1_false_7_U0_ap_ready,
        pyr1_in_mat_431_dout => pyr1_in_mat_data_dout,
        pyr1_in_mat_431_empty_n => pyr1_in_mat_data_empty_n,
        pyr1_in_mat_431_read => pyrDown_0_1080_1920_1_false_7_U0_pyr1_in_mat_431_read,
        pyr1_out_mat_432_din => pyrDown_0_1080_1920_1_false_7_U0_pyr1_out_mat_432_din,
        pyr1_out_mat_432_full_n => pyr1_out_mat_data_full_n,
        pyr1_out_mat_432_write => pyrDown_0_1080_1920_1_false_7_U0_pyr1_out_mat_432_write,
        p_src_1_dout => pyr1_in_mat_rows_c15_dout,
        p_src_1_empty_n => pyr1_in_mat_rows_c15_empty_n,
        p_src_1_read => pyrDown_0_1080_1920_1_false_7_U0_p_src_1_read,
        p_src_2_dout => pyr1_in_mat_cols_c16_dout,
        p_src_2_empty_n => pyr1_in_mat_cols_c16_empty_n,
        p_src_2_read => pyrDown_0_1080_1920_1_false_7_U0_p_src_2_read);

    xfMat2Array_32_0_1080_1920_1_8_U0 : component pyr_down_accel_xfMat2Array_32_0_1080_1920_1_8
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => xfMat2Array_32_0_1080_1920_1_8_U0_ap_start,
        ap_done => xfMat2Array_32_0_1080_1920_1_8_U0_ap_done,
        ap_continue => xfMat2Array_32_0_1080_1920_1_8_U0_ap_continue,
        ap_idle => xfMat2Array_32_0_1080_1920_1_8_U0_ap_idle,
        ap_ready => xfMat2Array_32_0_1080_1920_1_8_U0_ap_ready,
        pyr1_out_mat_432_dout => pyr1_out_mat_data_dout,
        pyr1_out_mat_432_empty_n => pyr1_out_mat_data_empty_n,
        pyr1_out_mat_432_read => xfMat2Array_32_0_1080_1920_1_8_U0_pyr1_out_mat_432_read,
        m_axi_gmem2_AWVALID => xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_AWVALID,
        m_axi_gmem2_AWREADY => gmem2_AWREADY,
        m_axi_gmem2_AWADDR => xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_AWADDR,
        m_axi_gmem2_AWID => xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_AWID,
        m_axi_gmem2_AWLEN => xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_AWLEN,
        m_axi_gmem2_AWSIZE => xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_AWSIZE,
        m_axi_gmem2_AWBURST => xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_AWBURST,
        m_axi_gmem2_AWLOCK => xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_AWLOCK,
        m_axi_gmem2_AWCACHE => xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_AWCACHE,
        m_axi_gmem2_AWPROT => xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_AWPROT,
        m_axi_gmem2_AWQOS => xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_AWQOS,
        m_axi_gmem2_AWREGION => xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_AWREGION,
        m_axi_gmem2_AWUSER => xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_AWUSER,
        m_axi_gmem2_WVALID => xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_WVALID,
        m_axi_gmem2_WREADY => gmem2_WREADY,
        m_axi_gmem2_WDATA => xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_WDATA,
        m_axi_gmem2_WSTRB => xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_WSTRB,
        m_axi_gmem2_WLAST => xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_WLAST,
        m_axi_gmem2_WID => xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_WID,
        m_axi_gmem2_WUSER => xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_WUSER,
        m_axi_gmem2_ARVALID => xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_ARVALID,
        m_axi_gmem2_ARREADY => ap_const_logic_0,
        m_axi_gmem2_ARADDR => xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_ARADDR,
        m_axi_gmem2_ARID => xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_ARID,
        m_axi_gmem2_ARLEN => xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_ARLEN,
        m_axi_gmem2_ARSIZE => xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_ARSIZE,
        m_axi_gmem2_ARBURST => xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_ARBURST,
        m_axi_gmem2_ARLOCK => xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_ARLOCK,
        m_axi_gmem2_ARCACHE => xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_ARCACHE,
        m_axi_gmem2_ARPROT => xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_ARPROT,
        m_axi_gmem2_ARQOS => xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_ARQOS,
        m_axi_gmem2_ARREGION => xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_ARREGION,
        m_axi_gmem2_ARUSER => xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_ARUSER,
        m_axi_gmem2_RVALID => ap_const_logic_0,
        m_axi_gmem2_RREADY => xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_RREADY,
        m_axi_gmem2_RDATA => ap_const_lv32_0,
        m_axi_gmem2_RLAST => ap_const_logic_0,
        m_axi_gmem2_RID => ap_const_lv1_0,
        m_axi_gmem2_RUSER => ap_const_lv1_0,
        m_axi_gmem2_RRESP => ap_const_lv2_0,
        m_axi_gmem2_BVALID => gmem2_BVALID,
        m_axi_gmem2_BREADY => xfMat2Array_32_0_1080_1920_1_8_U0_m_axi_gmem2_BREADY,
        m_axi_gmem2_BRESP => gmem2_BRESP,
        m_axi_gmem2_BID => gmem2_BID,
        m_axi_gmem2_BUSER => gmem2_BUSER,
        srcMat_1_dout => pyr1_out_mat_rows_c_dout,
        srcMat_1_empty_n => pyr1_out_mat_rows_c_empty_n,
        srcMat_1_read => xfMat2Array_32_0_1080_1920_1_8_U0_srcMat_1_read,
        srcMat_2_dout => pyr1_out_mat_cols_c_dout,
        srcMat_2_empty_n => pyr1_out_mat_cols_c_empty_n,
        srcMat_2_read => xfMat2Array_32_0_1080_1920_1_8_U0_srcMat_2_read,
        dstPtr_dout => outImgPyr1_c_dout,
        dstPtr_empty_n => outImgPyr1_c_empty_n,
        dstPtr_read => xfMat2Array_32_0_1080_1920_1_8_U0_dstPtr_read);

    Array2xfMat_32_0_1080_1920_1_U0 : component pyr_down_accel_Array2xfMat_32_0_1080_1920_1_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Array2xfMat_32_0_1080_1920_1_U0_ap_start,
        start_full_n => start_for_pyrDown_0_1080_1920_1_false_U0_full_n,
        ap_done => Array2xfMat_32_0_1080_1920_1_U0_ap_done,
        ap_continue => Array2xfMat_32_0_1080_1920_1_U0_ap_continue,
        ap_idle => Array2xfMat_32_0_1080_1920_1_U0_ap_idle,
        ap_ready => Array2xfMat_32_0_1080_1920_1_U0_ap_ready,
        start_out => Array2xfMat_32_0_1080_1920_1_U0_start_out,
        start_write => Array2xfMat_32_0_1080_1920_1_U0_start_write,
        m_axi_gmem1_AWVALID => Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_AWVALID,
        m_axi_gmem1_AWREADY => ap_const_logic_0,
        m_axi_gmem1_AWADDR => Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_AWADDR,
        m_axi_gmem1_AWID => Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_AWID,
        m_axi_gmem1_AWLEN => Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_AWLEN,
        m_axi_gmem1_AWSIZE => Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_AWSIZE,
        m_axi_gmem1_AWBURST => Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_AWBURST,
        m_axi_gmem1_AWLOCK => Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_AWLOCK,
        m_axi_gmem1_AWCACHE => Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_AWCACHE,
        m_axi_gmem1_AWPROT => Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_AWPROT,
        m_axi_gmem1_AWQOS => Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_AWQOS,
        m_axi_gmem1_AWREGION => Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_AWREGION,
        m_axi_gmem1_AWUSER => Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_AWUSER,
        m_axi_gmem1_WVALID => Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_WVALID,
        m_axi_gmem1_WREADY => ap_const_logic_0,
        m_axi_gmem1_WDATA => Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_WDATA,
        m_axi_gmem1_WSTRB => Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_WSTRB,
        m_axi_gmem1_WLAST => Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_WLAST,
        m_axi_gmem1_WID => Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_WID,
        m_axi_gmem1_WUSER => Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_WUSER,
        m_axi_gmem1_ARVALID => Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_ARVALID,
        m_axi_gmem1_ARREADY => gmem3_ARREADY,
        m_axi_gmem1_ARADDR => Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_ARADDR,
        m_axi_gmem1_ARID => Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_ARID,
        m_axi_gmem1_ARLEN => Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_ARLEN,
        m_axi_gmem1_ARSIZE => Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_ARSIZE,
        m_axi_gmem1_ARBURST => Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_ARBURST,
        m_axi_gmem1_ARLOCK => Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_ARLOCK,
        m_axi_gmem1_ARCACHE => Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_ARCACHE,
        m_axi_gmem1_ARPROT => Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_ARPROT,
        m_axi_gmem1_ARQOS => Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_ARQOS,
        m_axi_gmem1_ARREGION => Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_ARREGION,
        m_axi_gmem1_ARUSER => Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_ARUSER,
        m_axi_gmem1_RVALID => gmem3_RVALID,
        m_axi_gmem1_RREADY => Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_RREADY,
        m_axi_gmem1_RDATA => gmem3_RDATA,
        m_axi_gmem1_RLAST => gmem3_RLAST,
        m_axi_gmem1_RID => gmem3_RID,
        m_axi_gmem1_RUSER => gmem3_RUSER,
        m_axi_gmem1_RRESP => gmem3_RRESP,
        m_axi_gmem1_BVALID => ap_const_logic_0,
        m_axi_gmem1_BREADY => Array2xfMat_32_0_1080_1920_1_U0_m_axi_gmem1_BREADY,
        m_axi_gmem1_BRESP => ap_const_lv2_0,
        m_axi_gmem1_BID => ap_const_lv1_0,
        m_axi_gmem1_BUSER => ap_const_lv1_0,
        pyr1_in_mat_431_din => Array2xfMat_32_0_1080_1920_1_U0_pyr1_in_mat_431_din,
        pyr1_in_mat_431_full_n => pyr2_in_mat_data_full_n,
        pyr1_in_mat_431_write => Array2xfMat_32_0_1080_1920_1_U0_pyr1_in_mat_431_write,
        srcPtr_dout => inImgPyr2_c_dout,
        srcPtr_empty_n => inImgPyr2_c_empty_n,
        srcPtr_read => Array2xfMat_32_0_1080_1920_1_U0_srcPtr_read,
        dstMat_1_dout => pyr2_in_mat_rows_c_dout,
        dstMat_1_empty_n => pyr2_in_mat_rows_c_empty_n,
        dstMat_1_read => Array2xfMat_32_0_1080_1920_1_U0_dstMat_1_read,
        dstMat_2_dout => pyr2_in_mat_cols_c_dout,
        dstMat_2_empty_n => pyr2_in_mat_cols_c_empty_n,
        dstMat_2_read => Array2xfMat_32_0_1080_1920_1_U0_dstMat_2_read,
        dstMat_1_out_din => Array2xfMat_32_0_1080_1920_1_U0_dstMat_1_out_din,
        dstMat_1_out_full_n => pyr2_in_mat_rows_c17_full_n,
        dstMat_1_out_write => Array2xfMat_32_0_1080_1920_1_U0_dstMat_1_out_write,
        dstMat_2_out_din => Array2xfMat_32_0_1080_1920_1_U0_dstMat_2_out_din,
        dstMat_2_out_full_n => pyr2_in_mat_cols_c18_full_n,
        dstMat_2_out_write => Array2xfMat_32_0_1080_1920_1_U0_dstMat_2_out_write);

    pyrDown_0_1080_1920_1_false_U0 : component pyr_down_accel_pyrDown_0_1080_1920_1_false_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => pyrDown_0_1080_1920_1_false_U0_ap_start,
        ap_done => pyrDown_0_1080_1920_1_false_U0_ap_done,
        ap_continue => pyrDown_0_1080_1920_1_false_U0_ap_continue,
        ap_idle => pyrDown_0_1080_1920_1_false_U0_ap_idle,
        ap_ready => pyrDown_0_1080_1920_1_false_U0_ap_ready,
        pyr1_in_mat_431_dout => pyr2_in_mat_data_dout,
        pyr1_in_mat_431_empty_n => pyr2_in_mat_data_empty_n,
        pyr1_in_mat_431_read => pyrDown_0_1080_1920_1_false_U0_pyr1_in_mat_431_read,
        pyr1_out_mat_432_din => pyrDown_0_1080_1920_1_false_U0_pyr1_out_mat_432_din,
        pyr1_out_mat_432_full_n => pyr2_out_mat_data_full_n,
        pyr1_out_mat_432_write => pyrDown_0_1080_1920_1_false_U0_pyr1_out_mat_432_write,
        p_src_1_dout => pyr2_in_mat_rows_c17_dout,
        p_src_1_empty_n => pyr2_in_mat_rows_c17_empty_n,
        p_src_1_read => pyrDown_0_1080_1920_1_false_U0_p_src_1_read,
        p_src_2_dout => pyr2_in_mat_cols_c18_dout,
        p_src_2_empty_n => pyr2_in_mat_cols_c18_empty_n,
        p_src_2_read => pyrDown_0_1080_1920_1_false_U0_p_src_2_read);

    xfMat2Array_32_0_1080_1920_1_U0 : component pyr_down_accel_xfMat2Array_32_0_1080_1920_1_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => xfMat2Array_32_0_1080_1920_1_U0_ap_start,
        ap_done => xfMat2Array_32_0_1080_1920_1_U0_ap_done,
        ap_continue => xfMat2Array_32_0_1080_1920_1_U0_ap_continue,
        ap_idle => xfMat2Array_32_0_1080_1920_1_U0_ap_idle,
        ap_ready => xfMat2Array_32_0_1080_1920_1_U0_ap_ready,
        pyr1_out_mat_432_dout => pyr2_out_mat_data_dout,
        pyr1_out_mat_432_empty_n => pyr2_out_mat_data_empty_n,
        pyr1_out_mat_432_read => xfMat2Array_32_0_1080_1920_1_U0_pyr1_out_mat_432_read,
        m_axi_gmem2_AWVALID => xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_AWVALID,
        m_axi_gmem2_AWREADY => gmem4_AWREADY,
        m_axi_gmem2_AWADDR => xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_AWADDR,
        m_axi_gmem2_AWID => xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_AWID,
        m_axi_gmem2_AWLEN => xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_AWLEN,
        m_axi_gmem2_AWSIZE => xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_AWSIZE,
        m_axi_gmem2_AWBURST => xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_AWBURST,
        m_axi_gmem2_AWLOCK => xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_AWLOCK,
        m_axi_gmem2_AWCACHE => xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_AWCACHE,
        m_axi_gmem2_AWPROT => xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_AWPROT,
        m_axi_gmem2_AWQOS => xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_AWQOS,
        m_axi_gmem2_AWREGION => xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_AWREGION,
        m_axi_gmem2_AWUSER => xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_AWUSER,
        m_axi_gmem2_WVALID => xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_WVALID,
        m_axi_gmem2_WREADY => gmem4_WREADY,
        m_axi_gmem2_WDATA => xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_WDATA,
        m_axi_gmem2_WSTRB => xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_WSTRB,
        m_axi_gmem2_WLAST => xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_WLAST,
        m_axi_gmem2_WID => xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_WID,
        m_axi_gmem2_WUSER => xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_WUSER,
        m_axi_gmem2_ARVALID => xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_ARVALID,
        m_axi_gmem2_ARREADY => ap_const_logic_0,
        m_axi_gmem2_ARADDR => xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_ARADDR,
        m_axi_gmem2_ARID => xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_ARID,
        m_axi_gmem2_ARLEN => xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_ARLEN,
        m_axi_gmem2_ARSIZE => xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_ARSIZE,
        m_axi_gmem2_ARBURST => xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_ARBURST,
        m_axi_gmem2_ARLOCK => xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_ARLOCK,
        m_axi_gmem2_ARCACHE => xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_ARCACHE,
        m_axi_gmem2_ARPROT => xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_ARPROT,
        m_axi_gmem2_ARQOS => xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_ARQOS,
        m_axi_gmem2_ARREGION => xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_ARREGION,
        m_axi_gmem2_ARUSER => xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_ARUSER,
        m_axi_gmem2_RVALID => ap_const_logic_0,
        m_axi_gmem2_RREADY => xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_RREADY,
        m_axi_gmem2_RDATA => ap_const_lv32_0,
        m_axi_gmem2_RLAST => ap_const_logic_0,
        m_axi_gmem2_RID => ap_const_lv1_0,
        m_axi_gmem2_RUSER => ap_const_lv1_0,
        m_axi_gmem2_RRESP => ap_const_lv2_0,
        m_axi_gmem2_BVALID => gmem4_BVALID,
        m_axi_gmem2_BREADY => xfMat2Array_32_0_1080_1920_1_U0_m_axi_gmem2_BREADY,
        m_axi_gmem2_BRESP => gmem4_BRESP,
        m_axi_gmem2_BID => gmem4_BID,
        m_axi_gmem2_BUSER => gmem4_BUSER,
        srcMat_1_dout => pyr2_out_mat_rows_c_dout,
        srcMat_1_empty_n => pyr2_out_mat_rows_c_empty_n,
        srcMat_1_read => xfMat2Array_32_0_1080_1920_1_U0_srcMat_1_read,
        srcMat_2_dout => pyr2_out_mat_cols_c_dout,
        srcMat_2_empty_n => pyr2_out_mat_cols_c_empty_n,
        srcMat_2_read => xfMat2Array_32_0_1080_1920_1_U0_srcMat_2_read,
        dstPtr_dout => outImgPyr2_c_dout,
        dstPtr_empty_n => outImgPyr2_c_empty_n,
        dstPtr_read => xfMat2Array_32_0_1080_1920_1_U0_dstPtr_read);

    pyr1_in_mat_rows_c_U : component pyr_down_accel_fifo_w32_d2_S_x1
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_split1_proc30_U0_pyr1_in_mat_rows_out_din,
        if_full_n => pyr1_in_mat_rows_c_full_n,
        if_write => Block_split1_proc30_U0_pyr1_in_mat_rows_out_write,
        if_dout => pyr1_in_mat_rows_c_dout,
        if_empty_n => pyr1_in_mat_rows_c_empty_n,
        if_read => Array2xfMat_32_0_1080_1920_1_6_U0_dstMat_1_read);

    pyr1_in_mat_cols_c_U : component pyr_down_accel_fifo_w32_d2_S_x1
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_split1_proc30_U0_pyr1_in_mat_cols_out_din,
        if_full_n => pyr1_in_mat_cols_c_full_n,
        if_write => Block_split1_proc30_U0_pyr1_in_mat_cols_out_write,
        if_dout => pyr1_in_mat_cols_c_dout,
        if_empty_n => pyr1_in_mat_cols_c_empty_n,
        if_read => Array2xfMat_32_0_1080_1920_1_6_U0_dstMat_2_read);

    pyr1_out_mat_rows_c_U : component pyr_down_accel_fifo_w32_d4_S_x
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_split1_proc30_U0_pyr1_out_mat_rows_out_din,
        if_full_n => pyr1_out_mat_rows_c_full_n,
        if_write => Block_split1_proc30_U0_pyr1_out_mat_rows_out_write,
        if_dout => pyr1_out_mat_rows_c_dout,
        if_empty_n => pyr1_out_mat_rows_c_empty_n,
        if_read => xfMat2Array_32_0_1080_1920_1_8_U0_srcMat_1_read);

    pyr1_out_mat_cols_c_U : component pyr_down_accel_fifo_w32_d4_S_x
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_split1_proc30_U0_pyr1_out_mat_cols_out_din,
        if_full_n => pyr1_out_mat_cols_c_full_n,
        if_write => Block_split1_proc30_U0_pyr1_out_mat_cols_out_write,
        if_dout => pyr1_out_mat_cols_c_dout,
        if_empty_n => pyr1_out_mat_cols_c_empty_n,
        if_read => xfMat2Array_32_0_1080_1920_1_8_U0_srcMat_2_read);

    pyr2_in_mat_rows_c_U : component pyr_down_accel_fifo_w32_d2_S_x1
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_split1_proc30_U0_pyr2_in_mat_rows_out_din,
        if_full_n => pyr2_in_mat_rows_c_full_n,
        if_write => Block_split1_proc30_U0_pyr2_in_mat_rows_out_write,
        if_dout => pyr2_in_mat_rows_c_dout,
        if_empty_n => pyr2_in_mat_rows_c_empty_n,
        if_read => Array2xfMat_32_0_1080_1920_1_U0_dstMat_1_read);

    pyr2_in_mat_cols_c_U : component pyr_down_accel_fifo_w32_d2_S_x1
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_split1_proc30_U0_pyr2_in_mat_cols_out_din,
        if_full_n => pyr2_in_mat_cols_c_full_n,
        if_write => Block_split1_proc30_U0_pyr2_in_mat_cols_out_write,
        if_dout => pyr2_in_mat_cols_c_dout,
        if_empty_n => pyr2_in_mat_cols_c_empty_n,
        if_read => Array2xfMat_32_0_1080_1920_1_U0_dstMat_2_read);

    pyr2_out_mat_rows_c_U : component pyr_down_accel_fifo_w32_d4_S_x
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_split1_proc30_U0_pyr2_out_mat_rows_out_din,
        if_full_n => pyr2_out_mat_rows_c_full_n,
        if_write => Block_split1_proc30_U0_pyr2_out_mat_rows_out_write,
        if_dout => pyr2_out_mat_rows_c_dout,
        if_empty_n => pyr2_out_mat_rows_c_empty_n,
        if_read => xfMat2Array_32_0_1080_1920_1_U0_srcMat_1_read);

    pyr2_out_mat_cols_c_U : component pyr_down_accel_fifo_w32_d4_S_x
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_split1_proc30_U0_pyr2_out_mat_cols_out_din,
        if_full_n => pyr2_out_mat_cols_c_full_n,
        if_write => Block_split1_proc30_U0_pyr2_out_mat_cols_out_write,
        if_dout => pyr2_out_mat_cols_c_dout,
        if_empty_n => pyr2_out_mat_cols_c_empty_n,
        if_read => xfMat2Array_32_0_1080_1920_1_U0_srcMat_2_read);

    inImgPyr1_c_U : component pyr_down_accel_fifo_w64_d2_S_x
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_split1_proc30_U0_inImgPyr1_out_din,
        if_full_n => inImgPyr1_c_full_n,
        if_write => Block_split1_proc30_U0_inImgPyr1_out_write,
        if_dout => inImgPyr1_c_dout,
        if_empty_n => inImgPyr1_c_empty_n,
        if_read => Array2xfMat_32_0_1080_1920_1_6_U0_srcPtr_read);

    outImgPyr1_c_U : component pyr_down_accel_fifo_w64_d4_S_x0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_split1_proc30_U0_outImgPyr1_out_din,
        if_full_n => outImgPyr1_c_full_n,
        if_write => Block_split1_proc30_U0_outImgPyr1_out_write,
        if_dout => outImgPyr1_c_dout,
        if_empty_n => outImgPyr1_c_empty_n,
        if_read => xfMat2Array_32_0_1080_1920_1_8_U0_dstPtr_read);

    inImgPyr2_c_U : component pyr_down_accel_fifo_w64_d2_S_x
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_split1_proc30_U0_inImgPyr2_out_din,
        if_full_n => inImgPyr2_c_full_n,
        if_write => Block_split1_proc30_U0_inImgPyr2_out_write,
        if_dout => inImgPyr2_c_dout,
        if_empty_n => inImgPyr2_c_empty_n,
        if_read => Array2xfMat_32_0_1080_1920_1_U0_srcPtr_read);

    outImgPyr2_c_U : component pyr_down_accel_fifo_w64_d4_S_x0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_split1_proc30_U0_outImgPyr2_out_din,
        if_full_n => outImgPyr2_c_full_n,
        if_write => Block_split1_proc30_U0_outImgPyr2_out_write,
        if_dout => outImgPyr2_c_dout,
        if_empty_n => outImgPyr2_c_empty_n,
        if_read => xfMat2Array_32_0_1080_1920_1_U0_dstPtr_read);

    pyr1_in_mat_data_U : component pyr_down_accel_fifo_w8_d1920_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Array2xfMat_32_0_1080_1920_1_6_U0_pyr1_in_mat_431_din,
        if_full_n => pyr1_in_mat_data_full_n,
        if_write => Array2xfMat_32_0_1080_1920_1_6_U0_pyr1_in_mat_431_write,
        if_dout => pyr1_in_mat_data_dout,
        if_empty_n => pyr1_in_mat_data_empty_n,
        if_read => pyrDown_0_1080_1920_1_false_7_U0_pyr1_in_mat_431_read);

    pyr1_in_mat_rows_c15_U : component pyr_down_accel_fifo_w32_d2_S_x1
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Array2xfMat_32_0_1080_1920_1_6_U0_dstMat_1_out_din,
        if_full_n => pyr1_in_mat_rows_c15_full_n,
        if_write => Array2xfMat_32_0_1080_1920_1_6_U0_dstMat_1_out_write,
        if_dout => pyr1_in_mat_rows_c15_dout,
        if_empty_n => pyr1_in_mat_rows_c15_empty_n,
        if_read => pyrDown_0_1080_1920_1_false_7_U0_p_src_1_read);

    pyr1_in_mat_cols_c16_U : component pyr_down_accel_fifo_w32_d2_S_x1
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Array2xfMat_32_0_1080_1920_1_6_U0_dstMat_2_out_din,
        if_full_n => pyr1_in_mat_cols_c16_full_n,
        if_write => Array2xfMat_32_0_1080_1920_1_6_U0_dstMat_2_out_write,
        if_dout => pyr1_in_mat_cols_c16_dout,
        if_empty_n => pyr1_in_mat_cols_c16_empty_n,
        if_read => pyrDown_0_1080_1920_1_false_7_U0_p_src_2_read);

    pyr1_out_mat_data_U : component pyr_down_accel_fifo_w8_d1920_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => pyrDown_0_1080_1920_1_false_7_U0_pyr1_out_mat_432_din,
        if_full_n => pyr1_out_mat_data_full_n,
        if_write => pyrDown_0_1080_1920_1_false_7_U0_pyr1_out_mat_432_write,
        if_dout => pyr1_out_mat_data_dout,
        if_empty_n => pyr1_out_mat_data_empty_n,
        if_read => xfMat2Array_32_0_1080_1920_1_8_U0_pyr1_out_mat_432_read);

    pyr2_in_mat_data_U : component pyr_down_accel_fifo_w8_d1920_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Array2xfMat_32_0_1080_1920_1_U0_pyr1_in_mat_431_din,
        if_full_n => pyr2_in_mat_data_full_n,
        if_write => Array2xfMat_32_0_1080_1920_1_U0_pyr1_in_mat_431_write,
        if_dout => pyr2_in_mat_data_dout,
        if_empty_n => pyr2_in_mat_data_empty_n,
        if_read => pyrDown_0_1080_1920_1_false_U0_pyr1_in_mat_431_read);

    pyr2_in_mat_rows_c17_U : component pyr_down_accel_fifo_w32_d2_S_x1
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Array2xfMat_32_0_1080_1920_1_U0_dstMat_1_out_din,
        if_full_n => pyr2_in_mat_rows_c17_full_n,
        if_write => Array2xfMat_32_0_1080_1920_1_U0_dstMat_1_out_write,
        if_dout => pyr2_in_mat_rows_c17_dout,
        if_empty_n => pyr2_in_mat_rows_c17_empty_n,
        if_read => pyrDown_0_1080_1920_1_false_U0_p_src_1_read);

    pyr2_in_mat_cols_c18_U : component pyr_down_accel_fifo_w32_d2_S_x1
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Array2xfMat_32_0_1080_1920_1_U0_dstMat_2_out_din,
        if_full_n => pyr2_in_mat_cols_c18_full_n,
        if_write => Array2xfMat_32_0_1080_1920_1_U0_dstMat_2_out_write,
        if_dout => pyr2_in_mat_cols_c18_dout,
        if_empty_n => pyr2_in_mat_cols_c18_empty_n,
        if_read => pyrDown_0_1080_1920_1_false_U0_p_src_2_read);

    pyr2_out_mat_data_U : component pyr_down_accel_fifo_w8_d1920_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => pyrDown_0_1080_1920_1_false_U0_pyr1_out_mat_432_din,
        if_full_n => pyr2_out_mat_data_full_n,
        if_write => pyrDown_0_1080_1920_1_false_U0_pyr1_out_mat_432_write,
        if_dout => pyr2_out_mat_data_dout,
        if_empty_n => pyr2_out_mat_data_empty_n,
        if_read => xfMat2Array_32_0_1080_1920_1_U0_pyr1_out_mat_432_read);

    start_for_xfMat2Array_32_0_1080_1920_1_8_U0_U : component pyr_down_accel_start_for_xfMat2Array_32_0_1080_1920_1_8_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_xfMat2Array_32_0_1080_1920_1_8_U0_din,
        if_full_n => start_for_xfMat2Array_32_0_1080_1920_1_8_U0_full_n,
        if_write => Block_split1_proc30_U0_start_write,
        if_dout => start_for_xfMat2Array_32_0_1080_1920_1_8_U0_dout,
        if_empty_n => start_for_xfMat2Array_32_0_1080_1920_1_8_U0_empty_n,
        if_read => xfMat2Array_32_0_1080_1920_1_8_U0_ap_ready);

    start_for_xfMat2Array_32_0_1080_1920_1_U0_U : component pyr_down_accel_start_for_xfMat2Array_32_0_1080_1920_1_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_xfMat2Array_32_0_1080_1920_1_U0_din,
        if_full_n => start_for_xfMat2Array_32_0_1080_1920_1_U0_full_n,
        if_write => Block_split1_proc30_U0_start_write,
        if_dout => start_for_xfMat2Array_32_0_1080_1920_1_U0_dout,
        if_empty_n => start_for_xfMat2Array_32_0_1080_1920_1_U0_empty_n,
        if_read => xfMat2Array_32_0_1080_1920_1_U0_ap_ready);

    start_for_pyrDown_0_1080_1920_1_false_7_U0_U : component pyr_down_accel_start_for_pyrDown_0_1080_1920_1_false_7_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_pyrDown_0_1080_1920_1_false_7_U0_din,
        if_full_n => start_for_pyrDown_0_1080_1920_1_false_7_U0_full_n,
        if_write => Array2xfMat_32_0_1080_1920_1_6_U0_start_write,
        if_dout => start_for_pyrDown_0_1080_1920_1_false_7_U0_dout,
        if_empty_n => start_for_pyrDown_0_1080_1920_1_false_7_U0_empty_n,
        if_read => pyrDown_0_1080_1920_1_false_7_U0_ap_ready);

    start_for_pyrDown_0_1080_1920_1_false_U0_U : component pyr_down_accel_start_for_pyrDown_0_1080_1920_1_false_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_pyrDown_0_1080_1920_1_false_U0_din,
        if_full_n => start_for_pyrDown_0_1080_1920_1_false_U0_full_n,
        if_write => Array2xfMat_32_0_1080_1920_1_U0_start_write,
        if_dout => start_for_pyrDown_0_1080_1920_1_false_U0_dout,
        if_empty_n => start_for_pyrDown_0_1080_1920_1_false_U0_empty_n,
        if_read => pyrDown_0_1080_1920_1_false_U0_ap_ready);





    ap_sync_reg_Array2xfMat_32_0_1080_1920_1_6_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_Array2xfMat_32_0_1080_1920_1_6_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_Array2xfMat_32_0_1080_1920_1_6_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_Array2xfMat_32_0_1080_1920_1_6_U0_ap_ready <= ap_sync_Array2xfMat_32_0_1080_1920_1_6_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_Array2xfMat_32_0_1080_1920_1_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_Array2xfMat_32_0_1080_1920_1_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_Array2xfMat_32_0_1080_1920_1_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_Array2xfMat_32_0_1080_1920_1_U0_ap_ready <= ap_sync_Array2xfMat_32_0_1080_1920_1_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_Block_split1_proc30_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_Block_split1_proc30_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_Block_split1_proc30_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_Block_split1_proc30_U0_ap_ready <= ap_sync_Block_split1_proc30_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    Array2xfMat_32_0_1080_1920_1_6_U0_ap_ready_count_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_0 = Array2xfMat_32_0_1080_1920_1_6_U0_ap_ready) and (ap_sync_ready = ap_const_logic_1))) then 
                Array2xfMat_32_0_1080_1920_1_6_U0_ap_ready_count <= std_logic_vector(unsigned(Array2xfMat_32_0_1080_1920_1_6_U0_ap_ready_count) - unsigned(ap_const_lv2_1));
            elsif (((ap_const_logic_1 = Array2xfMat_32_0_1080_1920_1_6_U0_ap_ready) and (ap_sync_ready = ap_const_logic_0))) then 
                Array2xfMat_32_0_1080_1920_1_6_U0_ap_ready_count <= std_logic_vector(unsigned(Array2xfMat_32_0_1080_1920_1_6_U0_ap_ready_count) + unsigned(ap_const_lv2_1));
            end if; 
        end if;
    end process;

    Array2xfMat_32_0_1080_1920_1_U0_ap_ready_count_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_0 = Array2xfMat_32_0_1080_1920_1_U0_ap_ready) and (ap_sync_ready = ap_const_logic_1))) then 
                Array2xfMat_32_0_1080_1920_1_U0_ap_ready_count <= std_logic_vector(unsigned(Array2xfMat_32_0_1080_1920_1_U0_ap_ready_count) - unsigned(ap_const_lv2_1));
            elsif (((ap_const_logic_1 = Array2xfMat_32_0_1080_1920_1_U0_ap_ready) and (ap_sync_ready = ap_const_logic_0))) then 
                Array2xfMat_32_0_1080_1920_1_U0_ap_ready_count <= std_logic_vector(unsigned(Array2xfMat_32_0_1080_1920_1_U0_ap_ready_count) + unsigned(ap_const_lv2_1));
            end if; 
        end if;
    end process;

    Block_split1_proc30_U0_ap_ready_count_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_0 = Block_split1_proc30_U0_ap_ready) and (ap_sync_ready = ap_const_logic_1))) then 
                Block_split1_proc30_U0_ap_ready_count <= std_logic_vector(unsigned(Block_split1_proc30_U0_ap_ready_count) - unsigned(ap_const_lv2_1));
            elsif (((ap_const_logic_1 = Block_split1_proc30_U0_ap_ready) and (ap_sync_ready = ap_const_logic_0))) then 
                Block_split1_proc30_U0_ap_ready_count <= std_logic_vector(unsigned(Block_split1_proc30_U0_ap_ready_count) + unsigned(ap_const_lv2_1));
            end if; 
        end if;
    end process;

    ap_rst_n_inv_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_rst_n_inv <= ap_rst_reg_1;
        end if;
    end process;

    ap_rst_reg_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_rst_reg_1 <= ap_rst_reg_2;
        end if;
    end process;

    ap_rst_reg_2_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
                        ap_rst_reg_2 <= not(ap_rst_n);
        end if;
    end process;
    Array2xfMat_32_0_1080_1920_1_6_U0_ap_continue <= ap_const_logic_1;
    Array2xfMat_32_0_1080_1920_1_6_U0_ap_start <= ((ap_sync_reg_Array2xfMat_32_0_1080_1920_1_6_U0_ap_ready xor ap_const_logic_1) and ap_start);
    Array2xfMat_32_0_1080_1920_1_U0_ap_continue <= ap_const_logic_1;
    Array2xfMat_32_0_1080_1920_1_U0_ap_start <= ((ap_sync_reg_Array2xfMat_32_0_1080_1920_1_U0_ap_ready xor ap_const_logic_1) and ap_start);
    Block_split1_proc30_U0_ap_continue <= ap_const_logic_1;
    Block_split1_proc30_U0_ap_start <= ((ap_sync_reg_Block_split1_proc30_U0_ap_ready xor ap_const_logic_1) and ap_start);
    Block_split1_proc30_U0_start_full_n <= (start_for_xfMat2Array_32_0_1080_1920_1_U0_full_n and start_for_xfMat2Array_32_0_1080_1920_1_8_U0_full_n);
    ap_done <= ap_sync_done;
    ap_idle <= (xfMat2Array_32_0_1080_1920_1_U0_ap_idle and xfMat2Array_32_0_1080_1920_1_8_U0_ap_idle and pyrDown_0_1080_1920_1_false_U0_ap_idle and pyrDown_0_1080_1920_1_false_7_U0_ap_idle and Block_split1_proc30_U0_ap_idle and Array2xfMat_32_0_1080_1920_1_U0_ap_idle and Array2xfMat_32_0_1080_1920_1_6_U0_ap_idle);
    ap_ready <= ap_sync_ready;
    ap_sync_Array2xfMat_32_0_1080_1920_1_6_U0_ap_ready <= (ap_sync_reg_Array2xfMat_32_0_1080_1920_1_6_U0_ap_ready or Array2xfMat_32_0_1080_1920_1_6_U0_ap_ready);
    ap_sync_Array2xfMat_32_0_1080_1920_1_U0_ap_ready <= (ap_sync_reg_Array2xfMat_32_0_1080_1920_1_U0_ap_ready or Array2xfMat_32_0_1080_1920_1_U0_ap_ready);
    ap_sync_Block_split1_proc30_U0_ap_ready <= (ap_sync_reg_Block_split1_proc30_U0_ap_ready or Block_split1_proc30_U0_ap_ready);
    ap_sync_continue <= (ap_sync_done and ap_continue);
    ap_sync_done <= (xfMat2Array_32_0_1080_1920_1_U0_ap_done and xfMat2Array_32_0_1080_1920_1_8_U0_ap_done);
    ap_sync_ready <= (ap_sync_Block_split1_proc30_U0_ap_ready and ap_sync_Array2xfMat_32_0_1080_1920_1_U0_ap_ready and ap_sync_Array2xfMat_32_0_1080_1920_1_6_U0_ap_ready);
    pyrDown_0_1080_1920_1_false_7_U0_ap_continue <= ap_const_logic_1;
    pyrDown_0_1080_1920_1_false_7_U0_ap_start <= start_for_pyrDown_0_1080_1920_1_false_7_U0_empty_n;
    pyrDown_0_1080_1920_1_false_7_U0_start_full_n <= ap_const_logic_1;
    pyrDown_0_1080_1920_1_false_7_U0_start_write <= ap_const_logic_0;
    pyrDown_0_1080_1920_1_false_U0_ap_continue <= ap_const_logic_1;
    pyrDown_0_1080_1920_1_false_U0_ap_start <= start_for_pyrDown_0_1080_1920_1_false_U0_empty_n;
    pyrDown_0_1080_1920_1_false_U0_start_full_n <= ap_const_logic_1;
    pyrDown_0_1080_1920_1_false_U0_start_write <= ap_const_logic_0;
    start_for_pyrDown_0_1080_1920_1_false_7_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_pyrDown_0_1080_1920_1_false_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_xfMat2Array_32_0_1080_1920_1_8_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_xfMat2Array_32_0_1080_1920_1_U0_din <= (0=>ap_const_logic_1, others=>'-');
    xfMat2Array_32_0_1080_1920_1_8_U0_ap_continue <= ap_sync_continue;
    xfMat2Array_32_0_1080_1920_1_8_U0_ap_start <= start_for_xfMat2Array_32_0_1080_1920_1_8_U0_empty_n;
    xfMat2Array_32_0_1080_1920_1_8_U0_start_full_n <= ap_const_logic_1;
    xfMat2Array_32_0_1080_1920_1_8_U0_start_write <= ap_const_logic_0;
    xfMat2Array_32_0_1080_1920_1_U0_ap_continue <= ap_sync_continue;
    xfMat2Array_32_0_1080_1920_1_U0_ap_start <= start_for_xfMat2Array_32_0_1080_1920_1_U0_empty_n;
    xfMat2Array_32_0_1080_1920_1_U0_start_full_n <= ap_const_logic_1;
    xfMat2Array_32_0_1080_1920_1_U0_start_write <= ap_const_logic_0;
end behav;
