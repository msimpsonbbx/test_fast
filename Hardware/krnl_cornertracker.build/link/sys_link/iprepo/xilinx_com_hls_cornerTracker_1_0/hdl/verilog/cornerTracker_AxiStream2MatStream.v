// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module cornerTracker_AxiStream2MatStream (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        ldata1_dout,
        ldata1_empty_n,
        ldata1_read,
        in_harris_mat_419_din,
        in_harris_mat_419_full_n,
        in_harris_mat_419_write,
        rows_dout,
        rows_empty_n,
        rows_read,
        cols_bound_per_npc_dout,
        cols_bound_per_npc_empty_n,
        cols_bound_per_npc_read,
        last_blk_width_dout,
        last_blk_width_empty_n,
        last_blk_width_read
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_state3 = 6'd4;
parameter    ap_ST_fsm_state4 = 6'd8;
parameter    ap_ST_fsm_pp0_stage0 = 6'd16;
parameter    ap_ST_fsm_state8 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] ldata1_dout;
input   ldata1_empty_n;
output   ldata1_read;
output  [7:0] in_harris_mat_419_din;
input   in_harris_mat_419_full_n;
output   in_harris_mat_419_write;
input  [10:0] rows_dout;
input   rows_empty_n;
output   rows_read;
input  [10:0] cols_bound_per_npc_dout;
input   cols_bound_per_npc_empty_n;
output   cols_bound_per_npc_read;
input  [3:0] last_blk_width_dout;
input   last_blk_width_empty_n;
output   last_blk_width_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg ldata1_read;
reg in_harris_mat_419_write;
reg rows_read;
reg cols_bound_per_npc_read;
reg last_blk_width_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ldata1_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln1038_reg_801;
reg   [0:0] icmp_ln1049_reg_831;
reg    in_harris_mat_419_blk_n;
reg    ap_enable_reg_pp0_iter2;
reg   [0:0] icmp_ln1038_reg_801_pp0_iter1_reg;
reg    rows_blk_n;
reg    cols_bound_per_npc_blk_n;
reg    last_blk_width_blk_n;
reg   [31:0] j_reg_135;
reg   [21:0] i_reg_146;
reg   [10:0] cols_bound_per_npc_1_reg_760;
reg    ap_block_state1;
reg   [3:0] last_blk_width_1_reg_765;
wire  signed [31:0] sub_cast_i_fu_202_p1;
reg  signed [31:0] sub_cast_i_reg_781;
wire    ap_CS_fsm_state4;
wire   [5:0] sub2_i_fu_206_p2;
reg   [5:0] sub2_i_reg_786;
wire   [5:0] add_ln1057_fu_212_p2;
reg   [5:0] add_ln1057_reg_791;
wire   [21:0] grp_fu_739_p2;
reg   [21:0] mul_ln1038_reg_796;
wire   [0:0] icmp_ln1038_fu_218_p2;
wire    ap_block_state5_pp0_stage0_iter0;
reg    ap_predicate_op93_read_state6;
reg    ap_block_state6_pp0_stage0_iter1;
reg    ap_block_state7_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
wire   [21:0] i_1_fu_223_p2;
reg    ap_enable_reg_pp0_iter0;
reg   [31:0] rem_load_reg_810;
wire   [0:0] bLast_fu_232_p2;
reg   [0:0] bLast_reg_821;
wire   [3:0] xf_bits_per_clock_fu_237_p3;
reg   [3:0] xf_bits_per_clock_reg_826;
wire   [0:0] icmp_ln1049_fu_259_p2;
reg   [0:0] icmp_ln1049_reg_831_pp0_iter1_reg;
wire   [31:0] j_2_fu_293_p3;
wire   [5:0] sub_ln674_7_fu_388_p2;
reg   [5:0] sub_ln674_7_reg_840;
wire   [31:0] lshr_ln674_3_fu_398_p2;
reg   [31:0] lshr_ln674_3_reg_845;
wire   [0:0] icmp_ln1050_fu_404_p2;
reg   [0:0] icmp_ln1050_reg_850;
wire   [3:0] trunc_ln1051_fu_409_p1;
reg   [3:0] trunc_ln1051_reg_855;
wire   [5:0] sub_ln674_2_fu_484_p2;
reg   [5:0] sub_ln674_2_reg_860;
wire   [31:0] lshr_ln674_fu_494_p2;
reg   [31:0] lshr_ln674_reg_865;
wire   [0:0] icmp_ln414_fu_549_p2;
reg   [0:0] icmp_ln414_reg_870;
wire   [3:0] trunc_ln414_fu_554_p1;
reg   [3:0] trunc_ln414_reg_876;
wire   [3:0] trunc_ln414_1_fu_557_p1;
reg   [3:0] trunc_ln414_1_reg_881;
wire   [3:0] sub_ln414_2_fu_583_p2;
reg   [3:0] sub_ln414_2_reg_886;
wire   [7:0] shl_ln414_fu_593_p2;
reg   [7:0] shl_ln414_reg_891;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state5;
reg   [7:0] ap_phi_mux_empty_phi_fu_160_p4;
wire   [7:0] p_Result_7_fu_732_p2;
wire   [7:0] ap_phi_reg_pp0_iter2_empty_reg_157;
wire   [7:0] trunc_ln358_fu_618_p1;
reg   [31:0] rem_fu_96;
wire   [31:0] rem_2_fu_265_p2;
wire   [31:0] rem_1_fu_276_p2;
reg   [31:0] p_Val2_s_fu_100;
reg    ap_block_pp0_stage0_01001;
wire   [11:0] cols_bound_per_npc_cast4_i_fu_193_p1;
wire   [11:0] sub_i_fu_196_p2;
wire   [5:0] last_blk_width_cast2_i_fu_190_p1;
wire   [5:0] ptr_width_minus_fu_248_p3;
wire   [31:0] zext_ln1044_fu_244_p1;
wire   [31:0] zext_ln1045_fu_255_p1;
wire   [31:0] add_ln1061_fu_287_p2;
wire   [5:0] select_ln1057_fu_307_p3;
wire   [31:0] zext_ln1057_fu_313_p1;
wire   [31:0] grp_fu_167_p2;
wire   [31:0] sub_ln1057_fu_317_p2;
wire   [5:0] trunc_ln674_1_fu_328_p1;
wire   [5:0] trunc_ln674_2_fu_332_p1;
wire   [0:0] icmp_ln674_1_fu_322_p2;
wire   [5:0] sub_ln674_4_fu_346_p2;
wire   [5:0] sub_ln674_6_fu_358_p2;
reg   [31:0] tmp_3_fu_336_p4;
wire   [5:0] sub_ln674_5_fu_352_p2;
wire   [5:0] select_ln674_3_fu_364_p3;
wire   [5:0] select_ln674_5_fu_380_p3;
wire   [31:0] select_ln674_4_fu_372_p3;
wire   [31:0] zext_ln674_3_fu_394_p1;
wire   [26:0] tmp_fu_412_p4;
wire   [5:0] trunc_ln674_fu_428_p1;
wire   [0:0] icmp_ln674_fu_422_p2;
wire   [5:0] add_ln674_fu_442_p2;
wire   [5:0] sub_ln674_1_fu_454_p2;
reg   [31:0] tmp_1_fu_432_p4;
wire   [5:0] sub_ln674_fu_448_p2;
wire   [5:0] select_ln674_fu_460_p3;
wire   [5:0] select_ln674_2_fu_476_p3;
wire   [31:0] select_ln674_1_fu_468_p3;
wire   [31:0] zext_ln674_fu_490_p1;
wire   [4:0] zext_ln1044_1_fu_301_p1;
wire  signed [4:0] add_ln1054_fu_500_p2;
wire   [5:0] trunc_ln1054_fu_514_p1;
wire  signed [5:0] sext_ln1054_1_fu_510_p1;
wire   [5:0] sub_ln674_3_fu_517_p2;
wire   [5:0] add_ln674_1_fu_523_p2;
wire   [31:0] zext_ln674_2_fu_529_p1;
wire   [31:0] lshr_ln674_2_fu_533_p2;
wire   [31:0] p_Result_6_fu_539_p2;
wire  signed [31:0] sext_ln1054_fu_506_p1;
wire   [3:0] sub_ln414_1_fu_561_p2;
wire   [3:0] select_ln414_fu_567_p3;
wire   [3:0] select_ln414_2_fu_575_p3;
wire   [7:0] p_Repl2_4_fu_545_p1;
wire   [7:0] zext_ln414_1_fu_589_p1;
wire   [31:0] zext_ln674_4_fu_604_p1;
wire   [31:0] lshr_ln674_4_fu_607_p2;
wire   [31:0] p_Result_8_fu_613_p2;
wire   [31:0] zext_ln674_1_fu_623_p1;
wire   [31:0] lshr_ln674_1_fu_626_p2;
wire   [31:0] p_Result_s_fu_632_p2;
wire   [3:0] sub_ln414_fu_641_p2;
wire   [7:0] zext_ln414_fu_646_p1;
wire   [7:0] p_Repl2_s_fu_637_p1;
wire   [7:0] lshr_ln414_fu_650_p2;
wire   [7:0] p_Result_5_fu_656_p2;
wire   [3:0] select_ln414_1_fu_669_p3;
reg   [7:0] tmp_2_fu_681_p4;
wire   [7:0] zext_ln414_2_fu_674_p1;
wire   [7:0] zext_ln414_3_fu_678_p1;
wire   [7:0] shl_ln414_1_fu_696_p2;
wire   [7:0] lshr_ln414_1_fu_702_p2;
wire   [7:0] and_ln414_fu_708_p2;
wire   [7:0] p_Val2_6_fu_662_p3;
wire   [7:0] xor_ln414_fu_714_p2;
wire   [7:0] select_ln414_3_fu_690_p3;
wire   [7:0] and_ln414_1_fu_720_p2;
wire   [7:0] and_ln414_2_fu_726_p2;
wire   [10:0] grp_fu_739_p0;
wire   [10:0] grp_fu_739_p1;
reg    grp_fu_739_ce;
wire    ap_CS_fsm_state8;
reg   [5:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [21:0] grp_fu_739_p00;
wire   [21:0] grp_fu_739_p10;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 6'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
end

cornerTracker_mul_mul_11ns_11ns_22_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 22 ))
mul_mul_11ns_11ns_22_4_1_U38(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_739_p0),
    .din1(grp_fu_739_p1),
    .ce(grp_fu_739_ce),
    .dout(grp_fu_739_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state5))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state5)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state5);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln1038_fu_218_p2 == 1'd0))) begin
        i_reg_146 <= i_1_fu_223_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        i_reg_146 <= 22'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln1038_fu_218_p2 == 1'd0))) begin
        j_reg_135 <= j_2_fu_293_p3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        j_reg_135 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1049_reg_831 == 1'd1) & (icmp_ln1038_reg_801 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_Val2_s_fu_100 <= ldata1_dout;
    end else if ((~((last_blk_width_empty_n == 1'b0) | (cols_bound_per_npc_empty_n == 1'b0) | (rows_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_Val2_s_fu_100 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1049_fu_259_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln1038_fu_218_p2 == 1'd0))) begin
        rem_fu_96 <= rem_1_fu_276_p2;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1049_fu_259_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln1038_fu_218_p2 == 1'd0))) begin
        rem_fu_96 <= rem_2_fu_265_p2;
    end else if ((~((last_blk_width_empty_n == 1'b0) | (cols_bound_per_npc_empty_n == 1'b0) | (rows_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        rem_fu_96 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        add_ln1057_reg_791 <= add_ln1057_fu_212_p2;
        mul_ln1038_reg_796 <= grp_fu_739_p2;
        sub2_i_reg_786 <= sub2_i_fu_206_p2;
        sub_cast_i_reg_781 <= sub_cast_i_fu_202_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1038_fu_218_p2 == 1'd0))) begin
        bLast_reg_821 <= bLast_fu_232_p2;
        icmp_ln1049_reg_831 <= icmp_ln1049_fu_259_p2;
        rem_load_reg_810 <= rem_fu_96;
        xf_bits_per_clock_reg_826 <= xf_bits_per_clock_fu_237_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((last_blk_width_empty_n == 1'b0) | (cols_bound_per_npc_empty_n == 1'b0) | (rows_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        cols_bound_per_npc_1_reg_760 <= cols_bound_per_npc_dout;
        last_blk_width_1_reg_765 <= last_blk_width_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln1038_reg_801 <= icmp_ln1038_fu_218_p2;
        icmp_ln1038_reg_801_pp0_iter1_reg <= icmp_ln1038_reg_801;
        icmp_ln1049_reg_831_pp0_iter1_reg <= icmp_ln1049_reg_831;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1049_reg_831 == 1'd1) & (icmp_ln1038_reg_801 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln1050_reg_850 <= icmp_ln1050_fu_404_p2;
        icmp_ln414_reg_870 <= icmp_ln414_fu_549_p2;
        lshr_ln674_reg_865 <= lshr_ln674_fu_494_p2;
        shl_ln414_reg_891 <= shl_ln414_fu_593_p2;
        sub_ln414_2_reg_886 <= sub_ln414_2_fu_583_p2;
        sub_ln674_2_reg_860 <= sub_ln674_2_fu_484_p2;
        trunc_ln1051_reg_855 <= trunc_ln1051_fu_409_p1;
        trunc_ln414_1_reg_881 <= trunc_ln414_1_fu_557_p1;
        trunc_ln414_reg_876 <= trunc_ln414_fu_554_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1049_reg_831 == 1'd0) & (icmp_ln1038_reg_801 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        lshr_ln674_3_reg_845 <= lshr_ln674_3_fu_398_p2;
        sub_ln674_7_reg_840 <= sub_ln674_7_fu_388_p2;
    end
end

always @ (*) begin
    if ((icmp_ln1038_fu_218_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state5 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state5 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln1038_reg_801_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln1049_reg_831_pp0_iter1_reg == 1'd0)) begin
            ap_phi_mux_empty_phi_fu_160_p4 = trunc_ln358_fu_618_p1;
        end else if ((icmp_ln1049_reg_831_pp0_iter1_reg == 1'd1)) begin
            ap_phi_mux_empty_phi_fu_160_p4 = p_Result_7_fu_732_p2;
        end else begin
            ap_phi_mux_empty_phi_fu_160_p4 = ap_phi_reg_pp0_iter2_empty_reg_157;
        end
    end else begin
        ap_phi_mux_empty_phi_fu_160_p4 = ap_phi_reg_pp0_iter2_empty_reg_157;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        cols_bound_per_npc_blk_n = cols_bound_per_npc_empty_n;
    end else begin
        cols_bound_per_npc_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((last_blk_width_empty_n == 1'b0) | (cols_bound_per_npc_empty_n == 1'b0) | (rows_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        cols_bound_per_npc_read = 1'b1;
    end else begin
        cols_bound_per_npc_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_pp0_stage0) | ((1'b1 == ap_CS_fsm_state1) & ((last_blk_width_empty_n == 1'b0) | (cols_bound_per_npc_empty_n == 1'b0) | (rows_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0))))) begin
        grp_fu_739_ce = 1'b0;
    end else begin
        grp_fu_739_ce = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln1038_reg_801_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        in_harris_mat_419_blk_n = in_harris_mat_419_full_n;
    end else begin
        in_harris_mat_419_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln1038_reg_801_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        in_harris_mat_419_write = 1'b1;
    end else begin
        in_harris_mat_419_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        last_blk_width_blk_n = last_blk_width_empty_n;
    end else begin
        last_blk_width_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((last_blk_width_empty_n == 1'b0) | (cols_bound_per_npc_empty_n == 1'b0) | (rows_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        last_blk_width_read = 1'b1;
    end else begin
        last_blk_width_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1049_reg_831 == 1'd1) & (icmp_ln1038_reg_801 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ldata1_blk_n = ldata1_empty_n;
    end else begin
        ldata1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op93_read_state6 == 1'b1))) begin
        ldata1_read = 1'b1;
    end else begin
        ldata1_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        rows_blk_n = rows_empty_n;
    end else begin
        rows_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((last_blk_width_empty_n == 1'b0) | (cols_bound_per_npc_empty_n == 1'b0) | (rows_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        rows_read = 1'b1;
    end else begin
        rows_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((last_blk_width_empty_n == 1'b0) | (cols_bound_per_npc_empty_n == 1'b0) | (rows_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln1038_fu_218_p2 == 1'd1)) & ~((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln1038_fu_218_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1054_fu_500_p2 = ($signed(5'd31) + $signed(zext_ln1044_1_fu_301_p1));

assign add_ln1057_fu_212_p2 = (last_blk_width_cast2_i_fu_190_p1 + 6'd31);

assign add_ln1061_fu_287_p2 = (j_reg_135 + 32'd1);

assign add_ln674_1_fu_523_p2 = (6'd31 + sub_ln674_3_fu_517_p2);

assign add_ln674_fu_442_p2 = ($signed(6'd33) + $signed(trunc_ln674_fu_428_p1));

assign and_ln414_1_fu_720_p2 = (xor_ln414_fu_714_p2 & p_Val2_6_fu_662_p3);

assign and_ln414_2_fu_726_p2 = (select_ln414_3_fu_690_p3 & and_ln414_fu_708_p2);

assign and_ln414_fu_708_p2 = (shl_ln414_1_fu_696_p2 & lshr_ln414_1_fu_702_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((icmp_ln1038_reg_801_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (in_harris_mat_419_full_n == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (ldata1_empty_n == 1'b0) & (ap_predicate_op93_read_state6 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((icmp_ln1038_reg_801_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (in_harris_mat_419_full_n == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (ldata1_empty_n == 1'b0) & (ap_predicate_op93_read_state6 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((icmp_ln1038_reg_801_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (in_harris_mat_419_full_n == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (ldata1_empty_n == 1'b0) & (ap_predicate_op93_read_state6 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((last_blk_width_empty_n == 1'b0) | (cols_bound_per_npc_empty_n == 1'b0) | (rows_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

assign ap_block_state5_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_pp0_stage0_iter1 = ((ldata1_empty_n == 1'b0) & (ap_predicate_op93_read_state6 == 1'b1));
end

always @ (*) begin
    ap_block_state7_pp0_stage0_iter2 = ((icmp_ln1038_reg_801_pp0_iter1_reg == 1'd0) & (in_harris_mat_419_full_n == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter2_empty_reg_157 = 'bx;

always @ (*) begin
    ap_predicate_op93_read_state6 = ((icmp_ln1049_reg_831 == 1'd1) & (icmp_ln1038_reg_801 == 1'd0));
end

assign bLast_fu_232_p2 = ((j_reg_135 == sub_cast_i_reg_781) ? 1'b1 : 1'b0);

assign cols_bound_per_npc_cast4_i_fu_193_p1 = cols_bound_per_npc_1_reg_760;

assign grp_fu_167_p2 = (32'd32 - rem_load_reg_810);

assign grp_fu_739_p0 = grp_fu_739_p00;

assign grp_fu_739_p00 = cols_bound_per_npc_dout;

assign grp_fu_739_p1 = grp_fu_739_p10;

assign grp_fu_739_p10 = rows_dout;

assign i_1_fu_223_p2 = (i_reg_146 + 22'd1);

assign icmp_ln1038_fu_218_p2 = ((i_reg_146 == mul_ln1038_reg_796) ? 1'b1 : 1'b0);

assign icmp_ln1049_fu_259_p2 = (($signed(rem_fu_96) < $signed(zext_ln1044_fu_244_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1050_fu_404_p2 = ((rem_load_reg_810 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln414_fu_549_p2 = ((rem_load_reg_810 > sext_ln1054_fu_506_p1) ? 1'b1 : 1'b0);

assign icmp_ln674_1_fu_322_p2 = ((grp_fu_167_p2 > sub_ln1057_fu_317_p2) ? 1'b1 : 1'b0);

assign icmp_ln674_fu_422_p2 = ((tmp_fu_412_p4 != 27'd0) ? 1'b1 : 1'b0);

assign in_harris_mat_419_din = ap_phi_mux_empty_phi_fu_160_p4;

assign j_2_fu_293_p3 = ((bLast_fu_232_p2[0:0] === 1'b1) ? 32'd0 : add_ln1061_fu_287_p2);

assign last_blk_width_cast2_i_fu_190_p1 = last_blk_width_1_reg_765;

assign lshr_ln414_1_fu_702_p2 = 8'd255 >> zext_ln414_3_fu_678_p1;

assign lshr_ln414_fu_650_p2 = 8'd255 >> zext_ln414_fu_646_p1;

assign lshr_ln674_1_fu_626_p2 = 32'd4294967295 >> zext_ln674_1_fu_623_p1;

assign lshr_ln674_2_fu_533_p2 = 32'd4294967295 >> zext_ln674_2_fu_529_p1;

assign lshr_ln674_3_fu_398_p2 = select_ln674_4_fu_372_p3 >> zext_ln674_3_fu_394_p1;

assign lshr_ln674_4_fu_607_p2 = 32'd4294967295 >> zext_ln674_4_fu_604_p1;

assign lshr_ln674_fu_494_p2 = select_ln674_1_fu_468_p3 >> zext_ln674_fu_490_p1;

assign p_Repl2_4_fu_545_p1 = p_Result_6_fu_539_p2[7:0];

assign p_Repl2_s_fu_637_p1 = p_Result_s_fu_632_p2[7:0];

assign p_Result_5_fu_656_p2 = (p_Repl2_s_fu_637_p1 & lshr_ln414_fu_650_p2);

assign p_Result_6_fu_539_p2 = (lshr_ln674_2_fu_533_p2 & ldata1_dout);

assign p_Result_7_fu_732_p2 = (and_ln414_2_fu_726_p2 | and_ln414_1_fu_720_p2);

assign p_Result_8_fu_613_p2 = (lshr_ln674_4_fu_607_p2 & lshr_ln674_3_reg_845);

assign p_Result_s_fu_632_p2 = (lshr_ln674_reg_865 & lshr_ln674_1_fu_626_p2);

assign p_Val2_6_fu_662_p3 = ((icmp_ln1050_reg_850[0:0] === 1'b1) ? 8'd0 : p_Result_5_fu_656_p2);

assign ptr_width_minus_fu_248_p3 = ((bLast_fu_232_p2[0:0] === 1'b1) ? sub2_i_reg_786 : 6'd24);

assign rem_1_fu_276_p2 = (rem_fu_96 + zext_ln1045_fu_255_p1);

assign rem_2_fu_265_p2 = (rem_fu_96 - zext_ln1044_fu_244_p1);

assign select_ln1057_fu_307_p3 = ((bLast_reg_821[0:0] === 1'b1) ? add_ln1057_reg_791 : 6'd39);

assign select_ln414_1_fu_669_p3 = ((icmp_ln414_reg_870[0:0] === 1'b1) ? trunc_ln414_1_reg_881 : trunc_ln414_reg_876);

assign select_ln414_2_fu_575_p3 = ((icmp_ln414_fu_549_p2[0:0] === 1'b1) ? sub_ln414_1_fu_561_p2 : trunc_ln414_fu_554_p1);

assign select_ln414_3_fu_690_p3 = ((icmp_ln414_reg_870[0:0] === 1'b1) ? tmp_2_fu_681_p4 : shl_ln414_reg_891);

assign select_ln414_fu_567_p3 = ((icmp_ln414_fu_549_p2[0:0] === 1'b1) ? trunc_ln414_fu_554_p1 : trunc_ln414_1_fu_557_p1);

assign select_ln674_1_fu_468_p3 = ((icmp_ln674_fu_422_p2[0:0] === 1'b1) ? tmp_1_fu_432_p4 : p_Val2_s_fu_100);

assign select_ln674_2_fu_476_p3 = ((icmp_ln674_fu_422_p2[0:0] === 1'b1) ? sub_ln674_fu_448_p2 : trunc_ln674_fu_428_p1);

assign select_ln674_3_fu_364_p3 = ((icmp_ln674_1_fu_322_p2[0:0] === 1'b1) ? sub_ln674_4_fu_346_p2 : sub_ln674_6_fu_358_p2);

assign select_ln674_4_fu_372_p3 = ((icmp_ln674_1_fu_322_p2[0:0] === 1'b1) ? tmp_3_fu_336_p4 : p_Val2_s_fu_100);

assign select_ln674_5_fu_380_p3 = ((icmp_ln674_1_fu_322_p2[0:0] === 1'b1) ? sub_ln674_5_fu_352_p2 : trunc_ln674_1_fu_328_p1);

assign select_ln674_fu_460_p3 = ((icmp_ln674_fu_422_p2[0:0] === 1'b1) ? add_ln674_fu_442_p2 : sub_ln674_1_fu_454_p2);

assign sext_ln1054_1_fu_510_p1 = add_ln1054_fu_500_p2;

assign sext_ln1054_fu_506_p1 = add_ln1054_fu_500_p2;

assign shl_ln414_1_fu_696_p2 = 8'd255 << zext_ln414_2_fu_674_p1;

assign shl_ln414_fu_593_p2 = p_Repl2_4_fu_545_p1 << zext_ln414_1_fu_589_p1;

assign sub2_i_fu_206_p2 = ($signed(6'd32) - $signed(last_blk_width_cast2_i_fu_190_p1));

assign sub_cast_i_fu_202_p1 = $signed(sub_i_fu_196_p2);

assign sub_i_fu_196_p2 = ($signed(cols_bound_per_npc_cast4_i_fu_193_p1) + $signed(12'd4095));

assign sub_ln1057_fu_317_p2 = (zext_ln1057_fu_313_p1 - rem_load_reg_810);

assign sub_ln414_1_fu_561_p2 = (4'd7 - trunc_ln414_fu_554_p1);

assign sub_ln414_2_fu_583_p2 = (4'd7 - select_ln414_fu_567_p3);

assign sub_ln414_fu_641_p2 = ($signed(4'd8) - $signed(trunc_ln1051_reg_855));

assign sub_ln674_1_fu_454_p2 = (6'd31 - trunc_ln674_fu_428_p1);

assign sub_ln674_2_fu_484_p2 = (6'd31 - select_ln674_fu_460_p3);

assign sub_ln674_3_fu_517_p2 = ($signed(trunc_ln1054_fu_514_p1) - $signed(sext_ln1054_1_fu_510_p1));

assign sub_ln674_4_fu_346_p2 = (trunc_ln674_1_fu_328_p1 - trunc_ln674_2_fu_332_p1);

assign sub_ln674_5_fu_352_p2 = (6'd31 - trunc_ln674_1_fu_328_p1);

assign sub_ln674_6_fu_358_p2 = (trunc_ln674_2_fu_332_p1 - trunc_ln674_1_fu_328_p1);

assign sub_ln674_7_fu_388_p2 = (6'd31 - select_ln674_3_fu_364_p3);

assign sub_ln674_fu_448_p2 = (6'd31 - trunc_ln674_fu_428_p1);

integer ap_tvar_int_0;

always @ (p_Val2_s_fu_100) begin
    for (ap_tvar_int_0 = 32 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 31 - 0) begin
            tmp_1_fu_432_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            tmp_1_fu_432_p4[ap_tvar_int_0] = p_Val2_s_fu_100[31 - ap_tvar_int_0];
        end
    end
end

integer ap_tvar_int_1;

always @ (shl_ln414_reg_891) begin
    for (ap_tvar_int_1 = 8 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 7 - 0) begin
            tmp_2_fu_681_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            tmp_2_fu_681_p4[ap_tvar_int_1] = shl_ln414_reg_891[7 - ap_tvar_int_1];
        end
    end
end

integer ap_tvar_int_2;

always @ (p_Val2_s_fu_100) begin
    for (ap_tvar_int_2 = 32 - 1; ap_tvar_int_2 >= 0; ap_tvar_int_2 = ap_tvar_int_2 - 1) begin
        if (ap_tvar_int_2 > 31 - 0) begin
            tmp_3_fu_336_p4[ap_tvar_int_2] = 1'b0;
        end else begin
            tmp_3_fu_336_p4[ap_tvar_int_2] = p_Val2_s_fu_100[31 - ap_tvar_int_2];
        end
    end
end

assign tmp_fu_412_p4 = {{grp_fu_167_p2[31:5]}};

assign trunc_ln1051_fu_409_p1 = rem_load_reg_810[3:0];

assign trunc_ln1054_fu_514_p1 = rem_load_reg_810[5:0];

assign trunc_ln358_fu_618_p1 = p_Result_8_fu_613_p2[7:0];

assign trunc_ln414_1_fu_557_p1 = add_ln1054_fu_500_p2[3:0];

assign trunc_ln414_fu_554_p1 = rem_load_reg_810[3:0];

assign trunc_ln674_1_fu_328_p1 = grp_fu_167_p2[5:0];

assign trunc_ln674_2_fu_332_p1 = sub_ln1057_fu_317_p2[5:0];

assign trunc_ln674_fu_428_p1 = grp_fu_167_p2[5:0];

assign xf_bits_per_clock_fu_237_p3 = ((bLast_fu_232_p2[0:0] === 1'b1) ? last_blk_width_1_reg_765 : 4'd8);

assign xor_ln414_fu_714_p2 = (8'd255 ^ and_ln414_fu_708_p2);

assign zext_ln1044_1_fu_301_p1 = xf_bits_per_clock_reg_826;

assign zext_ln1044_fu_244_p1 = xf_bits_per_clock_fu_237_p3;

assign zext_ln1045_fu_255_p1 = ptr_width_minus_fu_248_p3;

assign zext_ln1057_fu_313_p1 = select_ln1057_fu_307_p3;

assign zext_ln414_1_fu_589_p1 = select_ln414_2_fu_575_p3;

assign zext_ln414_2_fu_674_p1 = select_ln414_1_fu_669_p3;

assign zext_ln414_3_fu_678_p1 = sub_ln414_2_reg_886;

assign zext_ln414_fu_646_p1 = sub_ln414_fu_641_p2;

assign zext_ln674_1_fu_623_p1 = sub_ln674_2_reg_860;

assign zext_ln674_2_fu_529_p1 = add_ln674_1_fu_523_p2;

assign zext_ln674_3_fu_394_p1 = select_ln674_5_fu_380_p3;

assign zext_ln674_4_fu_604_p1 = sub_ln674_7_reg_840;

assign zext_ln674_fu_490_p1 = select_ln674_2_fu_476_p3;

endmodule //cornerTracker_AxiStream2MatStream
