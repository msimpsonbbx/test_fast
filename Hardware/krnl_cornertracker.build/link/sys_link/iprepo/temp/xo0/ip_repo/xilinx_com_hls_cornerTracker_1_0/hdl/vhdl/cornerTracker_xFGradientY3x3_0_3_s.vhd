-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity cornerTracker_xFGradientY3x3_0_3_s is
port (
    ap_ready : OUT STD_LOGIC;
    t0 : IN STD_LOGIC_VECTOR (7 downto 0);
    t1 : IN STD_LOGIC_VECTOR (7 downto 0);
    t2 : IN STD_LOGIC_VECTOR (7 downto 0);
    b0 : IN STD_LOGIC_VECTOR (7 downto 0);
    b1 : IN STD_LOGIC_VECTOR (7 downto 0);
    b2 : IN STD_LOGIC_VECTOR (7 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (10 downto 0) );
end;


architecture behav of cornerTracker_xFGradientY3x3_0_3_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_logic_0 : STD_LOGIC := '0';

attribute shreg_extract : string;
    signal M00_fu_54_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal M01_fu_66_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln215_fu_78_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln215_1_fu_82_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal A00_fu_86_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln215_2_fu_96_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln215_3_fu_100_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal S00_fu_104_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln108_fu_74_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln107_fu_62_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal out_pix_3_fu_114_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln109_fu_92_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln114_fu_120_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal out_pix_4_fu_124_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln110_fu_110_p1 : STD_LOGIC_VECTOR (10 downto 0);


begin



    A00_fu_86_p2 <= std_logic_vector(unsigned(zext_ln215_fu_78_p1) + unsigned(zext_ln215_1_fu_82_p1));
    M00_fu_54_p3 <= (t1 & ap_const_lv1_0);
    M01_fu_66_p3 <= (b1 & ap_const_lv1_0);
    S00_fu_104_p2 <= std_logic_vector(unsigned(zext_ln215_2_fu_96_p1) + unsigned(zext_ln215_3_fu_100_p1));
    ap_ready <= ap_const_logic_1;
    ap_return <= std_logic_vector(unsigned(out_pix_4_fu_124_p2) - unsigned(zext_ln110_fu_110_p1));
    out_pix_3_fu_114_p2 <= std_logic_vector(unsigned(zext_ln108_fu_74_p1) - unsigned(zext_ln107_fu_62_p1));
    out_pix_4_fu_124_p2 <= std_logic_vector(unsigned(zext_ln109_fu_92_p1) + unsigned(sext_ln114_fu_120_p1));
        sext_ln114_fu_120_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(out_pix_3_fu_114_p2),11));

    zext_ln107_fu_62_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(M00_fu_54_p3),10));
    zext_ln108_fu_74_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(M01_fu_66_p3),10));
    zext_ln109_fu_92_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(A00_fu_86_p2),11));
    zext_ln110_fu_110_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(S00_fu_104_p2),11));
    zext_ln215_1_fu_82_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b2),9));
    zext_ln215_2_fu_96_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t0),9));
    zext_ln215_3_fu_100_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t2),9));
    zext_ln215_fu_78_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b0),9));
end behav;
