-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity cornerTracker_cornerHarris_3_3_1_0_1080_1920_1_false_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_harris_mat_419_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    in_harris_mat_419_empty_n : IN STD_LOGIC;
    in_harris_mat_419_read : OUT STD_LOGIC;
    out_harris_mat_420_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_harris_mat_420_full_n : IN STD_LOGIC;
    out_harris_mat_420_write : OUT STD_LOGIC;
    src_1_dout : IN STD_LOGIC_VECTOR (10 downto 0);
    src_1_empty_n : IN STD_LOGIC;
    src_1_read : OUT STD_LOGIC;
    src_2_dout : IN STD_LOGIC_VECTOR (10 downto 0);
    src_2_empty_n : IN STD_LOGIC;
    src_2_read : OUT STD_LOGIC;
    threshold_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    threshold_empty_n : IN STD_LOGIC;
    threshold_read : OUT STD_LOGIC );
end;


architecture behav of cornerTracker_cornerHarris_3_3_1_0_1080_1920_1_false_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal src_1_blk_n : STD_LOGIC;
    signal src_2_blk_n : STD_LOGIC;
    signal threshold_blk_n : STD_LOGIC;
    signal img_height_reg_70 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal img_width_reg_76 : STD_LOGIC_VECTOR (10 downto 0);
    signal threshold_read_reg_82 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_xFCornerHarrisDetector_3_3_0_1080_1920_1_0_1_1_12_1920_5_12_false_s_fu_52_in_harris_mat_419_read : STD_LOGIC;
    signal grp_xFCornerHarrisDetector_3_3_0_1080_1920_1_0_1_1_12_1920_5_12_false_s_fu_52_out_harris_mat_420_din : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_xFCornerHarrisDetector_3_3_0_1080_1920_1_0_1_1_12_1920_5_12_false_s_fu_52_out_harris_mat_420_write : STD_LOGIC;
    signal grp_xFCornerHarrisDetector_3_3_0_1080_1920_1_0_1_1_12_1920_5_12_false_s_fu_52_ap_start : STD_LOGIC;
    signal grp_xFCornerHarrisDetector_3_3_0_1080_1920_1_0_1_1_12_1920_5_12_false_s_fu_52_ap_done : STD_LOGIC;
    signal grp_xFCornerHarrisDetector_3_3_0_1080_1920_1_0_1_1_12_1920_5_12_false_s_fu_52_ap_ready : STD_LOGIC;
    signal grp_xFCornerHarrisDetector_3_3_0_1080_1920_1_0_1_1_12_1920_5_12_false_s_fu_52_ap_idle : STD_LOGIC;
    signal grp_xFCornerHarrisDetector_3_3_0_1080_1920_1_0_1_1_12_1920_5_12_false_s_fu_52_ap_continue : STD_LOGIC;
    signal grp_xFCornerHarrisDetector_3_3_0_1080_1920_1_0_1_1_12_1920_5_12_false_s_fu_52_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state1_ignore_call10 : BOOLEAN;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_sync_grp_xFCornerHarrisDetector_3_3_0_1080_1920_1_0_1_1_12_1920_5_12_false_s_fu_52_ap_ready : STD_LOGIC;
    signal ap_sync_grp_xFCornerHarrisDetector_3_3_0_1080_1920_1_0_1_1_12_1920_5_12_false_s_fu_52_ap_done : STD_LOGIC;
    signal ap_block_state2_on_subcall_done : BOOLEAN;
    signal ap_sync_reg_grp_xFCornerHarrisDetector_3_3_0_1080_1920_1_0_1_1_12_1920_5_12_false_s_fu_52_ap_ready : STD_LOGIC := '0';
    signal ap_sync_reg_grp_xFCornerHarrisDetector_3_3_0_1080_1920_1_0_1_1_12_1920_5_12_false_s_fu_52_ap_done : STD_LOGIC := '0';
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);

    component cornerTracker_xFCornerHarrisDetector_3_3_0_1080_1920_1_0_1_1_12_1920_5_12_false_s IS
    port (
        in_harris_mat_419_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        in_harris_mat_419_empty_n : IN STD_LOGIC;
        in_harris_mat_419_read : OUT STD_LOGIC;
        out_harris_mat_420_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_harris_mat_420_full_n : IN STD_LOGIC;
        out_harris_mat_420_write : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (10 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (10 downto 0);
        img_height : IN STD_LOGIC_VECTOR (10 downto 0);
        img_width : IN STD_LOGIC_VECTOR (10 downto 0);
        p_threshold : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        p_read_ap_vld : IN STD_LOGIC;
        p_read1_ap_vld : IN STD_LOGIC;
        img_height_ap_vld : IN STD_LOGIC;
        img_width_ap_vld : IN STD_LOGIC;
        p_threshold_ap_vld : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC );
    end component;



begin
    grp_xFCornerHarrisDetector_3_3_0_1080_1920_1_0_1_1_12_1920_5_12_false_s_fu_52 : component cornerTracker_xFCornerHarrisDetector_3_3_0_1080_1920_1_0_1_1_12_1920_5_12_false_s
    port map (
        in_harris_mat_419_dout => in_harris_mat_419_dout,
        in_harris_mat_419_empty_n => in_harris_mat_419_empty_n,
        in_harris_mat_419_read => grp_xFCornerHarrisDetector_3_3_0_1080_1920_1_0_1_1_12_1920_5_12_false_s_fu_52_in_harris_mat_419_read,
        out_harris_mat_420_din => grp_xFCornerHarrisDetector_3_3_0_1080_1920_1_0_1_1_12_1920_5_12_false_s_fu_52_out_harris_mat_420_din,
        out_harris_mat_420_full_n => out_harris_mat_420_full_n,
        out_harris_mat_420_write => grp_xFCornerHarrisDetector_3_3_0_1080_1920_1_0_1_1_12_1920_5_12_false_s_fu_52_out_harris_mat_420_write,
        p_read => img_height_reg_70,
        p_read1 => img_width_reg_76,
        img_height => img_height_reg_70,
        img_width => img_width_reg_76,
        p_threshold => threshold_read_reg_82,
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        p_read_ap_vld => ap_const_logic_1,
        p_read1_ap_vld => ap_const_logic_1,
        img_height_ap_vld => ap_const_logic_1,
        img_width_ap_vld => ap_const_logic_1,
        p_threshold_ap_vld => ap_const_logic_1,
        ap_start => grp_xFCornerHarrisDetector_3_3_0_1080_1920_1_0_1_1_12_1920_5_12_false_s_fu_52_ap_start,
        ap_done => grp_xFCornerHarrisDetector_3_3_0_1080_1920_1_0_1_1_12_1920_5_12_false_s_fu_52_ap_done,
        ap_ready => grp_xFCornerHarrisDetector_3_3_0_1080_1920_1_0_1_1_12_1920_5_12_false_s_fu_52_ap_ready,
        ap_idle => grp_xFCornerHarrisDetector_3_3_0_1080_1920_1_0_1_1_12_1920_5_12_false_s_fu_52_ap_idle,
        ap_continue => grp_xFCornerHarrisDetector_3_3_0_1080_1920_1_0_1_1_12_1920_5_12_false_s_fu_52_ap_continue);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_grp_xFCornerHarrisDetector_3_3_0_1080_1920_1_0_1_1_12_1920_5_12_false_s_fu_52_ap_done_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_grp_xFCornerHarrisDetector_3_3_0_1080_1920_1_0_1_1_12_1920_5_12_false_s_fu_52_ap_done <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done))) then 
                    ap_sync_reg_grp_xFCornerHarrisDetector_3_3_0_1080_1920_1_0_1_1_12_1920_5_12_false_s_fu_52_ap_done <= ap_const_logic_0;
                elsif ((grp_xFCornerHarrisDetector_3_3_0_1080_1920_1_0_1_1_12_1920_5_12_false_s_fu_52_ap_done = ap_const_logic_1)) then 
                    ap_sync_reg_grp_xFCornerHarrisDetector_3_3_0_1080_1920_1_0_1_1_12_1920_5_12_false_s_fu_52_ap_done <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_grp_xFCornerHarrisDetector_3_3_0_1080_1920_1_0_1_1_12_1920_5_12_false_s_fu_52_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_grp_xFCornerHarrisDetector_3_3_0_1080_1920_1_0_1_1_12_1920_5_12_false_s_fu_52_ap_ready <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done))) then 
                    ap_sync_reg_grp_xFCornerHarrisDetector_3_3_0_1080_1920_1_0_1_1_12_1920_5_12_false_s_fu_52_ap_ready <= ap_const_logic_0;
                elsif ((grp_xFCornerHarrisDetector_3_3_0_1080_1920_1_0_1_1_12_1920_5_12_false_s_fu_52_ap_ready = ap_const_logic_1)) then 
                    ap_sync_reg_grp_xFCornerHarrisDetector_3_3_0_1080_1920_1_0_1_1_12_1920_5_12_false_s_fu_52_ap_ready <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_xFCornerHarrisDetector_3_3_0_1080_1920_1_0_1_1_12_1920_5_12_false_s_fu_52_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_xFCornerHarrisDetector_3_3_0_1080_1920_1_0_1_1_12_1920_5_12_false_s_fu_52_ap_start_reg <= ap_const_logic_0;
            else
                if (((not(((ap_start = ap_const_logic_0) or (threshold_empty_n = ap_const_logic_0) or (src_2_empty_n = ap_const_logic_0) or (src_1_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_sync_grp_xFCornerHarrisDetector_3_3_0_1080_1920_1_0_1_1_12_1920_5_12_false_s_fu_52_ap_ready = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
                    grp_xFCornerHarrisDetector_3_3_0_1080_1920_1_0_1_1_12_1920_5_12_false_s_fu_52_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_xFCornerHarrisDetector_3_3_0_1080_1920_1_0_1_1_12_1920_5_12_false_s_fu_52_ap_ready = ap_const_logic_1)) then 
                    grp_xFCornerHarrisDetector_3_3_0_1080_1920_1_0_1_1_12_1920_5_12_false_s_fu_52_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (threshold_empty_n = ap_const_logic_0) or (src_2_empty_n = ap_const_logic_0) or (src_1_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                img_height_reg_70 <= src_1_dout;
                img_width_reg_76 <= src_2_dout;
                threshold_read_reg_82 <= threshold_dout;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, src_1_empty_n, src_2_empty_n, threshold_empty_n, ap_CS_fsm_state2, ap_block_state2_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (threshold_empty_n = ap_const_logic_0) or (src_2_empty_n = ap_const_logic_0) or (src_1_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, src_1_empty_n, src_2_empty_n, threshold_empty_n)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (threshold_empty_n = ap_const_logic_0) or (src_2_empty_n = ap_const_logic_0) or (src_1_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state1_ignore_call10_assign_proc : process(ap_start, ap_done_reg, src_1_empty_n, src_2_empty_n, threshold_empty_n)
    begin
                ap_block_state1_ignore_call10 <= ((ap_start = ap_const_logic_0) or (threshold_empty_n = ap_const_logic_0) or (src_2_empty_n = ap_const_logic_0) or (src_1_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state2_on_subcall_done_assign_proc : process(ap_sync_grp_xFCornerHarrisDetector_3_3_0_1080_1920_1_0_1_1_12_1920_5_12_false_s_fu_52_ap_ready, ap_sync_grp_xFCornerHarrisDetector_3_3_0_1080_1920_1_0_1_1_12_1920_5_12_false_s_fu_52_ap_done)
    begin
                ap_block_state2_on_subcall_done <= ((ap_sync_grp_xFCornerHarrisDetector_3_3_0_1080_1920_1_0_1_1_12_1920_5_12_false_s_fu_52_ap_ready and ap_sync_grp_xFCornerHarrisDetector_3_3_0_1080_1920_1_0_1_1_12_1920_5_12_false_s_fu_52_ap_done) = ap_const_logic_0);
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state2, ap_block_state2_on_subcall_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, ap_block_state2_on_subcall_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_sync_grp_xFCornerHarrisDetector_3_3_0_1080_1920_1_0_1_1_12_1920_5_12_false_s_fu_52_ap_done <= (grp_xFCornerHarrisDetector_3_3_0_1080_1920_1_0_1_1_12_1920_5_12_false_s_fu_52_ap_done or ap_sync_reg_grp_xFCornerHarrisDetector_3_3_0_1080_1920_1_0_1_1_12_1920_5_12_false_s_fu_52_ap_done);
    ap_sync_grp_xFCornerHarrisDetector_3_3_0_1080_1920_1_0_1_1_12_1920_5_12_false_s_fu_52_ap_ready <= (grp_xFCornerHarrisDetector_3_3_0_1080_1920_1_0_1_1_12_1920_5_12_false_s_fu_52_ap_ready or ap_sync_reg_grp_xFCornerHarrisDetector_3_3_0_1080_1920_1_0_1_1_12_1920_5_12_false_s_fu_52_ap_ready);

    grp_xFCornerHarrisDetector_3_3_0_1080_1920_1_0_1_1_12_1920_5_12_false_s_fu_52_ap_continue_assign_proc : process(ap_CS_fsm_state2, ap_block_state2_on_subcall_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done))) then 
            grp_xFCornerHarrisDetector_3_3_0_1080_1920_1_0_1_1_12_1920_5_12_false_s_fu_52_ap_continue <= ap_const_logic_1;
        else 
            grp_xFCornerHarrisDetector_3_3_0_1080_1920_1_0_1_1_12_1920_5_12_false_s_fu_52_ap_continue <= ap_const_logic_0;
        end if; 
    end process;

    grp_xFCornerHarrisDetector_3_3_0_1080_1920_1_0_1_1_12_1920_5_12_false_s_fu_52_ap_start <= grp_xFCornerHarrisDetector_3_3_0_1080_1920_1_0_1_1_12_1920_5_12_false_s_fu_52_ap_start_reg;

    in_harris_mat_419_read_assign_proc : process(grp_xFCornerHarrisDetector_3_3_0_1080_1920_1_0_1_1_12_1920_5_12_false_s_fu_52_in_harris_mat_419_read, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            in_harris_mat_419_read <= grp_xFCornerHarrisDetector_3_3_0_1080_1920_1_0_1_1_12_1920_5_12_false_s_fu_52_in_harris_mat_419_read;
        else 
            in_harris_mat_419_read <= ap_const_logic_0;
        end if; 
    end process;

    out_harris_mat_420_din <= grp_xFCornerHarrisDetector_3_3_0_1080_1920_1_0_1_1_12_1920_5_12_false_s_fu_52_out_harris_mat_420_din;

    out_harris_mat_420_write_assign_proc : process(grp_xFCornerHarrisDetector_3_3_0_1080_1920_1_0_1_1_12_1920_5_12_false_s_fu_52_out_harris_mat_420_write, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            out_harris_mat_420_write <= grp_xFCornerHarrisDetector_3_3_0_1080_1920_1_0_1_1_12_1920_5_12_false_s_fu_52_out_harris_mat_420_write;
        else 
            out_harris_mat_420_write <= ap_const_logic_0;
        end if; 
    end process;


    src_1_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, src_1_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            src_1_blk_n <= src_1_empty_n;
        else 
            src_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    src_1_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, src_1_empty_n, src_2_empty_n, threshold_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (threshold_empty_n = ap_const_logic_0) or (src_2_empty_n = ap_const_logic_0) or (src_1_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            src_1_read <= ap_const_logic_1;
        else 
            src_1_read <= ap_const_logic_0;
        end if; 
    end process;


    src_2_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, src_2_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            src_2_blk_n <= src_2_empty_n;
        else 
            src_2_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    src_2_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, src_1_empty_n, src_2_empty_n, threshold_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (threshold_empty_n = ap_const_logic_0) or (src_2_empty_n = ap_const_logic_0) or (src_1_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            src_2_read <= ap_const_logic_1;
        else 
            src_2_read <= ap_const_logic_0;
        end if; 
    end process;


    threshold_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, threshold_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            threshold_blk_n <= threshold_empty_n;
        else 
            threshold_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    threshold_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, src_1_empty_n, src_2_empty_n, threshold_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (threshold_empty_n = ap_const_logic_0) or (src_2_empty_n = ap_const_logic_0) or (src_1_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            threshold_read <= ap_const_logic_1;
        else 
            threshold_read <= ap_const_logic_0;
        end if; 
    end process;

end behav;
