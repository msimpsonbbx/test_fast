-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity pyr_dense_optical_flow_accel_Axi2Mat is
port (
    m_axi_gmem3_AWVALID : OUT STD_LOGIC;
    m_axi_gmem3_AWREADY : IN STD_LOGIC;
    m_axi_gmem3_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem3_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem3_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem3_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem3_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem3_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem3_WVALID : OUT STD_LOGIC;
    m_axi_gmem3_WREADY : IN STD_LOGIC;
    m_axi_gmem3_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem3_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_WLAST : OUT STD_LOGIC;
    m_axi_gmem3_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem3_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem3_ARVALID : OUT STD_LOGIC;
    m_axi_gmem3_ARREADY : IN STD_LOGIC;
    m_axi_gmem3_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem3_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem3_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem3_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem3_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem3_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem3_RVALID : IN STD_LOGIC;
    m_axi_gmem3_RREADY : OUT STD_LOGIC;
    m_axi_gmem3_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem3_RLAST : IN STD_LOGIC;
    m_axi_gmem3_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem3_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem3_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_BVALID : IN STD_LOGIC;
    m_axi_gmem3_BREADY : OUT STD_LOGIC;
    m_axi_gmem3_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem3_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    streamFlowin_mat_436_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    streamFlowin_mat_436_full_n : IN STD_LOGIC;
    streamFlowin_mat_436_write : OUT STD_LOGIC;
    din : IN STD_LOGIC_VECTOR (63 downto 0);
    rows : IN STD_LOGIC_VECTOR (31 downto 0);
    cols : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    din_ap_vld : IN STD_LOGIC;
    rows_ap_vld : IN STD_LOGIC;
    cols_ap_vld : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC );
end;


architecture behav of pyr_dense_optical_flow_accel_Axi2Mat is 
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";

attribute shreg_extract : string;
    signal Axi2Mat_entry6_U0_ap_start : STD_LOGIC;
    signal Axi2Mat_entry6_U0_ap_done : STD_LOGIC;
    signal Axi2Mat_entry6_U0_ap_continue : STD_LOGIC;
    signal Axi2Mat_entry6_U0_ap_idle : STD_LOGIC;
    signal Axi2Mat_entry6_U0_ap_ready : STD_LOGIC;
    signal Axi2Mat_entry6_U0_start_out : STD_LOGIC;
    signal Axi2Mat_entry6_U0_start_write : STD_LOGIC;
    signal Axi2Mat_entry6_U0_din_out_din : STD_LOGIC_VECTOR (63 downto 0);
    signal Axi2Mat_entry6_U0_din_out_write : STD_LOGIC;
    signal Axi2Mat_entry6_U0_rows_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Axi2Mat_entry6_U0_rows_out_write : STD_LOGIC;
    signal Axi2Mat_entry6_U0_cols_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Axi2Mat_entry6_U0_cols_out_write : STD_LOGIC;
    signal Axi2Mat_entry42_U0_ap_start : STD_LOGIC;
    signal Axi2Mat_entry42_U0_ap_done : STD_LOGIC;
    signal Axi2Mat_entry42_U0_ap_continue : STD_LOGIC;
    signal Axi2Mat_entry42_U0_ap_idle : STD_LOGIC;
    signal Axi2Mat_entry42_U0_ap_ready : STD_LOGIC;
    signal Axi2Mat_entry42_U0_start_out : STD_LOGIC;
    signal Axi2Mat_entry42_U0_start_write : STD_LOGIC;
    signal Axi2Mat_entry42_U0_din_read : STD_LOGIC;
    signal Axi2Mat_entry42_U0_rows_read : STD_LOGIC;
    signal Axi2Mat_entry42_U0_cols_read : STD_LOGIC;
    signal Axi2Mat_entry42_U0_din_out_din : STD_LOGIC_VECTOR (63 downto 0);
    signal Axi2Mat_entry42_U0_din_out_write : STD_LOGIC;
    signal Axi2Mat_entry42_U0_rows_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Axi2Mat_entry42_U0_rows_out_write : STD_LOGIC;
    signal Axi2Mat_entry42_U0_cols_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Axi2Mat_entry42_U0_cols_out_write : STD_LOGIC;
    signal last_blk_pxl_width21_U0_ap_start : STD_LOGIC;
    signal last_blk_pxl_width21_U0_ap_done : STD_LOGIC;
    signal last_blk_pxl_width21_U0_ap_continue : STD_LOGIC;
    signal last_blk_pxl_width21_U0_ap_idle : STD_LOGIC;
    signal last_blk_pxl_width21_U0_ap_ready : STD_LOGIC;
    signal last_blk_pxl_width21_U0_start_out : STD_LOGIC;
    signal last_blk_pxl_width21_U0_start_write : STD_LOGIC;
    signal last_blk_pxl_width21_U0_ret_out_din : STD_LOGIC_VECTOR (5 downto 0);
    signal last_blk_pxl_width21_U0_ret_out_write : STD_LOGIC;
    signal addrbound22_U0_ap_start : STD_LOGIC;
    signal addrbound22_U0_ap_done : STD_LOGIC;
    signal addrbound22_U0_ap_continue : STD_LOGIC;
    signal addrbound22_U0_ap_idle : STD_LOGIC;
    signal addrbound22_U0_ap_ready : STD_LOGIC;
    signal addrbound22_U0_return_r : STD_LOGIC_VECTOR (21 downto 0);
    signal addrbound22_U0_return_r_ap_vld : STD_LOGIC;
    signal addrbound22_U0_rows_read : STD_LOGIC;
    signal addrbound22_U0_cols_read : STD_LOGIC;
    signal addrbound22_U0_rows_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal addrbound22_U0_rows_out_write : STD_LOGIC;
    signal addrbound22_U0_cols_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal addrbound22_U0_cols_out_write : STD_LOGIC;
    signal ap_channel_done_p_channel : STD_LOGIC;
    signal p_channel_full_n : STD_LOGIC;
    signal Axi2Mat_Block_split15_proc_U0_ap_start : STD_LOGIC;
    signal Axi2Mat_Block_split15_proc_U0_ap_done : STD_LOGIC;
    signal Axi2Mat_Block_split15_proc_U0_ap_continue : STD_LOGIC;
    signal Axi2Mat_Block_split15_proc_U0_ap_idle : STD_LOGIC;
    signal Axi2Mat_Block_split15_proc_U0_ap_ready : STD_LOGIC;
    signal Axi2Mat_Block_split15_proc_U0_ap_return : STD_LOGIC_VECTOR (21 downto 0);
    signal ap_channel_done_axibound_V : STD_LOGIC;
    signal axibound_V_full_n : STD_LOGIC;
    signal Axi2AxiStream_U0_ap_start : STD_LOGIC;
    signal Axi2AxiStream_U0_ap_done : STD_LOGIC;
    signal Axi2AxiStream_U0_ap_continue : STD_LOGIC;
    signal Axi2AxiStream_U0_ap_idle : STD_LOGIC;
    signal Axi2AxiStream_U0_ap_ready : STD_LOGIC;
    signal Axi2AxiStream_U0_m_axi_gmem3_AWVALID : STD_LOGIC;
    signal Axi2AxiStream_U0_m_axi_gmem3_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal Axi2AxiStream_U0_m_axi_gmem3_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal Axi2AxiStream_U0_m_axi_gmem3_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Axi2AxiStream_U0_m_axi_gmem3_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Axi2AxiStream_U0_m_axi_gmem3_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Axi2AxiStream_U0_m_axi_gmem3_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Axi2AxiStream_U0_m_axi_gmem3_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Axi2AxiStream_U0_m_axi_gmem3_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Axi2AxiStream_U0_m_axi_gmem3_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Axi2AxiStream_U0_m_axi_gmem3_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Axi2AxiStream_U0_m_axi_gmem3_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Axi2AxiStream_U0_m_axi_gmem3_WVALID : STD_LOGIC;
    signal Axi2AxiStream_U0_m_axi_gmem3_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal Axi2AxiStream_U0_m_axi_gmem3_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal Axi2AxiStream_U0_m_axi_gmem3_WLAST : STD_LOGIC;
    signal Axi2AxiStream_U0_m_axi_gmem3_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal Axi2AxiStream_U0_m_axi_gmem3_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Axi2AxiStream_U0_m_axi_gmem3_ARVALID : STD_LOGIC;
    signal Axi2AxiStream_U0_m_axi_gmem3_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal Axi2AxiStream_U0_m_axi_gmem3_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal Axi2AxiStream_U0_m_axi_gmem3_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Axi2AxiStream_U0_m_axi_gmem3_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Axi2AxiStream_U0_m_axi_gmem3_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Axi2AxiStream_U0_m_axi_gmem3_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Axi2AxiStream_U0_m_axi_gmem3_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Axi2AxiStream_U0_m_axi_gmem3_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Axi2AxiStream_U0_m_axi_gmem3_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Axi2AxiStream_U0_m_axi_gmem3_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Axi2AxiStream_U0_m_axi_gmem3_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Axi2AxiStream_U0_m_axi_gmem3_RREADY : STD_LOGIC;
    signal Axi2AxiStream_U0_m_axi_gmem3_BREADY : STD_LOGIC;
    signal Axi2AxiStream_U0_ldata1_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Axi2AxiStream_U0_ldata1_write : STD_LOGIC;
    signal Axi2AxiStream_U0_din_read : STD_LOGIC;
    signal AxiStream2MatStream_U0_ap_start : STD_LOGIC;
    signal AxiStream2MatStream_U0_ap_done : STD_LOGIC;
    signal AxiStream2MatStream_U0_ap_continue : STD_LOGIC;
    signal AxiStream2MatStream_U0_ap_idle : STD_LOGIC;
    signal AxiStream2MatStream_U0_ap_ready : STD_LOGIC;
    signal AxiStream2MatStream_U0_ldata1_read : STD_LOGIC;
    signal AxiStream2MatStream_U0_streamFlowin_mat_436_din : STD_LOGIC_VECTOR (31 downto 0);
    signal AxiStream2MatStream_U0_streamFlowin_mat_436_write : STD_LOGIC;
    signal AxiStream2MatStream_U0_rows_read : STD_LOGIC;
    signal AxiStream2MatStream_U0_cols_bound_per_npc_read : STD_LOGIC;
    signal AxiStream2MatStream_U0_last_blk_width_read : STD_LOGIC;
    signal ap_sync_continue : STD_LOGIC;
    signal din_c1_full_n : STD_LOGIC;
    signal din_c1_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal din_c1_empty_n : STD_LOGIC;
    signal rows_c2_full_n : STD_LOGIC;
    signal rows_c2_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal rows_c2_empty_n : STD_LOGIC;
    signal cols_c3_full_n : STD_LOGIC;
    signal cols_c3_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal cols_c3_empty_n : STD_LOGIC;
    signal din_c_full_n : STD_LOGIC;
    signal din_c_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal din_c_empty_n : STD_LOGIC;
    signal rows_c_full_n : STD_LOGIC;
    signal rows_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal rows_c_empty_n : STD_LOGIC;
    signal cols_c_full_n : STD_LOGIC;
    signal cols_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal cols_c_empty_n : STD_LOGIC;
    signal last_blk_width_c_full_n : STD_LOGIC;
    signal last_blk_width_c_dout : STD_LOGIC_VECTOR (5 downto 0);
    signal last_blk_width_c_empty_n : STD_LOGIC;
    signal p_channel_dout : STD_LOGIC_VECTOR (21 downto 0);
    signal p_channel_empty_n : STD_LOGIC;
    signal rows_c13_full_n : STD_LOGIC;
    signal rows_c13_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal rows_c13_empty_n : STD_LOGIC;
    signal cols_c14_full_n : STD_LOGIC;
    signal cols_c14_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal cols_c14_empty_n : STD_LOGIC;
    signal axibound_V_dout : STD_LOGIC_VECTOR (21 downto 0);
    signal axibound_V_empty_n : STD_LOGIC;
    signal ldata_full_n : STD_LOGIC;
    signal ldata_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal ldata_empty_n : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal ap_sync_reg_Axi2Mat_entry6_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_Axi2Mat_entry6_U0_ap_ready : STD_LOGIC;
    signal Axi2Mat_entry6_U0_ap_ready_count : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal ap_sync_reg_last_blk_pxl_width21_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_last_blk_pxl_width21_U0_ap_ready : STD_LOGIC;
    signal last_blk_pxl_width21_U0_ap_ready_count : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal ap_sync_reg_Axi2AxiStream_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_Axi2AxiStream_U0_ap_ready : STD_LOGIC;
    signal Axi2AxiStream_U0_ap_ready_count : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal start_for_Axi2Mat_entry42_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Axi2Mat_entry42_U0_full_n : STD_LOGIC;
    signal start_for_Axi2Mat_entry42_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Axi2Mat_entry42_U0_empty_n : STD_LOGIC;
    signal start_for_addrbound22_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_addrbound22_U0_full_n : STD_LOGIC;
    signal start_for_addrbound22_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_addrbound22_U0_empty_n : STD_LOGIC;
    signal start_for_AxiStream2MatStream_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_AxiStream2MatStream_U0_full_n : STD_LOGIC;
    signal start_for_AxiStream2MatStream_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_AxiStream2MatStream_U0_empty_n : STD_LOGIC;
    signal addrbound22_U0_start_full_n : STD_LOGIC;
    signal addrbound22_U0_start_write : STD_LOGIC;
    signal Axi2Mat_Block_split15_proc_U0_start_full_n : STD_LOGIC;
    signal Axi2Mat_Block_split15_proc_U0_start_write : STD_LOGIC;
    signal Axi2AxiStream_U0_start_full_n : STD_LOGIC;
    signal Axi2AxiStream_U0_start_write : STD_LOGIC;
    signal AxiStream2MatStream_U0_start_full_n : STD_LOGIC;
    signal AxiStream2MatStream_U0_start_write : STD_LOGIC;

    component pyr_dense_optical_flow_accel_Axi2Mat_entry6 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        din : IN STD_LOGIC_VECTOR (63 downto 0);
        rows : IN STD_LOGIC_VECTOR (31 downto 0);
        cols : IN STD_LOGIC_VECTOR (31 downto 0);
        din_out_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        din_out_full_n : IN STD_LOGIC;
        din_out_write : OUT STD_LOGIC;
        rows_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        rows_out_full_n : IN STD_LOGIC;
        rows_out_write : OUT STD_LOGIC;
        cols_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        cols_out_full_n : IN STD_LOGIC;
        cols_out_write : OUT STD_LOGIC );
    end component;


    component pyr_dense_optical_flow_accel_Axi2Mat_entry42 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        din_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        din_empty_n : IN STD_LOGIC;
        din_read : OUT STD_LOGIC;
        rows_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        rows_empty_n : IN STD_LOGIC;
        rows_read : OUT STD_LOGIC;
        cols_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        cols_empty_n : IN STD_LOGIC;
        cols_read : OUT STD_LOGIC;
        din_out_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        din_out_full_n : IN STD_LOGIC;
        din_out_write : OUT STD_LOGIC;
        rows_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        rows_out_full_n : IN STD_LOGIC;
        rows_out_write : OUT STD_LOGIC;
        cols_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        cols_out_full_n : IN STD_LOGIC;
        cols_out_write : OUT STD_LOGIC );
    end component;


    component pyr_dense_optical_flow_accel_last_blk_pxl_width21 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        ret_out_din : OUT STD_LOGIC_VECTOR (5 downto 0);
        ret_out_full_n : IN STD_LOGIC;
        ret_out_write : OUT STD_LOGIC );
    end component;


    component pyr_dense_optical_flow_accel_addrbound22 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        return_r : OUT STD_LOGIC_VECTOR (21 downto 0);
        return_r_ap_vld : OUT STD_LOGIC;
        rows_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        rows_empty_n : IN STD_LOGIC;
        rows_read : OUT STD_LOGIC;
        cols_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        cols_empty_n : IN STD_LOGIC;
        cols_read : OUT STD_LOGIC;
        rows_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        rows_out_full_n : IN STD_LOGIC;
        rows_out_write : OUT STD_LOGIC;
        cols_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        cols_out_full_n : IN STD_LOGIC;
        cols_out_write : OUT STD_LOGIC );
    end component;


    component pyr_dense_optical_flow_accel_Axi2Mat_Block_split15_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        axibound_V_2 : IN STD_LOGIC_VECTOR (21 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component pyr_dense_optical_flow_accel_Axi2AxiStream IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem3_AWVALID : OUT STD_LOGIC;
        m_axi_gmem3_AWREADY : IN STD_LOGIC;
        m_axi_gmem3_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem3_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem3_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem3_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem3_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem3_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem3_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_WVALID : OUT STD_LOGIC;
        m_axi_gmem3_WREADY : IN STD_LOGIC;
        m_axi_gmem3_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem3_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_WLAST : OUT STD_LOGIC;
        m_axi_gmem3_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_ARVALID : OUT STD_LOGIC;
        m_axi_gmem3_ARREADY : IN STD_LOGIC;
        m_axi_gmem3_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem3_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem3_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem3_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem3_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem3_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem3_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_RVALID : IN STD_LOGIC;
        m_axi_gmem3_RREADY : OUT STD_LOGIC;
        m_axi_gmem3_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem3_RLAST : IN STD_LOGIC;
        m_axi_gmem3_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem3_BVALID : IN STD_LOGIC;
        m_axi_gmem3_BREADY : OUT STD_LOGIC;
        m_axi_gmem3_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem3_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        ldata1_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        ldata1_full_n : IN STD_LOGIC;
        ldata1_write : OUT STD_LOGIC;
        din_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        din_empty_n : IN STD_LOGIC;
        din_read : OUT STD_LOGIC;
        addrbound_V_read : IN STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component pyr_dense_optical_flow_accel_AxiStream2MatStream IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ldata1_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        ldata1_empty_n : IN STD_LOGIC;
        ldata1_read : OUT STD_LOGIC;
        streamFlowin_mat_436_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        streamFlowin_mat_436_full_n : IN STD_LOGIC;
        streamFlowin_mat_436_write : OUT STD_LOGIC;
        rows_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        rows_empty_n : IN STD_LOGIC;
        rows_read : OUT STD_LOGIC;
        cols_bound_per_npc_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        cols_bound_per_npc_empty_n : IN STD_LOGIC;
        cols_bound_per_npc_read : OUT STD_LOGIC;
        last_blk_width_dout : IN STD_LOGIC_VECTOR (5 downto 0);
        last_blk_width_empty_n : IN STD_LOGIC;
        last_blk_width_read : OUT STD_LOGIC );
    end component;


    component pyr_dense_optical_flow_accel_fifo_w64_d2_S_x IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (63 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (63 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component pyr_dense_optical_flow_accel_fifo_w32_d2_S_x IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component pyr_dense_optical_flow_accel_fifo_w64_d4_S_x IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (63 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (63 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component pyr_dense_optical_flow_accel_fifo_w6_d6_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (5 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (5 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component pyr_dense_optical_flow_accel_fifo_w22_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (21 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (21 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component pyr_dense_optical_flow_accel_fifo_w32_d4_S_x IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component pyr_dense_optical_flow_accel_start_for_Axi2Mat_entry42_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component pyr_dense_optical_flow_accel_start_for_addrbound22_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component pyr_dense_optical_flow_accel_start_for_AxiStream2MatStream_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    Axi2Mat_entry6_U0 : component pyr_dense_optical_flow_accel_Axi2Mat_entry6
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => Axi2Mat_entry6_U0_ap_start,
        start_full_n => start_for_Axi2Mat_entry42_U0_full_n,
        ap_done => Axi2Mat_entry6_U0_ap_done,
        ap_continue => Axi2Mat_entry6_U0_ap_continue,
        ap_idle => Axi2Mat_entry6_U0_ap_idle,
        ap_ready => Axi2Mat_entry6_U0_ap_ready,
        start_out => Axi2Mat_entry6_U0_start_out,
        start_write => Axi2Mat_entry6_U0_start_write,
        din => din,
        rows => rows,
        cols => cols,
        din_out_din => Axi2Mat_entry6_U0_din_out_din,
        din_out_full_n => din_c1_full_n,
        din_out_write => Axi2Mat_entry6_U0_din_out_write,
        rows_out_din => Axi2Mat_entry6_U0_rows_out_din,
        rows_out_full_n => rows_c2_full_n,
        rows_out_write => Axi2Mat_entry6_U0_rows_out_write,
        cols_out_din => Axi2Mat_entry6_U0_cols_out_din,
        cols_out_full_n => cols_c3_full_n,
        cols_out_write => Axi2Mat_entry6_U0_cols_out_write);

    Axi2Mat_entry42_U0 : component pyr_dense_optical_flow_accel_Axi2Mat_entry42
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => Axi2Mat_entry42_U0_ap_start,
        start_full_n => start_for_addrbound22_U0_full_n,
        ap_done => Axi2Mat_entry42_U0_ap_done,
        ap_continue => Axi2Mat_entry42_U0_ap_continue,
        ap_idle => Axi2Mat_entry42_U0_ap_idle,
        ap_ready => Axi2Mat_entry42_U0_ap_ready,
        start_out => Axi2Mat_entry42_U0_start_out,
        start_write => Axi2Mat_entry42_U0_start_write,
        din_dout => din_c1_dout,
        din_empty_n => din_c1_empty_n,
        din_read => Axi2Mat_entry42_U0_din_read,
        rows_dout => rows_c2_dout,
        rows_empty_n => rows_c2_empty_n,
        rows_read => Axi2Mat_entry42_U0_rows_read,
        cols_dout => cols_c3_dout,
        cols_empty_n => cols_c3_empty_n,
        cols_read => Axi2Mat_entry42_U0_cols_read,
        din_out_din => Axi2Mat_entry42_U0_din_out_din,
        din_out_full_n => din_c_full_n,
        din_out_write => Axi2Mat_entry42_U0_din_out_write,
        rows_out_din => Axi2Mat_entry42_U0_rows_out_din,
        rows_out_full_n => rows_c_full_n,
        rows_out_write => Axi2Mat_entry42_U0_rows_out_write,
        cols_out_din => Axi2Mat_entry42_U0_cols_out_din,
        cols_out_full_n => cols_c_full_n,
        cols_out_write => Axi2Mat_entry42_U0_cols_out_write);

    last_blk_pxl_width21_U0 : component pyr_dense_optical_flow_accel_last_blk_pxl_width21
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => last_blk_pxl_width21_U0_ap_start,
        start_full_n => start_for_AxiStream2MatStream_U0_full_n,
        ap_done => last_blk_pxl_width21_U0_ap_done,
        ap_continue => last_blk_pxl_width21_U0_ap_continue,
        ap_idle => last_blk_pxl_width21_U0_ap_idle,
        ap_ready => last_blk_pxl_width21_U0_ap_ready,
        start_out => last_blk_pxl_width21_U0_start_out,
        start_write => last_blk_pxl_width21_U0_start_write,
        ret_out_din => last_blk_pxl_width21_U0_ret_out_din,
        ret_out_full_n => last_blk_width_c_full_n,
        ret_out_write => last_blk_pxl_width21_U0_ret_out_write);

    addrbound22_U0 : component pyr_dense_optical_flow_accel_addrbound22
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => addrbound22_U0_ap_start,
        ap_done => addrbound22_U0_ap_done,
        ap_continue => addrbound22_U0_ap_continue,
        ap_idle => addrbound22_U0_ap_idle,
        ap_ready => addrbound22_U0_ap_ready,
        return_r => addrbound22_U0_return_r,
        return_r_ap_vld => addrbound22_U0_return_r_ap_vld,
        rows_dout => rows_c_dout,
        rows_empty_n => rows_c_empty_n,
        rows_read => addrbound22_U0_rows_read,
        cols_dout => cols_c_dout,
        cols_empty_n => cols_c_empty_n,
        cols_read => addrbound22_U0_cols_read,
        rows_out_din => addrbound22_U0_rows_out_din,
        rows_out_full_n => rows_c13_full_n,
        rows_out_write => addrbound22_U0_rows_out_write,
        cols_out_din => addrbound22_U0_cols_out_din,
        cols_out_full_n => cols_c14_full_n,
        cols_out_write => addrbound22_U0_cols_out_write);

    Axi2Mat_Block_split15_proc_U0 : component pyr_dense_optical_flow_accel_Axi2Mat_Block_split15_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => Axi2Mat_Block_split15_proc_U0_ap_start,
        ap_done => Axi2Mat_Block_split15_proc_U0_ap_done,
        ap_continue => Axi2Mat_Block_split15_proc_U0_ap_continue,
        ap_idle => Axi2Mat_Block_split15_proc_U0_ap_idle,
        ap_ready => Axi2Mat_Block_split15_proc_U0_ap_ready,
        axibound_V_2 => p_channel_dout,
        ap_return => Axi2Mat_Block_split15_proc_U0_ap_return);

    Axi2AxiStream_U0 : component pyr_dense_optical_flow_accel_Axi2AxiStream
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => Axi2AxiStream_U0_ap_start,
        ap_done => Axi2AxiStream_U0_ap_done,
        ap_continue => Axi2AxiStream_U0_ap_continue,
        ap_idle => Axi2AxiStream_U0_ap_idle,
        ap_ready => Axi2AxiStream_U0_ap_ready,
        m_axi_gmem3_AWVALID => Axi2AxiStream_U0_m_axi_gmem3_AWVALID,
        m_axi_gmem3_AWREADY => ap_const_logic_0,
        m_axi_gmem3_AWADDR => Axi2AxiStream_U0_m_axi_gmem3_AWADDR,
        m_axi_gmem3_AWID => Axi2AxiStream_U0_m_axi_gmem3_AWID,
        m_axi_gmem3_AWLEN => Axi2AxiStream_U0_m_axi_gmem3_AWLEN,
        m_axi_gmem3_AWSIZE => Axi2AxiStream_U0_m_axi_gmem3_AWSIZE,
        m_axi_gmem3_AWBURST => Axi2AxiStream_U0_m_axi_gmem3_AWBURST,
        m_axi_gmem3_AWLOCK => Axi2AxiStream_U0_m_axi_gmem3_AWLOCK,
        m_axi_gmem3_AWCACHE => Axi2AxiStream_U0_m_axi_gmem3_AWCACHE,
        m_axi_gmem3_AWPROT => Axi2AxiStream_U0_m_axi_gmem3_AWPROT,
        m_axi_gmem3_AWQOS => Axi2AxiStream_U0_m_axi_gmem3_AWQOS,
        m_axi_gmem3_AWREGION => Axi2AxiStream_U0_m_axi_gmem3_AWREGION,
        m_axi_gmem3_AWUSER => Axi2AxiStream_U0_m_axi_gmem3_AWUSER,
        m_axi_gmem3_WVALID => Axi2AxiStream_U0_m_axi_gmem3_WVALID,
        m_axi_gmem3_WREADY => ap_const_logic_0,
        m_axi_gmem3_WDATA => Axi2AxiStream_U0_m_axi_gmem3_WDATA,
        m_axi_gmem3_WSTRB => Axi2AxiStream_U0_m_axi_gmem3_WSTRB,
        m_axi_gmem3_WLAST => Axi2AxiStream_U0_m_axi_gmem3_WLAST,
        m_axi_gmem3_WID => Axi2AxiStream_U0_m_axi_gmem3_WID,
        m_axi_gmem3_WUSER => Axi2AxiStream_U0_m_axi_gmem3_WUSER,
        m_axi_gmem3_ARVALID => Axi2AxiStream_U0_m_axi_gmem3_ARVALID,
        m_axi_gmem3_ARREADY => m_axi_gmem3_ARREADY,
        m_axi_gmem3_ARADDR => Axi2AxiStream_U0_m_axi_gmem3_ARADDR,
        m_axi_gmem3_ARID => Axi2AxiStream_U0_m_axi_gmem3_ARID,
        m_axi_gmem3_ARLEN => Axi2AxiStream_U0_m_axi_gmem3_ARLEN,
        m_axi_gmem3_ARSIZE => Axi2AxiStream_U0_m_axi_gmem3_ARSIZE,
        m_axi_gmem3_ARBURST => Axi2AxiStream_U0_m_axi_gmem3_ARBURST,
        m_axi_gmem3_ARLOCK => Axi2AxiStream_U0_m_axi_gmem3_ARLOCK,
        m_axi_gmem3_ARCACHE => Axi2AxiStream_U0_m_axi_gmem3_ARCACHE,
        m_axi_gmem3_ARPROT => Axi2AxiStream_U0_m_axi_gmem3_ARPROT,
        m_axi_gmem3_ARQOS => Axi2AxiStream_U0_m_axi_gmem3_ARQOS,
        m_axi_gmem3_ARREGION => Axi2AxiStream_U0_m_axi_gmem3_ARREGION,
        m_axi_gmem3_ARUSER => Axi2AxiStream_U0_m_axi_gmem3_ARUSER,
        m_axi_gmem3_RVALID => m_axi_gmem3_RVALID,
        m_axi_gmem3_RREADY => Axi2AxiStream_U0_m_axi_gmem3_RREADY,
        m_axi_gmem3_RDATA => m_axi_gmem3_RDATA,
        m_axi_gmem3_RLAST => m_axi_gmem3_RLAST,
        m_axi_gmem3_RID => m_axi_gmem3_RID,
        m_axi_gmem3_RUSER => m_axi_gmem3_RUSER,
        m_axi_gmem3_RRESP => m_axi_gmem3_RRESP,
        m_axi_gmem3_BVALID => ap_const_logic_0,
        m_axi_gmem3_BREADY => Axi2AxiStream_U0_m_axi_gmem3_BREADY,
        m_axi_gmem3_BRESP => ap_const_lv2_0,
        m_axi_gmem3_BID => ap_const_lv1_0,
        m_axi_gmem3_BUSER => ap_const_lv1_0,
        ldata1_din => Axi2AxiStream_U0_ldata1_din,
        ldata1_full_n => ldata_full_n,
        ldata1_write => Axi2AxiStream_U0_ldata1_write,
        din_dout => din_c_dout,
        din_empty_n => din_c_empty_n,
        din_read => Axi2AxiStream_U0_din_read,
        addrbound_V_read => axibound_V_dout);

    AxiStream2MatStream_U0 : component pyr_dense_optical_flow_accel_AxiStream2MatStream
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => AxiStream2MatStream_U0_ap_start,
        ap_done => AxiStream2MatStream_U0_ap_done,
        ap_continue => AxiStream2MatStream_U0_ap_continue,
        ap_idle => AxiStream2MatStream_U0_ap_idle,
        ap_ready => AxiStream2MatStream_U0_ap_ready,
        ldata1_dout => ldata_dout,
        ldata1_empty_n => ldata_empty_n,
        ldata1_read => AxiStream2MatStream_U0_ldata1_read,
        streamFlowin_mat_436_din => AxiStream2MatStream_U0_streamFlowin_mat_436_din,
        streamFlowin_mat_436_full_n => streamFlowin_mat_436_full_n,
        streamFlowin_mat_436_write => AxiStream2MatStream_U0_streamFlowin_mat_436_write,
        rows_dout => rows_c13_dout,
        rows_empty_n => rows_c13_empty_n,
        rows_read => AxiStream2MatStream_U0_rows_read,
        cols_bound_per_npc_dout => cols_c14_dout,
        cols_bound_per_npc_empty_n => cols_c14_empty_n,
        cols_bound_per_npc_read => AxiStream2MatStream_U0_cols_bound_per_npc_read,
        last_blk_width_dout => last_blk_width_c_dout,
        last_blk_width_empty_n => last_blk_width_c_empty_n,
        last_blk_width_read => AxiStream2MatStream_U0_last_blk_width_read);

    din_c1_U : component pyr_dense_optical_flow_accel_fifo_w64_d2_S_x
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Axi2Mat_entry6_U0_din_out_din,
        if_full_n => din_c1_full_n,
        if_write => Axi2Mat_entry6_U0_din_out_write,
        if_dout => din_c1_dout,
        if_empty_n => din_c1_empty_n,
        if_read => Axi2Mat_entry42_U0_din_read);

    rows_c2_U : component pyr_dense_optical_flow_accel_fifo_w32_d2_S_x
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Axi2Mat_entry6_U0_rows_out_din,
        if_full_n => rows_c2_full_n,
        if_write => Axi2Mat_entry6_U0_rows_out_write,
        if_dout => rows_c2_dout,
        if_empty_n => rows_c2_empty_n,
        if_read => Axi2Mat_entry42_U0_rows_read);

    cols_c3_U : component pyr_dense_optical_flow_accel_fifo_w32_d2_S_x
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Axi2Mat_entry6_U0_cols_out_din,
        if_full_n => cols_c3_full_n,
        if_write => Axi2Mat_entry6_U0_cols_out_write,
        if_dout => cols_c3_dout,
        if_empty_n => cols_c3_empty_n,
        if_read => Axi2Mat_entry42_U0_cols_read);

    din_c_U : component pyr_dense_optical_flow_accel_fifo_w64_d4_S_x
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Axi2Mat_entry42_U0_din_out_din,
        if_full_n => din_c_full_n,
        if_write => Axi2Mat_entry42_U0_din_out_write,
        if_dout => din_c_dout,
        if_empty_n => din_c_empty_n,
        if_read => Axi2AxiStream_U0_din_read);

    rows_c_U : component pyr_dense_optical_flow_accel_fifo_w32_d2_S_x
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Axi2Mat_entry42_U0_rows_out_din,
        if_full_n => rows_c_full_n,
        if_write => Axi2Mat_entry42_U0_rows_out_write,
        if_dout => rows_c_dout,
        if_empty_n => rows_c_empty_n,
        if_read => addrbound22_U0_rows_read);

    cols_c_U : component pyr_dense_optical_flow_accel_fifo_w32_d2_S_x
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Axi2Mat_entry42_U0_cols_out_din,
        if_full_n => cols_c_full_n,
        if_write => Axi2Mat_entry42_U0_cols_out_write,
        if_dout => cols_c_dout,
        if_empty_n => cols_c_empty_n,
        if_read => addrbound22_U0_cols_read);

    last_blk_width_c_U : component pyr_dense_optical_flow_accel_fifo_w6_d6_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => last_blk_pxl_width21_U0_ret_out_din,
        if_full_n => last_blk_width_c_full_n,
        if_write => last_blk_pxl_width21_U0_ret_out_write,
        if_dout => last_blk_width_c_dout,
        if_empty_n => last_blk_width_c_empty_n,
        if_read => AxiStream2MatStream_U0_last_blk_width_read);

    p_channel_U : component pyr_dense_optical_flow_accel_fifo_w22_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => addrbound22_U0_return_r,
        if_full_n => p_channel_full_n,
        if_write => addrbound22_U0_ap_done,
        if_dout => p_channel_dout,
        if_empty_n => p_channel_empty_n,
        if_read => Axi2Mat_Block_split15_proc_U0_ap_ready);

    rows_c13_U : component pyr_dense_optical_flow_accel_fifo_w32_d4_S_x
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => addrbound22_U0_rows_out_din,
        if_full_n => rows_c13_full_n,
        if_write => addrbound22_U0_rows_out_write,
        if_dout => rows_c13_dout,
        if_empty_n => rows_c13_empty_n,
        if_read => AxiStream2MatStream_U0_rows_read);

    cols_c14_U : component pyr_dense_optical_flow_accel_fifo_w32_d4_S_x
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => addrbound22_U0_cols_out_din,
        if_full_n => cols_c14_full_n,
        if_write => addrbound22_U0_cols_out_write,
        if_dout => cols_c14_dout,
        if_empty_n => cols_c14_empty_n,
        if_read => AxiStream2MatStream_U0_cols_bound_per_npc_read);

    axibound_V_U : component pyr_dense_optical_flow_accel_fifo_w22_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Axi2Mat_Block_split15_proc_U0_ap_return,
        if_full_n => axibound_V_full_n,
        if_write => Axi2Mat_Block_split15_proc_U0_ap_done,
        if_dout => axibound_V_dout,
        if_empty_n => axibound_V_empty_n,
        if_read => Axi2AxiStream_U0_ap_ready);

    ldata_U : component pyr_dense_optical_flow_accel_fifo_w32_d2_S_x
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Axi2AxiStream_U0_ldata1_din,
        if_full_n => ldata_full_n,
        if_write => Axi2AxiStream_U0_ldata1_write,
        if_dout => ldata_dout,
        if_empty_n => ldata_empty_n,
        if_read => AxiStream2MatStream_U0_ldata1_read);

    start_for_Axi2Mat_entry42_U0_U : component pyr_dense_optical_flow_accel_start_for_Axi2Mat_entry42_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Axi2Mat_entry42_U0_din,
        if_full_n => start_for_Axi2Mat_entry42_U0_full_n,
        if_write => Axi2Mat_entry6_U0_start_write,
        if_dout => start_for_Axi2Mat_entry42_U0_dout,
        if_empty_n => start_for_Axi2Mat_entry42_U0_empty_n,
        if_read => Axi2Mat_entry42_U0_ap_ready);

    start_for_addrbound22_U0_U : component pyr_dense_optical_flow_accel_start_for_addrbound22_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_addrbound22_U0_din,
        if_full_n => start_for_addrbound22_U0_full_n,
        if_write => Axi2Mat_entry42_U0_start_write,
        if_dout => start_for_addrbound22_U0_dout,
        if_empty_n => start_for_addrbound22_U0_empty_n,
        if_read => addrbound22_U0_ap_ready);

    start_for_AxiStream2MatStream_U0_U : component pyr_dense_optical_flow_accel_start_for_AxiStream2MatStream_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_AxiStream2MatStream_U0_din,
        if_full_n => start_for_AxiStream2MatStream_U0_full_n,
        if_write => last_blk_pxl_width21_U0_start_write,
        if_dout => start_for_AxiStream2MatStream_U0_dout,
        if_empty_n => start_for_AxiStream2MatStream_U0_empty_n,
        if_read => AxiStream2MatStream_U0_ap_ready);





    ap_sync_reg_Axi2AxiStream_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_Axi2AxiStream_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_Axi2AxiStream_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_Axi2AxiStream_U0_ap_ready <= ap_sync_Axi2AxiStream_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_Axi2Mat_entry6_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_Axi2Mat_entry6_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_Axi2Mat_entry6_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_Axi2Mat_entry6_U0_ap_ready <= ap_sync_Axi2Mat_entry6_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_last_blk_pxl_width21_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_last_blk_pxl_width21_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_last_blk_pxl_width21_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_last_blk_pxl_width21_U0_ap_ready <= ap_sync_last_blk_pxl_width21_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    Axi2AxiStream_U0_ap_ready_count_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_0 = Axi2AxiStream_U0_ap_ready) and (ap_sync_ready = ap_const_logic_1))) then 
                Axi2AxiStream_U0_ap_ready_count <= std_logic_vector(unsigned(Axi2AxiStream_U0_ap_ready_count) - unsigned(ap_const_lv2_1));
            elsif (((ap_const_logic_1 = Axi2AxiStream_U0_ap_ready) and (ap_sync_ready = ap_const_logic_0))) then 
                Axi2AxiStream_U0_ap_ready_count <= std_logic_vector(unsigned(Axi2AxiStream_U0_ap_ready_count) + unsigned(ap_const_lv2_1));
            end if; 
        end if;
    end process;

    Axi2Mat_entry6_U0_ap_ready_count_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_0 = Axi2Mat_entry6_U0_ap_ready) and (ap_sync_ready = ap_const_logic_1))) then 
                Axi2Mat_entry6_U0_ap_ready_count <= std_logic_vector(unsigned(Axi2Mat_entry6_U0_ap_ready_count) - unsigned(ap_const_lv2_1));
            elsif (((ap_const_logic_1 = Axi2Mat_entry6_U0_ap_ready) and (ap_sync_ready = ap_const_logic_0))) then 
                Axi2Mat_entry6_U0_ap_ready_count <= std_logic_vector(unsigned(Axi2Mat_entry6_U0_ap_ready_count) + unsigned(ap_const_lv2_1));
            end if; 
        end if;
    end process;

    last_blk_pxl_width21_U0_ap_ready_count_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_sync_ready = ap_const_logic_1) and (last_blk_pxl_width21_U0_ap_ready = ap_const_logic_0))) then 
                last_blk_pxl_width21_U0_ap_ready_count <= std_logic_vector(unsigned(last_blk_pxl_width21_U0_ap_ready_count) - unsigned(ap_const_lv2_1));
            elsif (((ap_sync_ready = ap_const_logic_0) and (last_blk_pxl_width21_U0_ap_ready = ap_const_logic_1))) then 
                last_blk_pxl_width21_U0_ap_ready_count <= std_logic_vector(unsigned(last_blk_pxl_width21_U0_ap_ready_count) + unsigned(ap_const_lv2_1));
            end if; 
        end if;
    end process;
    Axi2AxiStream_U0_ap_continue <= ap_const_logic_1;
    Axi2AxiStream_U0_ap_start <= ((ap_sync_reg_Axi2AxiStream_U0_ap_ready xor ap_const_logic_1) and axibound_V_empty_n and ap_start);
    Axi2AxiStream_U0_start_full_n <= ap_const_logic_1;
    Axi2AxiStream_U0_start_write <= ap_const_logic_0;
    Axi2Mat_Block_split15_proc_U0_ap_continue <= axibound_V_full_n;
    Axi2Mat_Block_split15_proc_U0_ap_start <= p_channel_empty_n;
    Axi2Mat_Block_split15_proc_U0_start_full_n <= ap_const_logic_1;
    Axi2Mat_Block_split15_proc_U0_start_write <= ap_const_logic_0;
    Axi2Mat_entry42_U0_ap_continue <= ap_const_logic_1;
    Axi2Mat_entry42_U0_ap_start <= start_for_Axi2Mat_entry42_U0_empty_n;
    Axi2Mat_entry6_U0_ap_continue <= ap_const_logic_1;
    Axi2Mat_entry6_U0_ap_start <= ((ap_sync_reg_Axi2Mat_entry6_U0_ap_ready xor ap_const_logic_1) and ap_start);
    AxiStream2MatStream_U0_ap_continue <= ap_continue;
    AxiStream2MatStream_U0_ap_start <= start_for_AxiStream2MatStream_U0_empty_n;
    AxiStream2MatStream_U0_start_full_n <= ap_const_logic_1;
    AxiStream2MatStream_U0_start_write <= ap_const_logic_0;
    addrbound22_U0_ap_continue <= p_channel_full_n;
    addrbound22_U0_ap_start <= start_for_addrbound22_U0_empty_n;
    addrbound22_U0_start_full_n <= ap_const_logic_1;
    addrbound22_U0_start_write <= ap_const_logic_0;
    ap_channel_done_axibound_V <= Axi2Mat_Block_split15_proc_U0_ap_done;
    ap_channel_done_p_channel <= addrbound22_U0_ap_done;
    ap_done <= AxiStream2MatStream_U0_ap_done;
    ap_idle <= (last_blk_pxl_width21_U0_ap_idle and (axibound_V_empty_n xor ap_const_logic_1) and (p_channel_empty_n xor ap_const_logic_1) and addrbound22_U0_ap_idle and AxiStream2MatStream_U0_ap_idle and Axi2Mat_entry6_U0_ap_idle and Axi2Mat_entry42_U0_ap_idle and Axi2Mat_Block_split15_proc_U0_ap_idle and Axi2AxiStream_U0_ap_idle);
    ap_ready <= ap_sync_ready;
    ap_sync_Axi2AxiStream_U0_ap_ready <= (ap_sync_reg_Axi2AxiStream_U0_ap_ready or Axi2AxiStream_U0_ap_ready);
    ap_sync_Axi2Mat_entry6_U0_ap_ready <= (ap_sync_reg_Axi2Mat_entry6_U0_ap_ready or Axi2Mat_entry6_U0_ap_ready);
    ap_sync_continue <= ap_continue;
    ap_sync_done <= AxiStream2MatStream_U0_ap_done;
    ap_sync_last_blk_pxl_width21_U0_ap_ready <= (last_blk_pxl_width21_U0_ap_ready or ap_sync_reg_last_blk_pxl_width21_U0_ap_ready);
    ap_sync_ready <= (ap_sync_last_blk_pxl_width21_U0_ap_ready and ap_sync_Axi2Mat_entry6_U0_ap_ready and ap_sync_Axi2AxiStream_U0_ap_ready);
    last_blk_pxl_width21_U0_ap_continue <= ap_const_logic_1;
    last_blk_pxl_width21_U0_ap_start <= ((ap_sync_reg_last_blk_pxl_width21_U0_ap_ready xor ap_const_logic_1) and ap_start);
    m_axi_gmem3_ARADDR <= Axi2AxiStream_U0_m_axi_gmem3_ARADDR;
    m_axi_gmem3_ARBURST <= Axi2AxiStream_U0_m_axi_gmem3_ARBURST;
    m_axi_gmem3_ARCACHE <= Axi2AxiStream_U0_m_axi_gmem3_ARCACHE;
    m_axi_gmem3_ARID <= Axi2AxiStream_U0_m_axi_gmem3_ARID;
    m_axi_gmem3_ARLEN <= Axi2AxiStream_U0_m_axi_gmem3_ARLEN;
    m_axi_gmem3_ARLOCK <= Axi2AxiStream_U0_m_axi_gmem3_ARLOCK;
    m_axi_gmem3_ARPROT <= Axi2AxiStream_U0_m_axi_gmem3_ARPROT;
    m_axi_gmem3_ARQOS <= Axi2AxiStream_U0_m_axi_gmem3_ARQOS;
    m_axi_gmem3_ARREGION <= Axi2AxiStream_U0_m_axi_gmem3_ARREGION;
    m_axi_gmem3_ARSIZE <= Axi2AxiStream_U0_m_axi_gmem3_ARSIZE;
    m_axi_gmem3_ARUSER <= Axi2AxiStream_U0_m_axi_gmem3_ARUSER;
    m_axi_gmem3_ARVALID <= Axi2AxiStream_U0_m_axi_gmem3_ARVALID;
    m_axi_gmem3_AWADDR <= ap_const_lv64_0;
    m_axi_gmem3_AWBURST <= ap_const_lv2_0;
    m_axi_gmem3_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem3_AWID <= ap_const_lv1_0;
    m_axi_gmem3_AWLEN <= ap_const_lv32_0;
    m_axi_gmem3_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem3_AWPROT <= ap_const_lv3_0;
    m_axi_gmem3_AWQOS <= ap_const_lv4_0;
    m_axi_gmem3_AWREGION <= ap_const_lv4_0;
    m_axi_gmem3_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem3_AWUSER <= ap_const_lv1_0;
    m_axi_gmem3_AWVALID <= ap_const_logic_0;
    m_axi_gmem3_BREADY <= ap_const_logic_0;
    m_axi_gmem3_RREADY <= Axi2AxiStream_U0_m_axi_gmem3_RREADY;
    m_axi_gmem3_WDATA <= ap_const_lv32_0;
    m_axi_gmem3_WID <= ap_const_lv1_0;
    m_axi_gmem3_WLAST <= ap_const_logic_0;
    m_axi_gmem3_WSTRB <= ap_const_lv4_0;
    m_axi_gmem3_WUSER <= ap_const_lv1_0;
    m_axi_gmem3_WVALID <= ap_const_logic_0;
    start_for_Axi2Mat_entry42_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_AxiStream2MatStream_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_addrbound22_U0_din <= (0=>ap_const_logic_1, others=>'-');
    streamFlowin_mat_436_din <= AxiStream2MatStream_U0_streamFlowin_mat_436_din;
    streamFlowin_mat_436_write <= AxiStream2MatStream_U0_streamFlowin_mat_436_write;
end behav;
