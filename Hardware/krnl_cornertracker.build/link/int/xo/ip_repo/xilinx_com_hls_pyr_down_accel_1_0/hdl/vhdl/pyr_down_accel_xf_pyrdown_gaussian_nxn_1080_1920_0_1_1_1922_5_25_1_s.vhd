-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity pyr_down_accel_xf_pyrdown_gaussian_nxn_1080_1920_0_1_1_1922_5_25_1_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_filter_in1_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_filter_in1_empty_n : IN STD_LOGIC;
    p_filter_in1_read : OUT STD_LOGIC;
    p_filter_out2_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_filter_out2_full_n : IN STD_LOGIC;
    p_filter_out2_write : OUT STD_LOGIC;
    img_height : IN STD_LOGIC_VECTOR (15 downto 0);
    img_width : IN STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of pyr_down_accel_xf_pyrdown_gaussian_nxn_1080_1920_0_1_1_1922_5_25_1_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (10 downto 0) := "00000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (10 downto 0) := "00000001000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (10 downto 0) := "00000010000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (10 downto 0) := "00000100000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (10 downto 0) := "00001000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (10 downto 0) := "00010000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (10 downto 0) := "00100000000";
    constant ap_ST_fsm_pp3_stage0 : STD_LOGIC_VECTOR (10 downto 0) := "01000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv13_2 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv17_2 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000010";
    constant ap_const_lv14_2 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000010";
    constant ap_const_lv17_1FFFF : STD_LOGIC_VECTOR (16 downto 0) := "11111111111111111";
    constant ap_const_lv18_4 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000100";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv18_1 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    constant ap_const_lv17_1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_const_lv18_3 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000011";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv15_80 : STD_LOGIC_VECTOR (14 downto 0) := "000000010000000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_filter_in1_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal ap_CS_fsm_pp3_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp3_stage0 : signal is "none";
    signal ap_enable_reg_pp3_iter1 : STD_LOGIC := '0';
    signal ap_block_pp3_stage0 : BOOLEAN;
    signal and_ln120_reg_2412 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_filter_out2_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp3_iter4 : STD_LOGIC := '0';
    signal icmp_ln886_reg_2425 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_reg_2425_pp3_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_52_reg_544 : STD_LOGIC_VECTOR (12 downto 0);
    signal empty_53_reg_556 : STD_LOGIC_VECTOR (12 downto 0);
    signal empty_56_reg_634 : STD_LOGIC_VECTOR (12 downto 0);
    signal empty_56_reg_634_pp3_iter1_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_block_state12_pp3_stage0_iter0 : BOOLEAN;
    signal ap_block_state13_pp3_stage0_iter1 : BOOLEAN;
    signal ap_block_state14_pp3_stage0_iter2 : BOOLEAN;
    signal ap_block_state15_pp3_stage0_iter3 : BOOLEAN;
    signal ap_block_state16_pp3_stage0_iter4 : BOOLEAN;
    signal ap_block_pp3_stage0_11001 : BOOLEAN;
    signal empty_fu_646_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_reg_2064 : STD_LOGIC_VECTOR (13 downto 0);
    signal row_ind_V_0_0_load_reg_2069 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal row_ind_V_1_0_load_reg_2074 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_ind_V_2_0_load_reg_2079 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_ind_V_3_0_load_reg_2086 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_ind_V_4_0_load_reg_2091 : STD_LOGIC_VECTOR (12 downto 0);
    signal init_row_ind_fu_671_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln538_fu_706_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal wide_trip_count_fu_709_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal wide_trip_count_reg_2110 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln882_1_fu_712_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal trunc_ln324_fu_717_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln324_reg_2119 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln324_1_fu_721_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln324_1_reg_2123 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln882_2_fu_728_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln882_2_reg_2129 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state5_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state6_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal add_ln695_fu_733_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln695_reg_2133 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal add_ln217_fu_748_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal icmp_ln882_3_fu_758_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln882_3_reg_2143 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal ap_block_state8_pp2_stage0_iter0 : BOOLEAN;
    signal ap_block_state9_pp2_stage0_iter1 : BOOLEAN;
    signal ap_block_pp2_stage0_11001 : BOOLEAN;
    signal add_ln695_1_fu_763_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal buf_0_V_addr_1_reg_2152 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_1_V_addr_1_reg_2158 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_i_i50_fu_813_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_i_i50_reg_2314 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal op2_assign_fu_819_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal op2_assign_reg_2319 : STD_LOGIC_VECTOR (13 downto 0);
    signal sub_i_fu_824_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_i_reg_2324 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln882_4_fu_838_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal cmp_i_i289_i_fu_843_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp_i_i289_i_reg_2334 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_55_fu_868_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal empty_55_reg_2339 : STD_LOGIC_VECTOR (2 downto 0);
    signal spec_select2101_fu_880_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal spec_select2101_reg_2344 : STD_LOGIC_VECTOR (0 downto 0);
    signal spec_select2117_fu_892_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal spec_select2117_reg_2349 : STD_LOGIC_VECTOR (0 downto 0);
    signal spec_select2133_fu_914_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal spec_select2133_reg_2354 : STD_LOGIC_VECTOR (0 downto 0);
    signal spec_select2149_fu_926_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal spec_select2149_reg_2359 : STD_LOGIC_VECTOR (0 downto 0);
    signal spec_select2165_fu_938_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal spec_select2165_reg_2364 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln324_2_fu_944_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln324_2_reg_2369 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln324_3_fu_948_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln324_3_reg_2374 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln324_4_fu_952_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln324_4_reg_2379 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln324_5_fu_956_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln324_5_reg_2384 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln324_6_fu_960_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln324_6_reg_2389 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln882_5_fu_972_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln882_5_reg_2394 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln882_5_reg_2394_pp3_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln882_5_reg_2394_pp3_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln695_20_fu_977_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln695_20_reg_2398 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_enable_reg_pp3_iter0 : STD_LOGIC := '0';
    signal icmp_ln882_6_fu_983_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln882_6_reg_2403 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln882_6_reg_2403_pp3_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln882_6_reg_2403_pp3_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln120_fu_988_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln324_7_fu_1008_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln324_7_reg_2416 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln324_7_reg_2416_pp3_iter1_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln324_7_reg_2416_pp3_iter2_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln886_fu_1022_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_reg_2425_pp3_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_reg_2425_pp3_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp_i_i_i_fu_1055_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp_i_i_i_reg_2454 : STD_LOGIC_VECTOR (0 downto 0);
    signal src_buf_V_2_1_load_reg_2473 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln695_4_fu_1451_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln695_4_reg_2478 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln695_10_fu_1545_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln695_10_reg_2484 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp29_fu_1555_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp29_reg_2489 : STD_LOGIC_VECTOR (10 downto 0);
    signal empty_58_fu_1597_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_58_reg_2494 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln695_15_fu_1633_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln695_15_reg_2499 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln695_2_fu_2015_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state5 : STD_LOGIC;
    signal ap_block_pp2_stage0_subdone : BOOLEAN;
    signal ap_condition_pp2_exit_iter0_state8 : STD_LOGIC;
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal ap_block_pp3_stage0_subdone : BOOLEAN;
    signal ap_condition_pp3_exit_iter0_state12 : STD_LOGIC;
    signal ap_enable_reg_pp3_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter3 : STD_LOGIC := '0';
    signal buf_0_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_0_V_ce0 : STD_LOGIC;
    signal buf_0_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_0_V_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_0_V_ce1 : STD_LOGIC;
    signal buf_0_V_we1 : STD_LOGIC;
    signal buf_0_V_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_1_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_1_V_ce0 : STD_LOGIC;
    signal buf_1_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_1_V_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_1_V_ce1 : STD_LOGIC;
    signal buf_1_V_we1 : STD_LOGIC;
    signal buf_1_V_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_2_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_2_V_ce0 : STD_LOGIC;
    signal buf_2_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_2_V_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_2_V_ce1 : STD_LOGIC;
    signal buf_2_V_we1 : STD_LOGIC;
    signal buf_2_V_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_3_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_3_V_ce0 : STD_LOGIC;
    signal buf_3_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_3_V_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_3_V_ce1 : STD_LOGIC;
    signal buf_3_V_we1 : STD_LOGIC;
    signal buf_3_V_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_4_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_4_V_ce0 : STD_LOGIC;
    signal buf_4_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_4_V_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_4_V_ce1 : STD_LOGIC;
    signal buf_4_V_we1 : STD_LOGIC;
    signal buf_4_V_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_row_ind_V_0_2_phi_fu_527_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal row_ind_V_0_2_reg_523 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln882_fu_665_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal init_buf_reg_534 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_mux_empty_52_phi_fu_548_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_ind_V_3_1_reg_567 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_ind_V_4_reg_610 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_ind_V_2_reg_577 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_ind_V_1_reg_588 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_ind_V_0_reg_599 : STD_LOGIC_VECTOR (12 downto 0);
    signal empty_54_reg_622 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_mux_empty_56_phi_fu_638_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln538_1_fu_739_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal conv_i85_fu_769_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp2_stage0 : BOOLEAN;
    signal zext_ln538_3_fu_1028_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln538_2_fu_1037_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln130_fu_1046_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal row_ind_V_0_0_fu_148 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln304_fu_677_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_ind_V_1_0_fu_152 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_ind_V_2_0_fu_156 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_ind_V_3_0_fu_160 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_ind_V_4_0_fu_164 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_Result_s_fu_188 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_0_0_1_fu_1761_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_0_0_fu_192 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_0_1_1_fu_1754_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_0_1_fu_196 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_0_4_2_fu_1747_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_0_2_fu_200 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_0_4_3_fu_1327_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_1_0_fu_204 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_1_0_2_fu_1740_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_1_0_1_fu_208 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_1_1_1_fu_1733_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_1_1_fu_212 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_1_4_2_fu_1726_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_1_2_fu_216 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_1_4_3_fu_1320_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_2_0_fu_220 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_2_0_2_fu_1719_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_2_0_1_fu_224 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_2_1_1_fu_1712_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_2_1_fu_228 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_2_4_2_fu_1705_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_2_2_fu_232 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_2_4_3_fu_1313_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_3_0_fu_236 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_3_0_2_fu_1698_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_3_0_1_fu_240 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_3_1_1_fu_1691_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_3_1_fu_244 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_3_4_2_fu_1684_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_3_2_fu_248 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_3_4_3_fu_1306_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_1_fu_252 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_4_0_1_fu_1768_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_4_0_fu_256 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_4_0_2_fu_1775_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_4_1_fu_260 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_4_0_3_fu_1782_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_4_2_fu_264 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_4_4_fu_1334_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp3_stage0_01001 : BOOLEAN;
    signal tmp_2_fu_794_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1_fu_778_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln882_fu_724_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln882_1_fu_754_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_i_i_i47_fu_810_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln882_3_fu_834_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln882_2_fu_830_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_i_i198_i_fu_853_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_i_i198_i_cast_fu_858_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sub_i181_i_fu_862_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal cmp_i_i224_i_fu_848_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_872_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp_i_i169_i_1_fu_886_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_fu_898_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_fu_908_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp_i_i169_i_3_fu_920_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp_i_i169_i_4_fu_932_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln882_5_fu_968_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln882_4_fu_964_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_3_fu_993_p7 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_14_fu_1012_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_4_fu_1121_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_5_fu_1136_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_6_fu_1158_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_fu_1173_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_8_fu_1195_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_9_fu_1210_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_s_fu_1232_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_10_fu_1247_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_11_fu_1269_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_12_fu_1284_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_3_4_fu_1262_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_2_4_fu_1225_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_1_4_fu_1188_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_0_4_fu_1151_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_57_fu_1299_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1501_fu_1357_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1501_1_fu_1361_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1501_fu_1369_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln695_1_fu_1379_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1501_2_fu_1365_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln695_6_fu_1383_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1501_3_fu_1375_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln695_3_fu_1389_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln695_3_fu_1393_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln_fu_1403_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1501_6_fu_1419_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1501_5_fu_1415_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1501_1_fu_1423_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln695_5_fu_1437_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1501_8_fu_1433_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln695_8_fu_1441_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1501_7_fu_1429_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln695_7_fu_1447_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal src_buf_V_0_3_load_cast_fu_1457_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln695_2_fu_1461_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln695_5_fu_1469_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln695_9_fu_1479_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln695_8_fu_1465_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln695_9_fu_1487_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln695_4_fu_1475_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln695_10_fu_1493_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln695_7_fu_1497_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln695_6_fu_1483_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln695_7_cast_fu_1503_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln695_16_fu_1515_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln695_15_fu_1511_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln695_18_fu_1525_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln695_11_fu_1507_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln695_23_fu_1531_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln695_19_fu_1535_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln695_13_fu_1519_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln695_24_fu_1541_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal src_buf_V_2_2_1_cast_fu_1551_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln695_fu_1399_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln695_13_fu_1565_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln695_12_fu_1561_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln695_11_fu_1569_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal src_buf_V_3_3_1_cast_fu_1583_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln695_26_fu_1579_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp30_fu_1587_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln695_14_fu_1575_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp30_cast_fu_1593_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln357_fu_1341_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln357_1_fu_1345_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln695_12_fu_1603_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln674_1_fu_1353_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln674_fu_1349_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln695_21_fu_1613_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln695_18_fu_1609_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln695_27_fu_1619_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln695_14_fu_1623_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln695_19_fu_1629_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1501_4_fu_1411_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln695_1_fu_1889_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln1_fu_1900_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln695_11_cast_fu_1911_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp29_cast_fu_1914_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp24_fu_1917_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp3_fu_1923_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_cast16_fu_1935_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_cast17_fu_1938_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp42_fu_1941_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp5_fu_1947_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln695_20_fu_1959_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln674_2_fu_1896_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln695_16_fu_1962_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal shl_ln785_cast_fu_1907_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln695_21_fu_1968_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln695_17_fu_1972_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln695_17_fu_1955_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln695_22_fu_1978_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln695_25_fu_1931_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln1350_2_fu_1988_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln1350_1_fu_1982_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln1350_fu_1994_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1350_fu_1998_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_idle_pp2 : STD_LOGIC;
    signal ap_enable_pp2 : STD_LOGIC;
    signal ap_idle_pp3 : STD_LOGIC;
    signal ap_enable_pp3 : STD_LOGIC;

    component pyr_down_accel_mux_53_8_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (7 downto 0);
        din4 : IN STD_LOGIC_VECTOR (7 downto 0);
        din5 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component pyr_down_accel_mux_53_13_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (12 downto 0);
        din1 : IN STD_LOGIC_VECTOR (12 downto 0);
        din2 : IN STD_LOGIC_VECTOR (12 downto 0);
        din3 : IN STD_LOGIC_VECTOR (12 downto 0);
        din4 : IN STD_LOGIC_VECTOR (12 downto 0);
        din5 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (12 downto 0) );
    end component;


    component pyr_down_accel_xf_pyrdown_gaussian_nxn_1080_1920_0_1_1_1922_5_25_1_s_buf_0_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    buf_0_V_U : component pyr_down_accel_xf_pyrdown_gaussian_nxn_1080_1920_0_1_1_1922_5_25_1_s_buf_0_V
    generic map (
        DataWidth => 8,
        AddressRange => 1922,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_0_V_address0,
        ce0 => buf_0_V_ce0,
        q0 => buf_0_V_q0,
        address1 => buf_0_V_address1,
        ce1 => buf_0_V_ce1,
        we1 => buf_0_V_we1,
        d1 => buf_0_V_d1);

    buf_1_V_U : component pyr_down_accel_xf_pyrdown_gaussian_nxn_1080_1920_0_1_1_1922_5_25_1_s_buf_0_V
    generic map (
        DataWidth => 8,
        AddressRange => 1922,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_1_V_address0,
        ce0 => buf_1_V_ce0,
        q0 => buf_1_V_q0,
        address1 => buf_1_V_address1,
        ce1 => buf_1_V_ce1,
        we1 => buf_1_V_we1,
        d1 => buf_1_V_d1);

    buf_2_V_U : component pyr_down_accel_xf_pyrdown_gaussian_nxn_1080_1920_0_1_1_1922_5_25_1_s_buf_0_V
    generic map (
        DataWidth => 8,
        AddressRange => 1922,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_2_V_address0,
        ce0 => buf_2_V_ce0,
        q0 => buf_2_V_q0,
        address1 => buf_2_V_address1,
        ce1 => buf_2_V_ce1,
        we1 => buf_2_V_we1,
        d1 => buf_2_V_d1);

    buf_3_V_U : component pyr_down_accel_xf_pyrdown_gaussian_nxn_1080_1920_0_1_1_1922_5_25_1_s_buf_0_V
    generic map (
        DataWidth => 8,
        AddressRange => 1922,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_3_V_address0,
        ce0 => buf_3_V_ce0,
        q0 => buf_3_V_q0,
        address1 => buf_3_V_address1,
        ce1 => buf_3_V_ce1,
        we1 => buf_3_V_we1,
        d1 => buf_3_V_d1);

    buf_4_V_U : component pyr_down_accel_xf_pyrdown_gaussian_nxn_1080_1920_0_1_1_1922_5_25_1_s_buf_0_V
    generic map (
        DataWidth => 8,
        AddressRange => 1922,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_4_V_address0,
        ce0 => buf_4_V_ce0,
        q0 => buf_4_V_q0,
        address1 => buf_4_V_address1,
        ce1 => buf_4_V_ce1,
        we1 => buf_4_V_we1,
        d1 => buf_4_V_d1);

    mux_53_8_1_1_U88 : component pyr_down_accel_mux_53_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din0 => buf_0_V_q0,
        din1 => buf_1_V_q0,
        din2 => buf_2_V_q0,
        din3 => buf_3_V_q0,
        din4 => buf_4_V_q0,
        din5 => trunc_ln324_1_reg_2123,
        dout => tmp_1_fu_778_p7);

    mux_53_8_1_1_U89 : component pyr_down_accel_mux_53_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din0 => tmp_1_fu_778_p7,
        din1 => buf_1_V_q0,
        din2 => buf_2_V_q0,
        din3 => buf_3_V_q0,
        din4 => buf_4_V_q0,
        din5 => trunc_ln324_1_reg_2123,
        dout => tmp_2_fu_794_p7);

    mux_53_13_1_1_U90 : component pyr_down_accel_mux_53_13_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 13,
        din1_WIDTH => 13,
        din2_WIDTH => 13,
        din3_WIDTH => 13,
        din4_WIDTH => 13,
        din5_WIDTH => 3,
        dout_WIDTH => 13)
    port map (
        din0 => row_ind_V_4_reg_610,
        din1 => row_ind_V_0_reg_599,
        din2 => row_ind_V_1_reg_588,
        din3 => row_ind_V_2_reg_577,
        din4 => row_ind_V_3_1_reg_567,
        din5 => empty_55_reg_2339,
        dout => tmp_3_fu_993_p7);

    mux_53_8_1_1_U91 : component pyr_down_accel_mux_53_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din0 => buf_0_V_q0,
        din1 => buf_1_V_q0,
        din2 => buf_2_V_q0,
        din3 => buf_3_V_q0,
        din4 => buf_4_V_q0,
        din5 => trunc_ln324_7_reg_2416_pp3_iter2_reg,
        dout => tmp_4_fu_1121_p7);

    mux_53_8_1_1_U92 : component pyr_down_accel_mux_53_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din0 => buf_0_V_q0,
        din1 => buf_1_V_q0,
        din2 => buf_2_V_q0,
        din3 => buf_3_V_q0,
        din4 => buf_4_V_q0,
        din5 => trunc_ln324_6_reg_2389,
        dout => tmp_5_fu_1136_p7);

    mux_53_8_1_1_U93 : component pyr_down_accel_mux_53_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din0 => buf_0_V_q0,
        din1 => buf_1_V_q0,
        din2 => buf_2_V_q0,
        din3 => buf_3_V_q0,
        din4 => buf_4_V_q0,
        din5 => trunc_ln324_7_reg_2416_pp3_iter2_reg,
        dout => tmp_6_fu_1158_p7);

    mux_53_8_1_1_U94 : component pyr_down_accel_mux_53_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din0 => buf_0_V_q0,
        din1 => buf_1_V_q0,
        din2 => buf_2_V_q0,
        din3 => buf_3_V_q0,
        din4 => buf_4_V_q0,
        din5 => trunc_ln324_5_reg_2384,
        dout => tmp_7_fu_1173_p7);

    mux_53_8_1_1_U95 : component pyr_down_accel_mux_53_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din0 => buf_0_V_q0,
        din1 => buf_1_V_q0,
        din2 => buf_2_V_q0,
        din3 => buf_3_V_q0,
        din4 => buf_4_V_q0,
        din5 => trunc_ln324_7_reg_2416_pp3_iter2_reg,
        dout => tmp_8_fu_1195_p7);

    mux_53_8_1_1_U96 : component pyr_down_accel_mux_53_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din0 => buf_0_V_q0,
        din1 => buf_1_V_q0,
        din2 => buf_2_V_q0,
        din3 => buf_3_V_q0,
        din4 => buf_4_V_q0,
        din5 => trunc_ln324_4_reg_2379,
        dout => tmp_9_fu_1210_p7);

    mux_53_8_1_1_U97 : component pyr_down_accel_mux_53_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din0 => buf_0_V_q0,
        din1 => buf_1_V_q0,
        din2 => buf_2_V_q0,
        din3 => buf_3_V_q0,
        din4 => buf_4_V_q0,
        din5 => trunc_ln324_7_reg_2416_pp3_iter2_reg,
        dout => tmp_s_fu_1232_p7);

    mux_53_8_1_1_U98 : component pyr_down_accel_mux_53_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din0 => buf_0_V_q0,
        din1 => buf_1_V_q0,
        din2 => buf_2_V_q0,
        din3 => buf_3_V_q0,
        din4 => buf_4_V_q0,
        din5 => trunc_ln324_3_reg_2374,
        dout => tmp_10_fu_1247_p7);

    mux_53_8_1_1_U99 : component pyr_down_accel_mux_53_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din0 => buf_0_V_q0,
        din1 => buf_1_V_q0,
        din2 => buf_2_V_q0,
        din3 => buf_3_V_q0,
        din4 => buf_4_V_q0,
        din5 => trunc_ln324_7_reg_2416_pp3_iter2_reg,
        dout => tmp_11_fu_1269_p7);

    mux_53_8_1_1_U100 : component pyr_down_accel_mux_53_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din0 => buf_0_V_q0,
        din1 => buf_1_V_q0,
        din2 => buf_2_V_q0,
        din3 => buf_3_V_q0,
        din4 => buf_4_V_q0,
        din5 => trunc_ln324_2_reg_2369,
        dout => tmp_12_fu_1284_p7);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state5))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln882_1_fu_712_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state5))) then 
                    ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state5);
                elsif ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln882_1_fu_712_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp2_exit_iter0_state8) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln882_1_fu_712_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp2_exit_iter0_state8))) then 
                    ap_enable_reg_pp2_iter1 <= (ap_const_logic_1 xor ap_condition_pp2_exit_iter0_state8);
                elsif ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln882_1_fu_712_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_condition_pp3_exit_iter0_state12))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
                elsif (((icmp_ln882_4_fu_838_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp3_exit_iter0_state12)) then 
                        ap_enable_reg_pp3_iter1 <= (ap_const_logic_1 xor ap_condition_pp3_exit_iter0_state12);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter4 <= ap_enable_reg_pp3_iter3;
                elsif (((icmp_ln882_4_fu_838_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                    ap_enable_reg_pp3_iter4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    empty_52_reg_544_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln882_2_reg_2129 = ap_const_lv1_1))) then 
                empty_52_reg_544 <= add_ln695_reg_2133;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln882_1_fu_712_p2 = ap_const_lv1_1))) then 
                empty_52_reg_544 <= ap_const_lv13_0;
            end if; 
        end if;
    end process;

    empty_53_reg_556_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln882_1_fu_712_p2 = ap_const_lv1_0))) then 
                empty_53_reg_556 <= ap_const_lv13_0;
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (icmp_ln882_3_fu_758_p2 = ap_const_lv1_1))) then 
                empty_53_reg_556 <= add_ln695_1_fu_763_p2;
            end if; 
        end if;
    end process;

    empty_54_reg_622_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                empty_54_reg_622 <= add_ln695_2_fu_2015_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                empty_54_reg_622 <= ap_const_lv13_2;
            end if; 
        end if;
    end process;

    empty_56_reg_634_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (icmp_ln882_5_reg_2394 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
                empty_56_reg_634 <= add_ln695_20_reg_2398;
            elsif (((icmp_ln882_4_fu_838_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                empty_56_reg_634 <= ap_const_lv13_0;
            end if; 
        end if;
    end process;

    init_buf_reg_534_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                init_buf_reg_534 <= zext_ln538_fu_706_p1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                init_buf_reg_534 <= add_ln217_fu_748_p2;
            end if; 
        end if;
    end process;

    row_ind_V_0_2_reg_523_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln882_fu_665_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                row_ind_V_0_2_reg_523 <= init_row_ind_fu_671_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                row_ind_V_0_2_reg_523 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    row_ind_V_0_reg_599_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                row_ind_V_0_reg_599 <= row_ind_V_1_reg_588;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                row_ind_V_0_reg_599 <= row_ind_V_1_0_load_reg_2074;
            end if; 
        end if;
    end process;

    row_ind_V_1_reg_588_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                row_ind_V_1_reg_588 <= row_ind_V_2_reg_577;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                row_ind_V_1_reg_588 <= row_ind_V_2_0_load_reg_2079;
            end if; 
        end if;
    end process;

    row_ind_V_2_reg_577_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                row_ind_V_2_reg_577 <= row_ind_V_3_1_reg_567;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                row_ind_V_2_reg_577 <= row_ind_V_3_0_load_reg_2086;
            end if; 
        end if;
    end process;

    row_ind_V_3_1_reg_567_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                row_ind_V_3_1_reg_567 <= row_ind_V_4_reg_610;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                row_ind_V_3_1_reg_567 <= row_ind_V_4_0_load_reg_2091;
            end if; 
        end if;
    end process;

    row_ind_V_4_reg_610_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                row_ind_V_4_reg_610 <= row_ind_V_0_reg_599;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                row_ind_V_4_reg_610 <= row_ind_V_0_0_load_reg_2069;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                add_i_i50_reg_2314 <= add_i_i50_fu_813_p2;
                op2_assign_reg_2319 <= op2_assign_fu_819_p2;
                sub_i_reg_2324 <= sub_i_fu_824_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp3_stage0_11001)) then
                add_ln695_10_reg_2484 <= add_ln695_10_fu_1545_p2;
                add_ln695_15_reg_2499 <= add_ln695_15_fu_1633_p2;
                add_ln695_4_reg_2478 <= add_ln695_4_fu_1451_p2;
                empty_58_reg_2494 <= empty_58_fu_1597_p2;
                icmp_ln882_5_reg_2394_pp3_iter2_reg <= icmp_ln882_5_reg_2394_pp3_iter1_reg;
                icmp_ln882_6_reg_2403_pp3_iter2_reg <= icmp_ln882_6_reg_2403_pp3_iter1_reg;
                icmp_ln886_reg_2425_pp3_iter2_reg <= icmp_ln886_reg_2425_pp3_iter1_reg;
                icmp_ln886_reg_2425_pp3_iter3_reg <= icmp_ln886_reg_2425_pp3_iter2_reg;
                src_buf_V_2_1_load_reg_2473 <= src_buf_V_2_1_fu_228;
                tmp29_reg_2489 <= tmp29_fu_1555_p2;
                trunc_ln324_7_reg_2416_pp3_iter2_reg <= trunc_ln324_7_reg_2416_pp3_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then
                add_ln695_20_reg_2398 <= add_ln695_20_fu_977_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then
                add_ln695_reg_2133 <= add_ln695_fu_733_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (icmp_ln882_5_fu_972_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then
                and_ln120_reg_2412 <= and_ln120_fu_988_p2;
                icmp_ln882_6_reg_2403 <= icmp_ln882_6_fu_983_p2;
                icmp_ln886_reg_2425 <= icmp_ln886_fu_1022_p2;
                trunc_ln324_7_reg_2416 <= trunc_ln324_7_fu_1008_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln882_3_fu_758_p2 = ap_const_lv1_1))) then
                buf_0_V_addr_1_reg_2152 <= conv_i85_fu_769_p1(11 - 1 downto 0);
                buf_1_V_addr_1_reg_2158 <= conv_i85_fu_769_p1(11 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln882_4_fu_838_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                cmp_i_i289_i_reg_2334 <= cmp_i_i289_i_fu_843_p2;
                empty_55_reg_2339 <= empty_55_fu_868_p1;
                spec_select2101_reg_2344 <= spec_select2101_fu_880_p2;
                spec_select2117_reg_2349 <= spec_select2117_fu_892_p2;
                spec_select2133_reg_2354 <= spec_select2133_fu_914_p2;
                spec_select2149_reg_2359 <= spec_select2149_fu_926_p2;
                spec_select2165_reg_2364 <= spec_select2165_fu_938_p2;
                trunc_ln324_2_reg_2369 <= trunc_ln324_2_fu_944_p1;
                trunc_ln324_3_reg_2374 <= trunc_ln324_3_fu_948_p1;
                trunc_ln324_4_reg_2379 <= trunc_ln324_4_fu_952_p1;
                trunc_ln324_5_reg_2384 <= trunc_ln324_5_fu_956_p1;
                trunc_ln324_6_reg_2389 <= trunc_ln324_6_fu_960_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (icmp_ln882_5_reg_2394_pp3_iter1_reg = ap_const_lv1_1))) then
                cmp_i_i_i_reg_2454 <= cmp_i_i_i_fu_1055_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then
                empty_56_reg_634_pp3_iter1_reg <= empty_56_reg_634;
                icmp_ln882_5_reg_2394 <= icmp_ln882_5_fu_972_p2;
                icmp_ln882_5_reg_2394_pp3_iter1_reg <= icmp_ln882_5_reg_2394;
                icmp_ln882_6_reg_2403_pp3_iter1_reg <= icmp_ln882_6_reg_2403;
                icmp_ln886_reg_2425_pp3_iter1_reg <= icmp_ln886_reg_2425;
                trunc_ln324_7_reg_2416_pp3_iter1_reg <= trunc_ln324_7_reg_2416;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                empty_reg_2064 <= empty_fu_646_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                icmp_ln882_2_reg_2129 <= icmp_ln882_2_fu_728_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                icmp_ln882_3_reg_2143 <= icmp_ln882_3_fu_758_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter3 = ap_const_logic_1) and (icmp_ln882_5_reg_2394_pp3_iter2_reg = ap_const_lv1_1))) then
                p_Result_1_fu_252 <= src_buf_V_4_0_1_fu_1768_p3;
                p_Result_s_fu_188 <= src_buf_V_0_0_1_fu_1761_p3;
                src_buf_V_0_0_fu_192 <= src_buf_V_0_1_1_fu_1754_p3;
                src_buf_V_0_1_fu_196 <= src_buf_V_0_4_2_fu_1747_p3;
                src_buf_V_0_2_fu_200 <= src_buf_V_0_4_3_fu_1327_p3;
                src_buf_V_1_0_1_fu_208 <= src_buf_V_1_1_1_fu_1733_p3;
                src_buf_V_1_0_fu_204 <= src_buf_V_1_0_2_fu_1740_p3;
                src_buf_V_1_1_fu_212 <= src_buf_V_1_4_2_fu_1726_p3;
                src_buf_V_1_2_fu_216 <= src_buf_V_1_4_3_fu_1320_p3;
                src_buf_V_2_0_1_fu_224 <= src_buf_V_2_1_1_fu_1712_p3;
                src_buf_V_2_0_fu_220 <= src_buf_V_2_0_2_fu_1719_p3;
                src_buf_V_2_1_fu_228 <= src_buf_V_2_4_2_fu_1705_p3;
                src_buf_V_2_2_fu_232 <= src_buf_V_2_4_3_fu_1313_p3;
                src_buf_V_3_0_1_fu_240 <= src_buf_V_3_1_1_fu_1691_p3;
                src_buf_V_3_0_fu_236 <= src_buf_V_3_0_2_fu_1698_p3;
                src_buf_V_3_1_fu_244 <= src_buf_V_3_4_2_fu_1684_p3;
                src_buf_V_3_2_fu_248 <= src_buf_V_3_4_3_fu_1306_p3;
                src_buf_V_4_0_fu_256 <= src_buf_V_4_0_2_fu_1775_p3;
                src_buf_V_4_1_fu_260 <= src_buf_V_4_0_3_fu_1782_p3;
                src_buf_V_4_2_fu_264 <= src_buf_V_4_4_fu_1334_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln882_fu_665_p2 = ap_const_lv1_0) and (ap_phi_mux_row_ind_V_0_2_phi_fu_527_p4 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    row_ind_V_0_0_fu_148(2 downto 0) <= zext_ln304_fu_677_p1(2 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                    row_ind_V_0_0_load_reg_2069(2 downto 0) <= row_ind_V_0_0_fu_148(2 downto 0);
                    row_ind_V_1_0_load_reg_2074(2 downto 0) <= row_ind_V_1_0_fu_152(2 downto 0);
                    row_ind_V_2_0_load_reg_2079(2 downto 0) <= row_ind_V_2_0_fu_156(2 downto 0);
                    row_ind_V_3_0_load_reg_2086(2 downto 0) <= row_ind_V_3_0_fu_160(2 downto 0);
                    row_ind_V_4_0_load_reg_2091(2 downto 0) <= row_ind_V_4_0_fu_164(2 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln882_fu_665_p2 = ap_const_lv1_0) and (ap_phi_mux_row_ind_V_0_2_phi_fu_527_p4 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    row_ind_V_1_0_fu_152(2 downto 0) <= zext_ln304_fu_677_p1(2 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln882_fu_665_p2 = ap_const_lv1_0) and (ap_phi_mux_row_ind_V_0_2_phi_fu_527_p4 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    row_ind_V_2_0_fu_156(2 downto 0) <= zext_ln304_fu_677_p1(2 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln882_fu_665_p2 = ap_const_lv1_0) and (ap_phi_mux_row_ind_V_0_2_phi_fu_527_p4 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    row_ind_V_3_0_fu_160(2 downto 0) <= zext_ln304_fu_677_p1(2 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_phi_mux_row_ind_V_0_2_phi_fu_527_p4 = ap_const_lv3_3)) and not((ap_phi_mux_row_ind_V_0_2_phi_fu_527_p4 = ap_const_lv3_2)) and not((ap_phi_mux_row_ind_V_0_2_phi_fu_527_p4 = ap_const_lv3_1)) and not((ap_phi_mux_row_ind_V_0_2_phi_fu_527_p4 = ap_const_lv3_0)) and (icmp_ln882_fu_665_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    row_ind_V_4_0_fu_164(2 downto 0) <= zext_ln304_fu_677_p1(2 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln882_1_fu_712_p2 = ap_const_lv1_0))) then
                trunc_ln324_1_reg_2123 <= trunc_ln324_1_fu_721_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln882_1_fu_712_p2 = ap_const_lv1_1))) then
                trunc_ln324_reg_2119 <= trunc_ln324_fu_717_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                    wide_trip_count_reg_2110(2 downto 0) <= wide_trip_count_fu_709_p1(2 downto 0);
            end if;
        end if;
    end process;
    row_ind_V_0_0_load_reg_2069(12 downto 3) <= "0000000000";
    row_ind_V_1_0_load_reg_2074(12 downto 3) <= "0000000000";
    row_ind_V_2_0_load_reg_2079(12 downto 3) <= "0000000000";
    row_ind_V_3_0_load_reg_2086(12 downto 3) <= "0000000000";
    row_ind_V_4_0_load_reg_2091(12 downto 3) <= "0000000000";
    wide_trip_count_reg_2110(63 downto 3) <= "0000000000000000000000000000000000000000000000000000000000000";
    row_ind_V_0_0_fu_148(12 downto 3) <= "0000000000";
    row_ind_V_1_0_fu_152(12 downto 3) <= "0000000000";
    row_ind_V_2_0_fu_156(12 downto 3) <= "0000000000";
    row_ind_V_3_0_fu_160(12 downto 3) <= "0000000000";
    row_ind_V_4_0_fu_164(12 downto 3) <= "0000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter4, ap_CS_fsm_state2, icmp_ln882_1_fu_712_p2, ap_CS_fsm_state4, icmp_ln882_2_fu_728_p2, ap_enable_reg_pp1_iter0, icmp_ln882_3_fu_758_p2, ap_enable_reg_pp2_iter0, icmp_ln882_4_fu_838_p2, ap_CS_fsm_state11, icmp_ln882_5_fu_972_p2, ap_enable_reg_pp3_iter0, ap_block_pp1_stage0_subdone, ap_block_pp2_stage0_subdone, ap_block_pp3_stage0_subdone, ap_enable_reg_pp3_iter3, icmp_ln882_fu_665_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln882_fu_665_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln882_1_fu_712_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_pp1_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln882_2_fu_728_p2 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln882_2_fu_728_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_pp2_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (icmp_ln882_3_fu_758_p2 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (icmp_ln882_3_fu_758_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                if (((icmp_ln882_4_fu_838_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                end if;
            when ap_ST_fsm_pp3_stage0 => 
                if ((not(((ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (icmp_ln882_5_fu_972_p2 = ap_const_lv1_0))) and not(((ap_enable_reg_pp3_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_enable_reg_pp3_iter3 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                elsif ((((ap_enable_reg_pp3_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_enable_reg_pp3_iter3 = ap_const_logic_0)) or ((ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (icmp_ln882_5_fu_972_p2 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                end if;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXX";
        end case;
    end process;
    add_i_i50_fu_813_p2 <= std_logic_vector(unsigned(conv_i_i_i47_fu_810_p1) + unsigned(ap_const_lv17_2));
    add_ln1350_1_fu_1982_p2 <= std_logic_vector(unsigned(zext_ln695_17_fu_1955_p1) + unsigned(zext_ln695_22_fu_1978_p1));
    add_ln1350_2_fu_1988_p2 <= std_logic_vector(unsigned(ap_const_lv15_80) + unsigned(zext_ln695_25_fu_1931_p1));
    add_ln1350_fu_1998_p2 <= std_logic_vector(unsigned(add_ln1350_1_fu_1982_p2) + unsigned(zext_ln1350_fu_1994_p1));
    add_ln1501_1_fu_1423_p2 <= std_logic_vector(unsigned(zext_ln1501_6_fu_1419_p1) + unsigned(zext_ln1501_5_fu_1415_p1));
    add_ln1501_fu_1369_p2 <= std_logic_vector(unsigned(zext_ln1501_fu_1357_p1) + unsigned(zext_ln1501_1_fu_1361_p1));
    add_ln217_fu_748_p2 <= std_logic_vector(unsigned(init_buf_reg_534) + unsigned(ap_const_lv64_1));
    add_ln695_10_fu_1545_p2 <= std_logic_vector(unsigned(add_ln695_13_fu_1519_p2) + unsigned(zext_ln695_24_fu_1541_p1));
    add_ln695_11_cast_fu_1911_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln695_10_reg_2484),12));
    add_ln695_11_fu_1569_p2 <= std_logic_vector(unsigned(zext_ln695_13_fu_1565_p1) + unsigned(zext_ln695_12_fu_1561_p1));
    add_ln695_12_fu_1603_p2 <= std_logic_vector(unsigned(zext_ln357_fu_1341_p1) + unsigned(zext_ln357_1_fu_1345_p1));
    add_ln695_13_fu_1519_p2 <= std_logic_vector(unsigned(zext_ln695_6_fu_1483_p1) + unsigned(add_ln695_7_cast_fu_1503_p1));
    add_ln695_14_fu_1623_p2 <= std_logic_vector(unsigned(zext_ln695_18_fu_1609_p1) + unsigned(zext_ln695_27_fu_1619_p1));
    add_ln695_15_fu_1633_p2 <= std_logic_vector(unsigned(zext_ln695_19_fu_1629_p1) + unsigned(zext_ln1501_4_fu_1411_p1));
    add_ln695_16_fu_1962_p2 <= std_logic_vector(unsigned(zext_ln695_20_fu_1959_p1) + unsigned(zext_ln674_2_fu_1896_p1));
    add_ln695_17_fu_1972_p2 <= std_logic_vector(unsigned(shl_ln785_cast_fu_1907_p1) + unsigned(zext_ln695_21_fu_1968_p1));
    add_ln695_18_fu_1525_p2 <= std_logic_vector(unsigned(zext_ln695_16_fu_1515_p1) + unsigned(zext_ln695_15_fu_1511_p1));
    add_ln695_19_fu_1535_p2 <= std_logic_vector(unsigned(zext_ln695_11_fu_1507_p1) + unsigned(zext_ln695_23_fu_1531_p1));
    add_ln695_1_fu_763_p2 <= std_logic_vector(unsigned(empty_53_reg_556) + unsigned(ap_const_lv13_1));
    add_ln695_20_fu_977_p2 <= std_logic_vector(unsigned(ap_phi_mux_empty_56_phi_fu_638_p4) + unsigned(ap_const_lv13_1));
    add_ln695_21_fu_1613_p2 <= std_logic_vector(unsigned(zext_ln674_1_fu_1353_p1) + unsigned(zext_ln674_fu_1349_p1));
    add_ln695_2_fu_2015_p2 <= std_logic_vector(unsigned(empty_54_reg_622) + unsigned(ap_const_lv13_1));
    add_ln695_3_fu_1393_p2 <= std_logic_vector(unsigned(zext_ln1501_3_fu_1375_p1) + unsigned(zext_ln695_3_fu_1389_p1));
    add_ln695_4_fu_1451_p2 <= std_logic_vector(unsigned(zext_ln1501_7_fu_1429_p1) + unsigned(zext_ln695_7_fu_1447_p1));
    add_ln695_5_fu_1469_p2 <= std_logic_vector(unsigned(src_buf_V_0_3_load_cast_fu_1457_p1) + unsigned(zext_ln695_2_fu_1461_p1));
    add_ln695_6_fu_1383_p2 <= std_logic_vector(unsigned(zext_ln695_1_fu_1379_p1) + unsigned(zext_ln1501_2_fu_1365_p1));
    add_ln695_7_cast_fu_1503_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln695_7_fu_1497_p2),11));
    add_ln695_7_fu_1497_p2 <= std_logic_vector(unsigned(zext_ln695_4_fu_1475_p1) + unsigned(zext_ln695_10_fu_1493_p1));
    add_ln695_8_fu_1441_p2 <= std_logic_vector(unsigned(zext_ln695_5_fu_1437_p1) + unsigned(zext_ln1501_8_fu_1433_p1));
    add_ln695_9_fu_1487_p2 <= std_logic_vector(unsigned(zext_ln695_9_fu_1479_p1) + unsigned(zext_ln695_8_fu_1465_p1));
    add_ln695_fu_733_p2 <= std_logic_vector(unsigned(ap_phi_mux_empty_52_phi_fu_548_p4) + unsigned(ap_const_lv13_1));
    and_ln120_fu_988_p2 <= (icmp_ln882_6_fu_983_p2 and cmp_i_i289_i_reg_2334);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(4);
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(6);
    ap_CS_fsm_pp3_stage0 <= ap_CS_fsm(9);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(7);
    ap_CS_fsm_state11 <= ap_CS_fsm(8);
    ap_CS_fsm_state17 <= ap_CS_fsm(10);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state7 <= ap_CS_fsm(5);
        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_11001_assign_proc : process(p_filter_in1_empty_n, ap_enable_reg_pp1_iter1)
    begin
                ap_block_pp1_stage0_11001 <= ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (p_filter_in1_empty_n = ap_const_logic_0));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(p_filter_in1_empty_n, ap_enable_reg_pp1_iter1)
    begin
                ap_block_pp1_stage0_subdone <= ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (p_filter_in1_empty_n = ap_const_logic_0));
    end process;

        ap_block_pp2_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp3_stage0_01001_assign_proc : process(p_filter_in1_empty_n, p_filter_out2_full_n, ap_enable_reg_pp3_iter1, and_ln120_reg_2412, ap_enable_reg_pp3_iter4, icmp_ln886_reg_2425_pp3_iter3_reg)
    begin
                ap_block_pp3_stage0_01001 <= (((icmp_ln886_reg_2425_pp3_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp3_iter4 = ap_const_logic_1) and (p_filter_out2_full_n = ap_const_logic_0)) or ((ap_const_lv1_1 = and_ln120_reg_2412) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (p_filter_in1_empty_n = ap_const_logic_0)));
    end process;


    ap_block_pp3_stage0_11001_assign_proc : process(p_filter_in1_empty_n, p_filter_out2_full_n, ap_enable_reg_pp3_iter1, and_ln120_reg_2412, ap_enable_reg_pp3_iter4, icmp_ln886_reg_2425_pp3_iter3_reg)
    begin
                ap_block_pp3_stage0_11001 <= (((icmp_ln886_reg_2425_pp3_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp3_iter4 = ap_const_logic_1) and (p_filter_out2_full_n = ap_const_logic_0)) or ((ap_const_lv1_1 = and_ln120_reg_2412) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (p_filter_in1_empty_n = ap_const_logic_0)));
    end process;


    ap_block_pp3_stage0_subdone_assign_proc : process(p_filter_in1_empty_n, p_filter_out2_full_n, ap_enable_reg_pp3_iter1, and_ln120_reg_2412, ap_enable_reg_pp3_iter4, icmp_ln886_reg_2425_pp3_iter3_reg)
    begin
                ap_block_pp3_stage0_subdone <= (((icmp_ln886_reg_2425_pp3_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp3_iter4 = ap_const_logic_1) and (p_filter_out2_full_n = ap_const_logic_0)) or ((ap_const_lv1_1 = and_ln120_reg_2412) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (p_filter_in1_empty_n = ap_const_logic_0)));
    end process;

        ap_block_state12_pp3_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state13_pp3_stage0_iter1_assign_proc : process(p_filter_in1_empty_n, and_ln120_reg_2412)
    begin
                ap_block_state13_pp3_stage0_iter1 <= ((ap_const_lv1_1 = and_ln120_reg_2412) and (p_filter_in1_empty_n = ap_const_logic_0));
    end process;

        ap_block_state14_pp3_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp3_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state16_pp3_stage0_iter4_assign_proc : process(p_filter_out2_full_n, icmp_ln886_reg_2425_pp3_iter3_reg)
    begin
                ap_block_state16_pp3_stage0_iter4 <= ((icmp_ln886_reg_2425_pp3_iter3_reg = ap_const_lv1_0) and (p_filter_out2_full_n = ap_const_logic_0));
    end process;

        ap_block_state5_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state6_pp1_stage0_iter1_assign_proc : process(p_filter_in1_empty_n)
    begin
                ap_block_state6_pp1_stage0_iter1 <= (p_filter_in1_empty_n = ap_const_logic_0);
    end process;

        ap_block_state8_pp2_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp2_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp1_exit_iter0_state5_assign_proc : process(icmp_ln882_2_fu_728_p2)
    begin
        if ((icmp_ln882_2_fu_728_p2 = ap_const_lv1_0)) then 
            ap_condition_pp1_exit_iter0_state5 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp2_exit_iter0_state8_assign_proc : process(icmp_ln882_3_fu_758_p2)
    begin
        if ((icmp_ln882_3_fu_758_p2 = ap_const_lv1_0)) then 
            ap_condition_pp2_exit_iter0_state8 <= ap_const_logic_1;
        else 
            ap_condition_pp2_exit_iter0_state8 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp3_exit_iter0_state12_assign_proc : process(icmp_ln882_5_fu_972_p2)
    begin
        if ((icmp_ln882_5_fu_972_p2 = ap_const_lv1_0)) then 
            ap_condition_pp3_exit_iter0_state12 <= ap_const_logic_1;
        else 
            ap_condition_pp3_exit_iter0_state12 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, icmp_ln882_4_fu_838_p2, ap_CS_fsm_state11)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)) or ((icmp_ln882_4_fu_838_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);
    ap_enable_pp2 <= (ap_idle_pp2 xor ap_const_logic_1);
    ap_enable_pp3 <= (ap_idle_pp3 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter0)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp2_assign_proc : process(ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_0))) then 
            ap_idle_pp2 <= ap_const_logic_1;
        else 
            ap_idle_pp2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp3_assign_proc : process(ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter4, ap_enable_reg_pp3_iter0, ap_enable_reg_pp3_iter2, ap_enable_reg_pp3_iter3)
    begin
        if (((ap_enable_reg_pp3_iter4 = ap_const_logic_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_enable_reg_pp3_iter3 = ap_const_logic_0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_0))) then 
            ap_idle_pp3 <= ap_const_logic_1;
        else 
            ap_idle_pp3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_empty_52_phi_fu_548_p4_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, empty_52_reg_544, icmp_ln882_2_reg_2129, add_ln695_reg_2133)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln882_2_reg_2129 = ap_const_lv1_1))) then 
            ap_phi_mux_empty_52_phi_fu_548_p4 <= add_ln695_reg_2133;
        else 
            ap_phi_mux_empty_52_phi_fu_548_p4 <= empty_52_reg_544;
        end if; 
    end process;


    ap_phi_mux_empty_56_phi_fu_638_p4_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0, empty_56_reg_634, icmp_ln882_5_reg_2394, add_ln695_20_reg_2398)
    begin
        if (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (icmp_ln882_5_reg_2394 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            ap_phi_mux_empty_56_phi_fu_638_p4 <= add_ln695_20_reg_2398;
        else 
            ap_phi_mux_empty_56_phi_fu_638_p4 <= empty_56_reg_634;
        end if; 
    end process;

    ap_phi_mux_row_ind_V_0_2_phi_fu_527_p4 <= row_ind_V_0_2_reg_523;

    ap_ready_assign_proc : process(icmp_ln882_4_fu_838_p2, ap_CS_fsm_state11)
    begin
        if (((icmp_ln882_4_fu_838_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    buf_0_V_address0_assign_proc : process(ap_block_pp3_stage0, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_enable_reg_pp3_iter2, conv_i85_fu_769_p1, ap_block_pp2_stage0, zext_ln130_fu_1046_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1))) then 
            buf_0_V_address0 <= zext_ln130_fu_1046_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) then 
            buf_0_V_address0 <= conv_i85_fu_769_p1(11 - 1 downto 0);
        else 
            buf_0_V_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_0_V_address1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0, and_ln120_reg_2412, ap_CS_fsm_pp2_stage0, buf_0_V_addr_1_reg_2152, trunc_ln324_2_reg_2369, ap_enable_reg_pp2_iter1, zext_ln538_1_fu_739_p1, ap_block_pp2_stage0, zext_ln538_3_fu_1028_p1, zext_ln538_2_fu_1037_p1)
    begin
        if (((ap_const_lv1_1 = and_ln120_reg_2412) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (trunc_ln324_2_reg_2369 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            buf_0_V_address1 <= zext_ln538_2_fu_1037_p1(11 - 1 downto 0);
        elsif (((ap_const_lv1_0 = and_ln120_reg_2412) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (trunc_ln324_2_reg_2369 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            buf_0_V_address1 <= zext_ln538_3_fu_1028_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            buf_0_V_address1 <= buf_0_V_addr_1_reg_2152;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            buf_0_V_address1 <= zext_ln538_1_fu_739_p1(11 - 1 downto 0);
        else 
            buf_0_V_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_0_V_ce0_assign_proc : process(ap_block_pp3_stage0_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter0, ap_enable_reg_pp3_iter2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1)))) then 
            buf_0_V_ce0 <= ap_const_logic_1;
        else 
            buf_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_0_V_ce1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, and_ln120_reg_2412, ap_block_pp3_stage0_11001, ap_block_pp1_stage0_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, trunc_ln324_2_reg_2369, ap_enable_reg_pp2_iter1)
    begin
        if ((((ap_const_lv1_1 = and_ln120_reg_2412) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (trunc_ln324_2_reg_2369 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_lv1_0 = and_ln120_reg_2412) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (trunc_ln324_2_reg_2369 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            buf_0_V_ce1 <= ap_const_logic_1;
        else 
            buf_0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_0_V_d1_assign_proc : process(p_filter_in1_dout, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0, and_ln120_reg_2412, ap_CS_fsm_pp2_stage0, trunc_ln324_2_reg_2369, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0, tmp_1_fu_778_p7)
    begin
        if (((ap_const_lv1_0 = and_ln120_reg_2412) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (trunc_ln324_2_reg_2369 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            buf_0_V_d1 <= ap_const_lv8_0;
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            buf_0_V_d1 <= tmp_1_fu_778_p7;
        elsif ((((ap_const_lv1_1 = and_ln120_reg_2412) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (trunc_ln324_2_reg_2369 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            buf_0_V_d1 <= p_filter_in1_dout;
        else 
            buf_0_V_d1 <= "XXXXXXXX";
        end if; 
    end process;


    buf_0_V_we1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, and_ln120_reg_2412, ap_block_pp3_stage0_11001, trunc_ln324_reg_2119, ap_block_pp1_stage0_11001, icmp_ln882_3_reg_2143, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, trunc_ln324_2_reg_2369, ap_enable_reg_pp2_iter1)
    begin
        if ((((ap_const_lv1_1 = and_ln120_reg_2412) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (trunc_ln324_2_reg_2369 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_lv1_0 = and_ln120_reg_2412) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (trunc_ln324_2_reg_2369 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln882_3_reg_2143 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (trunc_ln324_reg_2119 = ap_const_lv3_0)))) then 
            buf_0_V_we1 <= ap_const_logic_1;
        else 
            buf_0_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_1_V_address0_assign_proc : process(ap_block_pp3_stage0, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_enable_reg_pp3_iter2, conv_i85_fu_769_p1, ap_block_pp2_stage0, zext_ln130_fu_1046_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1))) then 
            buf_1_V_address0 <= zext_ln130_fu_1046_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) then 
            buf_1_V_address0 <= conv_i85_fu_769_p1(11 - 1 downto 0);
        else 
            buf_1_V_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_1_V_address1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0, and_ln120_reg_2412, ap_CS_fsm_pp2_stage0, buf_1_V_addr_1_reg_2158, trunc_ln324_2_reg_2369, ap_enable_reg_pp2_iter1, zext_ln538_1_fu_739_p1, ap_block_pp2_stage0, zext_ln538_3_fu_1028_p1, zext_ln538_2_fu_1037_p1)
    begin
        if (((ap_const_lv1_1 = and_ln120_reg_2412) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (trunc_ln324_2_reg_2369 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            buf_1_V_address1 <= zext_ln538_2_fu_1037_p1(11 - 1 downto 0);
        elsif (((ap_const_lv1_0 = and_ln120_reg_2412) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (trunc_ln324_2_reg_2369 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            buf_1_V_address1 <= zext_ln538_3_fu_1028_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            buf_1_V_address1 <= buf_1_V_addr_1_reg_2158;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            buf_1_V_address1 <= zext_ln538_1_fu_739_p1(11 - 1 downto 0);
        else 
            buf_1_V_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_1_V_ce0_assign_proc : process(ap_block_pp3_stage0_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter0, ap_enable_reg_pp3_iter2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1)))) then 
            buf_1_V_ce0 <= ap_const_logic_1;
        else 
            buf_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_1_V_ce1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, and_ln120_reg_2412, ap_block_pp3_stage0_11001, ap_block_pp1_stage0_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, trunc_ln324_2_reg_2369, ap_enable_reg_pp2_iter1)
    begin
        if ((((ap_const_lv1_1 = and_ln120_reg_2412) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (trunc_ln324_2_reg_2369 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_lv1_0 = and_ln120_reg_2412) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (trunc_ln324_2_reg_2369 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            buf_1_V_ce1 <= ap_const_logic_1;
        else 
            buf_1_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_1_V_d1_assign_proc : process(p_filter_in1_dout, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0, and_ln120_reg_2412, ap_CS_fsm_pp2_stage0, trunc_ln324_2_reg_2369, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0, tmp_2_fu_794_p7)
    begin
        if (((ap_const_lv1_0 = and_ln120_reg_2412) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (trunc_ln324_2_reg_2369 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            buf_1_V_d1 <= ap_const_lv8_0;
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            buf_1_V_d1 <= tmp_2_fu_794_p7;
        elsif ((((ap_const_lv1_1 = and_ln120_reg_2412) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (trunc_ln324_2_reg_2369 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            buf_1_V_d1 <= p_filter_in1_dout;
        else 
            buf_1_V_d1 <= "XXXXXXXX";
        end if; 
    end process;


    buf_1_V_we1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, and_ln120_reg_2412, ap_block_pp3_stage0_11001, trunc_ln324_reg_2119, ap_block_pp1_stage0_11001, icmp_ln882_3_reg_2143, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, trunc_ln324_2_reg_2369, ap_enable_reg_pp2_iter1)
    begin
        if ((((ap_const_lv1_1 = and_ln120_reg_2412) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (trunc_ln324_2_reg_2369 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_lv1_0 = and_ln120_reg_2412) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (trunc_ln324_2_reg_2369 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln882_3_reg_2143 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (trunc_ln324_reg_2119 = ap_const_lv3_1)))) then 
            buf_1_V_we1 <= ap_const_logic_1;
        else 
            buf_1_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_2_V_address0_assign_proc : process(ap_block_pp3_stage0, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_enable_reg_pp3_iter2, conv_i85_fu_769_p1, ap_block_pp2_stage0, zext_ln130_fu_1046_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1))) then 
            buf_2_V_address0 <= zext_ln130_fu_1046_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) then 
            buf_2_V_address0 <= conv_i85_fu_769_p1(11 - 1 downto 0);
        else 
            buf_2_V_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_2_V_address1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0, and_ln120_reg_2412, trunc_ln324_2_reg_2369, zext_ln538_1_fu_739_p1, zext_ln538_3_fu_1028_p1, zext_ln538_2_fu_1037_p1)
    begin
        if (((ap_const_lv1_1 = and_ln120_reg_2412) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (trunc_ln324_2_reg_2369 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            buf_2_V_address1 <= zext_ln538_2_fu_1037_p1(11 - 1 downto 0);
        elsif (((ap_const_lv1_0 = and_ln120_reg_2412) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (trunc_ln324_2_reg_2369 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            buf_2_V_address1 <= zext_ln538_3_fu_1028_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            buf_2_V_address1 <= zext_ln538_1_fu_739_p1(11 - 1 downto 0);
        else 
            buf_2_V_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_2_V_ce0_assign_proc : process(ap_block_pp3_stage0_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter0, ap_enable_reg_pp3_iter2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1)))) then 
            buf_2_V_ce0 <= ap_const_logic_1;
        else 
            buf_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_2_V_ce1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, and_ln120_reg_2412, ap_block_pp3_stage0_11001, ap_block_pp1_stage0_11001, trunc_ln324_2_reg_2369)
    begin
        if ((((ap_const_lv1_1 = and_ln120_reg_2412) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (trunc_ln324_2_reg_2369 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_lv1_0 = and_ln120_reg_2412) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (trunc_ln324_2_reg_2369 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            buf_2_V_ce1 <= ap_const_logic_1;
        else 
            buf_2_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_2_V_d1_assign_proc : process(p_filter_in1_dout, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0, and_ln120_reg_2412, trunc_ln324_2_reg_2369)
    begin
        if (((ap_const_lv1_0 = and_ln120_reg_2412) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (trunc_ln324_2_reg_2369 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            buf_2_V_d1 <= ap_const_lv8_0;
        elsif ((((ap_const_lv1_1 = and_ln120_reg_2412) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (trunc_ln324_2_reg_2369 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            buf_2_V_d1 <= p_filter_in1_dout;
        else 
            buf_2_V_d1 <= "XXXXXXXX";
        end if; 
    end process;


    buf_2_V_we1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, and_ln120_reg_2412, ap_block_pp3_stage0_11001, trunc_ln324_reg_2119, ap_block_pp1_stage0_11001, trunc_ln324_2_reg_2369)
    begin
        if ((((ap_const_lv1_1 = and_ln120_reg_2412) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (trunc_ln324_2_reg_2369 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_lv1_0 = and_ln120_reg_2412) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (trunc_ln324_2_reg_2369 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (trunc_ln324_reg_2119 = ap_const_lv3_2)))) then 
            buf_2_V_we1 <= ap_const_logic_1;
        else 
            buf_2_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_3_V_address0_assign_proc : process(ap_block_pp3_stage0, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_enable_reg_pp3_iter2, conv_i85_fu_769_p1, ap_block_pp2_stage0, zext_ln130_fu_1046_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1))) then 
            buf_3_V_address0 <= zext_ln130_fu_1046_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) then 
            buf_3_V_address0 <= conv_i85_fu_769_p1(11 - 1 downto 0);
        else 
            buf_3_V_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_3_V_address1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0, and_ln120_reg_2412, trunc_ln324_2_reg_2369, zext_ln538_1_fu_739_p1, zext_ln538_3_fu_1028_p1, zext_ln538_2_fu_1037_p1)
    begin
        if (((ap_const_lv1_1 = and_ln120_reg_2412) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (trunc_ln324_2_reg_2369 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            buf_3_V_address1 <= zext_ln538_2_fu_1037_p1(11 - 1 downto 0);
        elsif (((ap_const_lv1_0 = and_ln120_reg_2412) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (trunc_ln324_2_reg_2369 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            buf_3_V_address1 <= zext_ln538_3_fu_1028_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            buf_3_V_address1 <= zext_ln538_1_fu_739_p1(11 - 1 downto 0);
        else 
            buf_3_V_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_3_V_ce0_assign_proc : process(ap_block_pp3_stage0_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter0, ap_enable_reg_pp3_iter2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1)))) then 
            buf_3_V_ce0 <= ap_const_logic_1;
        else 
            buf_3_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_3_V_ce1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, and_ln120_reg_2412, ap_block_pp3_stage0_11001, ap_block_pp1_stage0_11001, trunc_ln324_2_reg_2369)
    begin
        if ((((ap_const_lv1_1 = and_ln120_reg_2412) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (trunc_ln324_2_reg_2369 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_lv1_0 = and_ln120_reg_2412) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (trunc_ln324_2_reg_2369 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            buf_3_V_ce1 <= ap_const_logic_1;
        else 
            buf_3_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_3_V_d1_assign_proc : process(p_filter_in1_dout, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0, and_ln120_reg_2412, trunc_ln324_2_reg_2369)
    begin
        if (((ap_const_lv1_0 = and_ln120_reg_2412) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (trunc_ln324_2_reg_2369 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            buf_3_V_d1 <= ap_const_lv8_0;
        elsif ((((ap_const_lv1_1 = and_ln120_reg_2412) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (trunc_ln324_2_reg_2369 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            buf_3_V_d1 <= p_filter_in1_dout;
        else 
            buf_3_V_d1 <= "XXXXXXXX";
        end if; 
    end process;


    buf_3_V_we1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, and_ln120_reg_2412, ap_block_pp3_stage0_11001, trunc_ln324_reg_2119, ap_block_pp1_stage0_11001, trunc_ln324_2_reg_2369)
    begin
        if ((((ap_const_lv1_1 = and_ln120_reg_2412) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (trunc_ln324_2_reg_2369 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_lv1_0 = and_ln120_reg_2412) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (trunc_ln324_2_reg_2369 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (trunc_ln324_reg_2119 = ap_const_lv3_3)))) then 
            buf_3_V_we1 <= ap_const_logic_1;
        else 
            buf_3_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_4_V_address0_assign_proc : process(ap_block_pp3_stage0, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_enable_reg_pp3_iter2, conv_i85_fu_769_p1, ap_block_pp2_stage0, zext_ln130_fu_1046_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1))) then 
            buf_4_V_address0 <= zext_ln130_fu_1046_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) then 
            buf_4_V_address0 <= conv_i85_fu_769_p1(11 - 1 downto 0);
        else 
            buf_4_V_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_4_V_address1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0, and_ln120_reg_2412, trunc_ln324_2_reg_2369, zext_ln538_1_fu_739_p1, zext_ln538_3_fu_1028_p1, zext_ln538_2_fu_1037_p1)
    begin
        if ((not((trunc_ln324_2_reg_2369 = ap_const_lv3_0)) and not((trunc_ln324_2_reg_2369 = ap_const_lv3_1)) and not((trunc_ln324_2_reg_2369 = ap_const_lv3_2)) and not((trunc_ln324_2_reg_2369 = ap_const_lv3_3)) and (ap_const_lv1_1 = and_ln120_reg_2412) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            buf_4_V_address1 <= zext_ln538_2_fu_1037_p1(11 - 1 downto 0);
        elsif ((not((trunc_ln324_2_reg_2369 = ap_const_lv3_0)) and not((trunc_ln324_2_reg_2369 = ap_const_lv3_1)) and not((trunc_ln324_2_reg_2369 = ap_const_lv3_2)) and not((trunc_ln324_2_reg_2369 = ap_const_lv3_3)) and (ap_const_lv1_0 = and_ln120_reg_2412) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            buf_4_V_address1 <= zext_ln538_3_fu_1028_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            buf_4_V_address1 <= zext_ln538_1_fu_739_p1(11 - 1 downto 0);
        else 
            buf_4_V_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_4_V_ce0_assign_proc : process(ap_block_pp3_stage0_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter0, ap_enable_reg_pp3_iter2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1)))) then 
            buf_4_V_ce0 <= ap_const_logic_1;
        else 
            buf_4_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_4_V_ce1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, and_ln120_reg_2412, ap_block_pp3_stage0_11001, ap_block_pp1_stage0_11001, trunc_ln324_2_reg_2369)
    begin
        if (((not((trunc_ln324_2_reg_2369 = ap_const_lv3_0)) and not((trunc_ln324_2_reg_2369 = ap_const_lv3_1)) and not((trunc_ln324_2_reg_2369 = ap_const_lv3_2)) and not((trunc_ln324_2_reg_2369 = ap_const_lv3_3)) and (ap_const_lv1_1 = and_ln120_reg_2412) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or (not((trunc_ln324_2_reg_2369 = ap_const_lv3_0)) and not((trunc_ln324_2_reg_2369 = ap_const_lv3_1)) and not((trunc_ln324_2_reg_2369 = ap_const_lv3_2)) and not((trunc_ln324_2_reg_2369 = ap_const_lv3_3)) and (ap_const_lv1_0 = and_ln120_reg_2412) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            buf_4_V_ce1 <= ap_const_logic_1;
        else 
            buf_4_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_4_V_d1_assign_proc : process(p_filter_in1_dout, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0, and_ln120_reg_2412, trunc_ln324_2_reg_2369)
    begin
        if ((not((trunc_ln324_2_reg_2369 = ap_const_lv3_0)) and not((trunc_ln324_2_reg_2369 = ap_const_lv3_1)) and not((trunc_ln324_2_reg_2369 = ap_const_lv3_2)) and not((trunc_ln324_2_reg_2369 = ap_const_lv3_3)) and (ap_const_lv1_0 = and_ln120_reg_2412) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            buf_4_V_d1 <= ap_const_lv8_0;
        elsif (((not((trunc_ln324_2_reg_2369 = ap_const_lv3_0)) and not((trunc_ln324_2_reg_2369 = ap_const_lv3_1)) and not((trunc_ln324_2_reg_2369 = ap_const_lv3_2)) and not((trunc_ln324_2_reg_2369 = ap_const_lv3_3)) and (ap_const_lv1_1 = and_ln120_reg_2412) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            buf_4_V_d1 <= p_filter_in1_dout;
        else 
            buf_4_V_d1 <= "XXXXXXXX";
        end if; 
    end process;


    buf_4_V_we1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, and_ln120_reg_2412, ap_block_pp3_stage0_11001, trunc_ln324_reg_2119, ap_block_pp1_stage0_11001, trunc_ln324_2_reg_2369)
    begin
        if (((not((trunc_ln324_2_reg_2369 = ap_const_lv3_0)) and not((trunc_ln324_2_reg_2369 = ap_const_lv3_1)) and not((trunc_ln324_2_reg_2369 = ap_const_lv3_2)) and not((trunc_ln324_2_reg_2369 = ap_const_lv3_3)) and (ap_const_lv1_1 = and_ln120_reg_2412) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or (not((trunc_ln324_2_reg_2369 = ap_const_lv3_0)) and not((trunc_ln324_2_reg_2369 = ap_const_lv3_1)) and not((trunc_ln324_2_reg_2369 = ap_const_lv3_2)) and not((trunc_ln324_2_reg_2369 = ap_const_lv3_3)) and (ap_const_lv1_0 = and_ln120_reg_2412) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or (not((trunc_ln324_reg_2119 = ap_const_lv3_0)) and not((trunc_ln324_reg_2119 = ap_const_lv3_1)) and not((trunc_ln324_reg_2119 = ap_const_lv3_2)) and not((trunc_ln324_reg_2119 = ap_const_lv3_3)) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            buf_4_V_we1 <= ap_const_logic_1;
        else 
            buf_4_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    cmp_i_i169_i_1_fu_886_p2 <= "1" when (signed(sub_i181_i_fu_862_p2) < signed(ap_const_lv18_1)) else "0";
    cmp_i_i169_i_3_fu_920_p2 <= "1" when (signed(sub_i181_i_fu_862_p2) < signed(ap_const_lv18_3)) else "0";
    cmp_i_i169_i_4_fu_932_p2 <= "1" when (signed(sub_i_i198_i_fu_853_p2) > signed(ap_const_lv17_0)) else "0";
    cmp_i_i224_i_fu_848_p2 <= "1" when (signed(zext_ln882_3_fu_834_p1) > signed(sub_i_reg_2324)) else "0";
    cmp_i_i289_i_fu_843_p2 <= "1" when (unsigned(zext_ln882_2_fu_830_p1) < unsigned(img_height)) else "0";
    cmp_i_i_i_fu_1055_p2 <= "1" when (empty_56_reg_634_pp3_iter1_reg = ap_const_lv13_0) else "0";
    conv_i85_fu_769_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_53_reg_556),64));
    conv_i_i_i47_fu_810_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(img_height),17));
    empty_55_fu_868_p1 <= sub_i181_i_fu_862_p2(3 - 1 downto 0);
    empty_57_fu_1299_p3 <= 
        tmp_11_fu_1269_p7 when (spec_select2165_reg_2364(0) = '1') else 
        tmp_12_fu_1284_p7;
    empty_58_fu_1597_p2 <= std_logic_vector(unsigned(zext_ln695_14_fu_1575_p1) + unsigned(tmp30_cast_fu_1593_p1));
    empty_fu_646_p1 <= img_width(14 - 1 downto 0);
    icmp_fu_908_p2 <= "1" when (signed(tmp_13_fu_898_p4) < signed(ap_const_lv17_1)) else "0";
    icmp_ln882_1_fu_712_p2 <= "1" when (unsigned(init_buf_reg_534) < unsigned(wide_trip_count_reg_2110)) else "0";
    icmp_ln882_2_fu_728_p2 <= "1" when (unsigned(zext_ln882_fu_724_p1) < unsigned(img_width)) else "0";
    icmp_ln882_3_fu_758_p2 <= "1" when (unsigned(zext_ln882_1_fu_754_p1) < unsigned(img_width)) else "0";
    icmp_ln882_4_fu_838_p2 <= "1" when (unsigned(zext_ln882_3_fu_834_p1) < unsigned(add_i_i50_reg_2314)) else "0";
    icmp_ln882_5_fu_972_p2 <= "1" when (unsigned(zext_ln882_5_fu_968_p1) < unsigned(op2_assign_reg_2319)) else "0";
    icmp_ln882_6_fu_983_p2 <= "1" when (unsigned(zext_ln882_4_fu_964_p1) < unsigned(img_width)) else "0";
    icmp_ln882_fu_665_p2 <= "1" when (row_ind_V_0_2_reg_523 = ap_const_lv3_5) else "0";
    icmp_ln886_fu_1022_p2 <= "1" when (tmp_14_fu_1012_p4 = ap_const_lv12_0) else "0";
    init_row_ind_fu_671_p2 <= std_logic_vector(unsigned(row_ind_V_0_2_reg_523) + unsigned(ap_const_lv3_1));
    op2_assign_fu_819_p2 <= std_logic_vector(unsigned(empty_reg_2064) + unsigned(ap_const_lv14_2));
    p_cast16_fu_1935_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_58_reg_2494),11));
    p_cast17_fu_1938_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln695_4_reg_2478),11));

    p_filter_in1_blk_n_assign_proc : process(p_filter_in1_empty_n, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0, and_ln120_reg_2412)
    begin
        if ((((ap_const_lv1_1 = and_ln120_reg_2412) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            p_filter_in1_blk_n <= p_filter_in1_empty_n;
        else 
            p_filter_in1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_filter_in1_read_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, and_ln120_reg_2412, ap_block_pp3_stage0_11001, ap_block_pp1_stage0_11001)
    begin
        if ((((ap_const_lv1_1 = and_ln120_reg_2412) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            p_filter_in1_read <= ap_const_logic_1;
        else 
            p_filter_in1_read <= ap_const_logic_0;
        end if; 
    end process;


    p_filter_out2_blk_n_assign_proc : process(p_filter_out2_full_n, ap_block_pp3_stage0, ap_enable_reg_pp3_iter4, icmp_ln886_reg_2425_pp3_iter3_reg)
    begin
        if (((icmp_ln886_reg_2425_pp3_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp3_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            p_filter_out2_blk_n <= p_filter_out2_full_n;
        else 
            p_filter_out2_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_filter_out2_din <= add_ln1350_fu_1998_p2(15 downto 8);

    p_filter_out2_write_assign_proc : process(ap_enable_reg_pp3_iter4, icmp_ln886_reg_2425_pp3_iter3_reg, ap_block_pp3_stage0_11001)
    begin
        if (((icmp_ln886_reg_2425_pp3_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp3_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then 
            p_filter_out2_write <= ap_const_logic_1;
        else 
            p_filter_out2_write <= ap_const_logic_0;
        end if; 
    end process;

    shl_ln1_fu_1900_p3 <= (src_buf_V_2_1_load_reg_2473 & ap_const_lv5_0);
    shl_ln695_1_fu_1889_p3 <= (add_ln695_4_reg_2478 & ap_const_lv3_0);
    shl_ln785_cast_fu_1907_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1_fu_1900_p3),15));
    shl_ln_fu_1403_p3 <= (add_ln695_3_fu_1393_p2 & ap_const_lv1_0);
    spec_select2101_fu_880_p2 <= (tmp_fu_872_p3 and cmp_i_i224_i_fu_848_p2);
    spec_select2117_fu_892_p2 <= (cmp_i_i224_i_fu_848_p2 and cmp_i_i169_i_1_fu_886_p2);
    spec_select2133_fu_914_p2 <= (icmp_fu_908_p2 and cmp_i_i224_i_fu_848_p2);
    spec_select2149_fu_926_p2 <= (cmp_i_i224_i_fu_848_p2 and cmp_i_i169_i_3_fu_920_p2);
    spec_select2165_fu_938_p2 <= (cmp_i_i224_i_fu_848_p2 and cmp_i_i169_i_4_fu_932_p2);
    src_buf_V_0_0_1_fu_1761_p3 <= 
        src_buf_V_0_4_3_fu_1327_p3 when (cmp_i_i_i_reg_2454(0) = '1') else 
        src_buf_V_0_0_fu_192;
    src_buf_V_0_1_1_fu_1754_p3 <= 
        src_buf_V_0_4_3_fu_1327_p3 when (cmp_i_i_i_reg_2454(0) = '1') else 
        src_buf_V_0_1_fu_196;
    src_buf_V_0_3_load_cast_fu_1457_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_buf_V_0_2_fu_200),9));
    src_buf_V_0_4_2_fu_1747_p3 <= 
        src_buf_V_0_4_3_fu_1327_p3 when (cmp_i_i_i_reg_2454(0) = '1') else 
        src_buf_V_0_2_fu_200;
    src_buf_V_0_4_3_fu_1327_p3 <= 
        src_buf_V_0_4_fu_1151_p3 when (icmp_ln882_6_reg_2403_pp3_iter2_reg(0) = '1') else 
        src_buf_V_0_2_fu_200;
    src_buf_V_0_4_fu_1151_p3 <= 
        tmp_4_fu_1121_p7 when (spec_select2101_reg_2344(0) = '1') else 
        tmp_5_fu_1136_p7;
    src_buf_V_1_0_2_fu_1740_p3 <= 
        src_buf_V_1_4_3_fu_1320_p3 when (cmp_i_i_i_reg_2454(0) = '1') else 
        src_buf_V_1_0_1_fu_208;
    src_buf_V_1_1_1_fu_1733_p3 <= 
        src_buf_V_1_4_3_fu_1320_p3 when (cmp_i_i_i_reg_2454(0) = '1') else 
        src_buf_V_1_1_fu_212;
    src_buf_V_1_4_2_fu_1726_p3 <= 
        src_buf_V_1_4_3_fu_1320_p3 when (cmp_i_i_i_reg_2454(0) = '1') else 
        src_buf_V_1_2_fu_216;
    src_buf_V_1_4_3_fu_1320_p3 <= 
        src_buf_V_1_4_fu_1188_p3 when (icmp_ln882_6_reg_2403_pp3_iter2_reg(0) = '1') else 
        src_buf_V_1_2_fu_216;
    src_buf_V_1_4_fu_1188_p3 <= 
        tmp_6_fu_1158_p7 when (spec_select2117_reg_2349(0) = '1') else 
        tmp_7_fu_1173_p7;
    src_buf_V_2_0_2_fu_1719_p3 <= 
        src_buf_V_2_4_3_fu_1313_p3 when (cmp_i_i_i_reg_2454(0) = '1') else 
        src_buf_V_2_0_1_fu_224;
    src_buf_V_2_1_1_fu_1712_p3 <= 
        src_buf_V_2_4_3_fu_1313_p3 when (cmp_i_i_i_reg_2454(0) = '1') else 
        src_buf_V_2_1_fu_228;
    src_buf_V_2_2_1_cast_fu_1551_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_buf_V_2_1_fu_228),11));
    src_buf_V_2_4_2_fu_1705_p3 <= 
        src_buf_V_2_4_3_fu_1313_p3 when (cmp_i_i_i_reg_2454(0) = '1') else 
        src_buf_V_2_2_fu_232;
    src_buf_V_2_4_3_fu_1313_p3 <= 
        src_buf_V_2_4_fu_1225_p3 when (icmp_ln882_6_reg_2403_pp3_iter2_reg(0) = '1') else 
        src_buf_V_2_2_fu_232;
    src_buf_V_2_4_fu_1225_p3 <= 
        tmp_8_fu_1195_p7 when (spec_select2133_reg_2354(0) = '1') else 
        tmp_9_fu_1210_p7;
    src_buf_V_3_0_2_fu_1698_p3 <= 
        src_buf_V_3_4_3_fu_1306_p3 when (cmp_i_i_i_reg_2454(0) = '1') else 
        src_buf_V_3_0_1_fu_240;
    src_buf_V_3_1_1_fu_1691_p3 <= 
        src_buf_V_3_4_3_fu_1306_p3 when (cmp_i_i_i_reg_2454(0) = '1') else 
        src_buf_V_3_1_fu_244;
    src_buf_V_3_3_1_cast_fu_1583_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_buf_V_3_2_fu_248),9));
    src_buf_V_3_4_2_fu_1684_p3 <= 
        src_buf_V_3_4_3_fu_1306_p3 when (cmp_i_i_i_reg_2454(0) = '1') else 
        src_buf_V_3_2_fu_248;
    src_buf_V_3_4_3_fu_1306_p3 <= 
        src_buf_V_3_4_fu_1262_p3 when (icmp_ln882_6_reg_2403_pp3_iter2_reg(0) = '1') else 
        src_buf_V_3_2_fu_248;
    src_buf_V_3_4_fu_1262_p3 <= 
        tmp_s_fu_1232_p7 when (spec_select2149_reg_2359(0) = '1') else 
        tmp_10_fu_1247_p7;
    src_buf_V_4_0_1_fu_1768_p3 <= 
        src_buf_V_4_4_fu_1334_p3 when (cmp_i_i_i_reg_2454(0) = '1') else 
        src_buf_V_4_0_fu_256;
    src_buf_V_4_0_2_fu_1775_p3 <= 
        src_buf_V_4_4_fu_1334_p3 when (cmp_i_i_i_reg_2454(0) = '1') else 
        src_buf_V_4_1_fu_260;
    src_buf_V_4_0_3_fu_1782_p3 <= 
        src_buf_V_4_4_fu_1334_p3 when (cmp_i_i_i_reg_2454(0) = '1') else 
        src_buf_V_4_2_fu_264;
    src_buf_V_4_4_fu_1334_p3 <= 
        empty_57_fu_1299_p3 when (icmp_ln882_6_reg_2403_pp3_iter2_reg(0) = '1') else 
        src_buf_V_4_2_fu_264;
    sub_i181_i_fu_862_p2 <= std_logic_vector(unsigned(ap_const_lv18_4) - unsigned(sub_i_i198_i_cast_fu_858_p1));
    sub_i_fu_824_p2 <= std_logic_vector(unsigned(conv_i_i_i47_fu_810_p1) + unsigned(ap_const_lv17_1FFFF));
        sub_i_i198_i_cast_fu_858_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_i_i198_i_fu_853_p2),18));

    sub_i_i198_i_fu_853_p2 <= std_logic_vector(unsigned(zext_ln882_3_fu_834_p1) - unsigned(sub_i_reg_2324));
    tmp24_fu_1917_p2 <= std_logic_vector(unsigned(add_ln695_11_cast_fu_1911_p1) + unsigned(tmp29_cast_fu_1914_p1));
    tmp29_cast_fu_1914_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp29_reg_2489),12));
    tmp29_fu_1555_p2 <= std_logic_vector(unsigned(src_buf_V_2_2_1_cast_fu_1551_p1) + unsigned(zext_ln695_fu_1399_p1));
    tmp30_cast_fu_1593_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp30_fu_1587_p2),10));
    tmp30_fu_1587_p2 <= std_logic_vector(unsigned(src_buf_V_3_3_1_cast_fu_1583_p1) + unsigned(zext_ln695_26_fu_1579_p1));
    tmp3_fu_1923_p3 <= (tmp24_fu_1917_p2 & ap_const_lv2_0);
    tmp42_fu_1941_p2 <= std_logic_vector(unsigned(p_cast16_fu_1935_p1) + unsigned(p_cast17_fu_1938_p1));
    tmp5_fu_1947_p3 <= (tmp42_fu_1941_p2 & ap_const_lv4_0);
    tmp_13_fu_898_p4 <= sub_i181_i_fu_862_p2(17 downto 1);
    tmp_14_fu_1012_p4 <= ap_phi_mux_empty_56_phi_fu_638_p4(12 downto 1);
    tmp_fu_872_p3 <= sub_i181_i_fu_862_p2(17 downto 17);
    trunc_ln324_1_fu_721_p1 <= row_ind_V_2_0_load_reg_2079(3 - 1 downto 0);
    trunc_ln324_2_fu_944_p1 <= row_ind_V_3_1_reg_567(3 - 1 downto 0);
    trunc_ln324_3_fu_948_p1 <= row_ind_V_2_reg_577(3 - 1 downto 0);
    trunc_ln324_4_fu_952_p1 <= row_ind_V_1_reg_588(3 - 1 downto 0);
    trunc_ln324_5_fu_956_p1 <= row_ind_V_0_reg_599(3 - 1 downto 0);
    trunc_ln324_6_fu_960_p1 <= row_ind_V_4_reg_610(3 - 1 downto 0);
    trunc_ln324_7_fu_1008_p1 <= tmp_3_fu_993_p7(3 - 1 downto 0);
    trunc_ln324_fu_717_p1 <= init_buf_reg_534(3 - 1 downto 0);
    wide_trip_count_fu_709_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(row_ind_V_4_0_load_reg_2091),64));
    zext_ln130_fu_1046_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_56_reg_634_pp3_iter1_reg),64));
    zext_ln1350_fu_1994_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1350_2_fu_1988_p2),16));
    zext_ln1501_1_fu_1361_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_buf_V_0_1_fu_196),9));
    zext_ln1501_2_fu_1365_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_buf_V_2_4_3_fu_1313_p3),9));
    zext_ln1501_3_fu_1375_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1501_fu_1369_p2),10));
    zext_ln1501_4_fu_1411_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_1403_p3),12));
    zext_ln1501_5_fu_1415_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_buf_V_1_1_fu_212),9));
    zext_ln1501_6_fu_1419_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_buf_V_2_0_1_fu_224),9));
    zext_ln1501_7_fu_1429_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1501_1_fu_1423_p2),10));
    zext_ln1501_8_fu_1433_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_buf_V_2_2_fu_232),9));
    zext_ln1501_fu_1357_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_buf_V_2_0_fu_220),9));
    zext_ln304_fu_677_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(row_ind_V_0_2_reg_523),13));
    zext_ln357_1_fu_1345_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_buf_V_0_4_3_fu_1327_p3),9));
    zext_ln357_fu_1341_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_s_fu_188),9));
    zext_ln538_1_fu_739_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_52_reg_544),64));
    zext_ln538_2_fu_1037_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_56_reg_634),64));
    zext_ln538_3_fu_1028_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_56_reg_634),64));
    zext_ln538_fu_706_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(row_ind_V_2_0_load_reg_2079),64));
    zext_ln674_1_fu_1353_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_buf_V_4_4_fu_1334_p3),9));
    zext_ln674_2_fu_1896_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln695_1_fu_1889_p3),14));
    zext_ln674_fu_1349_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_1_fu_252),9));
    zext_ln695_10_fu_1493_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln695_9_fu_1487_p2),10));
    zext_ln695_11_fu_1507_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_buf_V_4_2_fu_264),10));
    zext_ln695_12_fu_1561_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_buf_V_1_0_1_fu_208),9));
    zext_ln695_13_fu_1565_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_buf_V_1_2_fu_216),9));
    zext_ln695_14_fu_1575_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln695_11_fu_1569_p2),10));
    zext_ln695_15_fu_1511_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_buf_V_3_0_fu_236),9));
    zext_ln695_16_fu_1515_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_buf_V_3_4_3_fu_1306_p3),9));
    zext_ln695_17_fu_1955_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp5_fu_1947_p3),16));
    zext_ln695_18_fu_1609_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln695_12_fu_1603_p2),10));
    zext_ln695_19_fu_1629_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln695_14_fu_1623_p2),12));
    zext_ln695_1_fu_1379_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_buf_V_4_1_fu_260),9));
    zext_ln695_20_fu_1959_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln695_15_reg_2499),14));
    zext_ln695_21_fu_1968_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln695_16_fu_1962_p2),15));
    zext_ln695_22_fu_1978_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln695_17_fu_1972_p2),16));
    zext_ln695_23_fu_1531_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln695_18_fu_1525_p2),10));
    zext_ln695_24_fu_1541_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln695_19_fu_1535_p2),11));
    zext_ln695_25_fu_1931_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp3_fu_1923_p3),15));
    zext_ln695_26_fu_1579_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_buf_V_3_0_1_fu_240),9));
    zext_ln695_27_fu_1619_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln695_21_fu_1613_p2),10));
    zext_ln695_2_fu_1461_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_buf_V_0_0_fu_192),9));
    zext_ln695_3_fu_1389_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln695_6_fu_1383_p2),10));
    zext_ln695_4_fu_1475_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln695_5_fu_1469_p2),10));
    zext_ln695_5_fu_1437_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_buf_V_3_1_fu_244),9));
    zext_ln695_6_fu_1483_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_buf_V_4_0_fu_256),11));
    zext_ln695_7_fu_1447_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln695_8_fu_1441_p2),10));
    zext_ln695_8_fu_1465_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_buf_V_1_0_fu_204),9));
    zext_ln695_9_fu_1479_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_buf_V_1_4_3_fu_1320_p3),9));
    zext_ln695_fu_1399_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln695_3_fu_1393_p2),11));
    zext_ln882_1_fu_754_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_53_reg_556),16));
    zext_ln882_2_fu_830_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_54_reg_622),16));
    zext_ln882_3_fu_834_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_54_reg_622),17));
    zext_ln882_4_fu_964_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_empty_56_phi_fu_638_p4),16));
    zext_ln882_5_fu_968_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_empty_56_phi_fu_638_p4),14));
    zext_ln882_fu_724_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_empty_52_phi_fu_548_p4),16));
end behav;
