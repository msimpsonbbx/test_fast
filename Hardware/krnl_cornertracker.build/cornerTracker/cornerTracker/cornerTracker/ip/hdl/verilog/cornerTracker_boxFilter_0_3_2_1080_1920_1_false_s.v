// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module cornerTracker_boxFilter_0_3_2_1080_1920_1_false_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        gradx_2_41_dout,
        gradx_2_41_empty_n,
        gradx_2_41_read,
        gradx2g_44_din,
        gradx2g_44_full_n,
        gradx2g_44_write,
        p_src_mat_1_dout,
        p_src_mat_1_empty_n,
        p_src_mat_1_read,
        p_src_mat_2_dout,
        p_src_mat_2_empty_n,
        p_src_mat_2_read
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_state2 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [15:0] gradx_2_41_dout;
input   gradx_2_41_empty_n;
output   gradx_2_41_read;
output  [15:0] gradx2g_44_din;
input   gradx2g_44_full_n;
output   gradx2g_44_write;
input  [10:0] p_src_mat_1_dout;
input   p_src_mat_1_empty_n;
output   p_src_mat_1_read;
input  [10:0] p_src_mat_2_dout;
input   p_src_mat_2_empty_n;
output   p_src_mat_2_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg gradx_2_41_read;
reg gradx2g_44_write;
reg p_src_mat_1_read;
reg p_src_mat_2_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    p_src_mat_1_blk_n;
reg    p_src_mat_2_blk_n;
reg   [10:0] img_width_reg_54;
reg    ap_block_state1;
reg   [10:0] img_height_reg_59;
wire    grp_xFBoxFilter3x3_2_1080_1920_3_1_5_5_1920_false_s_fu_42_ap_start;
wire    grp_xFBoxFilter3x3_2_1080_1920_3_1_5_5_1920_false_s_fu_42_ap_done;
wire    grp_xFBoxFilter3x3_2_1080_1920_3_1_5_5_1920_false_s_fu_42_ap_idle;
wire    grp_xFBoxFilter3x3_2_1080_1920_3_1_5_5_1920_false_s_fu_42_ap_ready;
wire    grp_xFBoxFilter3x3_2_1080_1920_3_1_5_5_1920_false_s_fu_42_gradx_2_41_read;
wire   [15:0] grp_xFBoxFilter3x3_2_1080_1920_3_1_5_5_1920_false_s_fu_42_gradx2g_44_din;
wire    grp_xFBoxFilter3x3_2_1080_1920_3_1_5_5_1920_false_s_fu_42_gradx2g_44_write;
reg    grp_xFBoxFilter3x3_2_1080_1920_3_1_5_5_1920_false_s_fu_42_ap_start_reg;
reg    ap_block_state1_ignore_call8;
wire    ap_CS_fsm_state2;
reg   [1:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 2'd1;
#0 grp_xFBoxFilter3x3_2_1080_1920_3_1_5_5_1920_false_s_fu_42_ap_start_reg = 1'b0;
end

cornerTracker_xFBoxFilter3x3_2_1080_1920_3_1_5_5_1920_false_s grp_xFBoxFilter3x3_2_1080_1920_3_1_5_5_1920_false_s_fu_42(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_xFBoxFilter3x3_2_1080_1920_3_1_5_5_1920_false_s_fu_42_ap_start),
    .ap_done(grp_xFBoxFilter3x3_2_1080_1920_3_1_5_5_1920_false_s_fu_42_ap_done),
    .ap_idle(grp_xFBoxFilter3x3_2_1080_1920_3_1_5_5_1920_false_s_fu_42_ap_idle),
    .ap_ready(grp_xFBoxFilter3x3_2_1080_1920_3_1_5_5_1920_false_s_fu_42_ap_ready),
    .gradx_2_41_dout(gradx_2_41_dout),
    .gradx_2_41_empty_n(gradx_2_41_empty_n),
    .gradx_2_41_read(grp_xFBoxFilter3x3_2_1080_1920_3_1_5_5_1920_false_s_fu_42_gradx_2_41_read),
    .gradx2g_44_din(grp_xFBoxFilter3x3_2_1080_1920_3_1_5_5_1920_false_s_fu_42_gradx2g_44_din),
    .gradx2g_44_full_n(gradx2g_44_full_n),
    .gradx2g_44_write(grp_xFBoxFilter3x3_2_1080_1920_3_1_5_5_1920_false_s_fu_42_gradx2g_44_write),
    .img_height(img_height_reg_59),
    .img_width(img_width_reg_54)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((grp_xFBoxFilter3x3_2_1080_1920_3_1_5_5_1920_false_s_fu_42_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_xFBoxFilter3x3_2_1080_1920_3_1_5_5_1920_false_s_fu_42_ap_start_reg <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) | (p_src_mat_2_empty_n == 1'b0) | (p_src_mat_1_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_xFBoxFilter3x3_2_1080_1920_3_1_5_5_1920_false_s_fu_42_ap_start_reg <= 1'b1;
        end else if ((grp_xFBoxFilter3x3_2_1080_1920_3_1_5_5_1920_false_s_fu_42_ap_ready == 1'b1)) begin
            grp_xFBoxFilter3x3_2_1080_1920_3_1_5_5_1920_false_s_fu_42_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (p_src_mat_2_empty_n == 1'b0) | (p_src_mat_1_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        img_height_reg_59 <= p_src_mat_1_dout;
        img_width_reg_54 <= p_src_mat_2_dout;
    end
end

always @ (*) begin
    if (((grp_xFBoxFilter3x3_2_1080_1920_3_1_5_5_1920_false_s_fu_42_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_xFBoxFilter3x3_2_1080_1920_3_1_5_5_1920_false_s_fu_42_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        gradx2g_44_write = grp_xFBoxFilter3x3_2_1080_1920_3_1_5_5_1920_false_s_fu_42_gradx2g_44_write;
    end else begin
        gradx2g_44_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        gradx_2_41_read = grp_xFBoxFilter3x3_2_1080_1920_3_1_5_5_1920_false_s_fu_42_gradx_2_41_read;
    end else begin
        gradx_2_41_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_src_mat_1_blk_n = p_src_mat_1_empty_n;
    end else begin
        p_src_mat_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (p_src_mat_2_empty_n == 1'b0) | (p_src_mat_1_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_src_mat_1_read = 1'b1;
    end else begin
        p_src_mat_1_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_src_mat_2_blk_n = p_src_mat_2_empty_n;
    end else begin
        p_src_mat_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (p_src_mat_2_empty_n == 1'b0) | (p_src_mat_1_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_src_mat_2_read = 1'b1;
    end else begin
        p_src_mat_2_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (p_src_mat_2_empty_n == 1'b0) | (p_src_mat_1_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_xFBoxFilter3x3_2_1080_1920_3_1_5_5_1920_false_s_fu_42_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (p_src_mat_2_empty_n == 1'b0) | (p_src_mat_1_empty_n == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state1_ignore_call8 = ((ap_start == 1'b0) | (p_src_mat_2_empty_n == 1'b0) | (p_src_mat_1_empty_n == 1'b0) | (ap_done_reg == 1'b1));
end

assign gradx2g_44_din = grp_xFBoxFilter3x3_2_1080_1920_3_1_5_5_1920_false_s_fu_42_gradx2g_44_din;

assign grp_xFBoxFilter3x3_2_1080_1920_3_1_5_5_1920_false_s_fu_42_ap_start = grp_xFBoxFilter3x3_2_1080_1920_3_1_5_5_1920_false_s_fu_42_ap_start_reg;

endmodule //cornerTracker_boxFilter_0_3_2_1080_1920_1_false_s
