// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module cornerTracker_xFBoxFilter3x3_2_1080_1920_3_1_5_5_1920_false_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        gradx_2_41_dout,
        gradx_2_41_empty_n,
        gradx_2_41_read,
        gradx2g_44_din,
        gradx2g_44_full_n,
        gradx2g_44_write,
        img_height,
        img_width
);

parameter    ap_ST_fsm_state1 = 11'd1;
parameter    ap_ST_fsm_pp0_stage0 = 11'd2;
parameter    ap_ST_fsm_state4 = 11'd4;
parameter    ap_ST_fsm_state5 = 11'd8;
parameter    ap_ST_fsm_pp1_stage0 = 11'd16;
parameter    ap_ST_fsm_state16 = 11'd32;
parameter    ap_ST_fsm_state17 = 11'd64;
parameter    ap_ST_fsm_state18 = 11'd128;
parameter    ap_ST_fsm_state19 = 11'd256;
parameter    ap_ST_fsm_state20 = 11'd512;
parameter    ap_ST_fsm_state21 = 11'd1024;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] gradx_2_41_dout;
input   gradx_2_41_empty_n;
output   gradx_2_41_read;
output  [15:0] gradx2g_44_din;
input   gradx2g_44_full_n;
output   gradx2g_44_write;
input  [10:0] img_height;
input  [10:0] img_width;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg gradx_2_41_read;
reg gradx2g_44_write;

(* fsm_encoding = "none" *) reg   [10:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    gradx_2_41_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln241_reg_621;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] icmp_ln133_reg_682;
reg   [0:0] cmp_i_i421_i_reg_674;
reg    gradx2g_44_blk_n;
reg    ap_enable_reg_pp1_iter9;
reg   [0:0] icmp_ln874_4_reg_709;
reg   [0:0] icmp_ln874_4_reg_709_pp1_iter8_reg;
wire    ap_CS_fsm_state21;
reg   [10:0] empty_reg_239;
reg   [10:0] empty_112_reg_274;
reg   [10:0] empty_112_reg_274_pp1_iter1_reg;
wire    ap_block_state6_pp1_stage0_iter0;
reg    ap_predicate_op105_read_state7;
reg    ap_block_state7_pp1_stage0_iter1;
wire    ap_block_state8_pp1_stage0_iter2;
wire    ap_block_state9_pp1_stage0_iter3;
wire    ap_block_state10_pp1_stage0_iter4;
wire    ap_block_state11_pp1_stage0_iter5;
wire    ap_block_state12_pp1_stage0_iter6;
wire    ap_block_state13_pp1_stage0_iter7;
wire    ap_block_state14_pp1_stage0_iter8;
reg    ap_block_state15_pp1_stage0_iter9;
reg    ap_block_pp1_stage0_11001;
reg   [15:0] agg_tmp23_i_i_0_reg_286;
reg   [15:0] agg_tmp23_i_i_0_reg_286_pp1_iter4_reg;
reg   [15:0] agg_tmp20_i_i_0_reg_298;
reg   [15:0] agg_tmp12_i_i_0_reg_311;
reg   [15:0] agg_tmp12_i_i_0_reg_311_pp1_iter4_reg;
reg   [15:0] agg_tmp9_i_i_0_reg_323;
reg   [15:0] agg_tmp2_i_i_0_reg_336;
reg   [15:0] agg_tmp2_i_i_0_reg_336_pp1_iter4_reg;
reg   [15:0] agg_tmp104_0_reg_348;
wire   [0:0] icmp_ln241_fu_393_p2;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state3_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [10:0] add_ln695_fu_398_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [63:0] zext_ln538_fu_404_p1;
reg   [63:0] zext_ln538_reg_630;
wire   [11:0] img_height_cast2_fu_409_p1;
reg   [11:0] img_height_cast2_reg_660;
wire    ap_CS_fsm_state4;
wire   [11:0] add_ln257_fu_412_p2;
reg   [11:0] add_ln257_reg_665;
wire   [0:0] icmp_ln257_fu_418_p2;
wire    ap_CS_fsm_state5;
wire   [0:0] cmp_i_i421_i_fu_498_p2;
wire   [1:0] trunc_ln324_fu_503_p1;
reg   [1:0] trunc_ln324_reg_678;
wire   [0:0] icmp_ln133_fu_507_p2;
reg   [0:0] icmp_ln133_reg_682_pp1_iter1_reg;
reg   [0:0] icmp_ln133_reg_682_pp1_iter2_reg;
reg   [0:0] icmp_ln133_reg_682_pp1_iter3_reg;
reg   [0:0] icmp_ln133_reg_682_pp1_iter4_reg;
wire   [10:0] add_ln695_6_fu_512_p2;
reg   [10:0] add_ln695_6_reg_686;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] icmp_ln874_4_fu_539_p2;
reg   [0:0] icmp_ln874_4_reg_709_pp1_iter3_reg;
reg   [0:0] icmp_ln874_4_reg_709_pp1_iter4_reg;
reg   [0:0] icmp_ln874_4_reg_709_pp1_iter5_reg;
reg   [0:0] icmp_ln874_4_reg_709_pp1_iter6_reg;
reg   [0:0] icmp_ln874_4_reg_709_pp1_iter7_reg;
wire   [15:0] tmp_fu_548_p5;
reg   [15:0] tmp_reg_713;
reg    ap_enable_reg_pp1_iter3;
wire   [15:0] tmp_3_fu_560_p5;
reg   [15:0] tmp_3_reg_719;
wire   [15:0] tmp_4_fu_572_p5;
reg   [15:0] tmp_4_reg_725;
wire   [12:0] select_ln303_fu_596_p3;
reg   [12:0] select_ln303_reg_731;
wire    ap_CS_fsm_state16;
wire   [11:0] add_ln695_5_fu_604_p2;
reg   [11:0] add_ln695_5_reg_736;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_flush_enable;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter4;
reg    ap_condition_pp1_exit_iter3_state9;
reg    ap_enable_reg_pp1_iter5;
reg    ap_enable_reg_pp1_iter6;
reg    ap_enable_reg_pp1_iter7;
reg    ap_enable_reg_pp1_iter8;
wire   [10:0] buf_0_V_address0;
reg    buf_0_V_ce0;
wire   [15:0] buf_0_V_q0;
reg   [10:0] buf_0_V_address1;
reg    buf_0_V_ce1;
reg    buf_0_V_we1;
reg   [15:0] buf_0_V_d1;
wire   [10:0] buf_1_V_address0;
reg    buf_1_V_ce0;
wire   [15:0] buf_1_V_q0;
reg   [10:0] buf_1_V_address1;
reg    buf_1_V_ce1;
reg    buf_1_V_we1;
reg   [15:0] buf_1_V_d1;
wire   [10:0] buf_2_V_address0;
reg    buf_2_V_ce0;
wire   [15:0] buf_2_V_q0;
reg   [10:0] buf_2_V_address1;
reg    buf_2_V_ce1;
reg    buf_2_V_we1;
reg   [15:0] buf_2_V_d1;
reg   [15:0] grp_xFApplyMask3x3_3_s_fu_361_p_i00;
reg   [15:0] grp_xFApplyMask3x3_3_s_fu_361_p_i02;
reg   [15:0] grp_xFApplyMask3x3_3_s_fu_361_p_i10;
reg   [15:0] grp_xFApplyMask3x3_3_s_fu_361_p_i12;
reg   [15:0] grp_xFApplyMask3x3_3_s_fu_361_p_i20;
reg   [15:0] grp_xFApplyMask3x3_3_s_fu_361_p_i22;
wire   [15:0] grp_xFApplyMask3x3_3_s_fu_361_ap_return;
reg    grp_xFApplyMask3x3_3_s_fu_361_ap_ce;
wire    ap_block_state6_pp1_stage0_iter0_ignore_call13;
reg    ap_block_state7_pp1_stage0_iter1_ignore_call13;
wire    ap_block_state8_pp1_stage0_iter2_ignore_call13;
wire    ap_block_state9_pp1_stage0_iter3_ignore_call13;
wire    ap_block_state10_pp1_stage0_iter4_ignore_call13;
wire    ap_block_state11_pp1_stage0_iter5_ignore_call13;
wire    ap_block_state12_pp1_stage0_iter6_ignore_call13;
wire    ap_block_state13_pp1_stage0_iter7_ignore_call13;
wire    ap_block_state14_pp1_stage0_iter8_ignore_call13;
reg    ap_block_state15_pp1_stage0_iter9_ignore_call13;
reg    ap_block_pp1_stage0_11001_ignoreCallOp140;
reg   [11:0] empty_110_reg_250;
wire   [12:0] ap_phi_mux_empty_111_phi_fu_266_p4;
reg   [12:0] empty_111_reg_262;
reg   [10:0] ap_phi_mux_empty_112_phi_fu_278_p4;
reg   [15:0] ap_phi_mux_agg_tmp20_i_i_0_phi_fu_302_p4;
reg   [15:0] ap_phi_mux_agg_tmp9_i_i_0_phi_fu_327_p4;
reg   [15:0] ap_phi_mux_agg_tmp104_0_phi_fu_352_p4;
wire   [63:0] zext_ln538_3_fu_518_p1;
wire   [63:0] zext_ln538_2_fu_525_p1;
wire   [63:0] zext_ln324_fu_532_p1;
reg   [1:0] empty_107_fu_92;
wire   [1:0] select_ln272_fu_459_p3;
wire   [1:0] grp_load_fu_384_p1;
reg   [1:0] empty_108_fu_96;
wire   [1:0] select_ln272_1_fu_467_p3;
reg   [1:0] empty_109_fu_100;
wire   [1:0] select_ln272_2_fu_475_p3;
reg    ap_block_pp1_stage0_01001;
wire   [0:0] icmp_ln874_fu_453_p2;
wire   [12:0] add_ln695_4_fu_584_p2;
wire   [0:0] icmp_ln874_3_fu_590_p2;
reg   [10:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_condition_713;
reg    ap_condition_717;
reg    ap_condition_441;

// power-on initialization
initial begin
#0 ap_CS_fsm = 11'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter5 = 1'b0;
#0 ap_enable_reg_pp1_iter6 = 1'b0;
#0 ap_enable_reg_pp1_iter7 = 1'b0;
#0 ap_enable_reg_pp1_iter8 = 1'b0;
end

cornerTracker_xFBoxFilter3x3_2_1080_1920_3_1_5_5_1920_false_s_buf_0_V #(
    .DataWidth( 16 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
buf_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_0_V_address0),
    .ce0(buf_0_V_ce0),
    .q0(buf_0_V_q0),
    .address1(buf_0_V_address1),
    .ce1(buf_0_V_ce1),
    .we1(buf_0_V_we1),
    .d1(buf_0_V_d1)
);

cornerTracker_xFBoxFilter3x3_2_1080_1920_3_1_5_5_1920_false_s_buf_0_V #(
    .DataWidth( 16 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
buf_1_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_1_V_address0),
    .ce0(buf_1_V_ce0),
    .q0(buf_1_V_q0),
    .address1(buf_1_V_address1),
    .ce1(buf_1_V_ce1),
    .we1(buf_1_V_we1),
    .d1(buf_1_V_d1)
);

cornerTracker_xFBoxFilter3x3_2_1080_1920_3_1_5_5_1920_false_s_buf_0_V #(
    .DataWidth( 16 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
buf_2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_2_V_address0),
    .ce0(buf_2_V_ce0),
    .q0(buf_2_V_q0),
    .address1(buf_2_V_address1),
    .ce1(buf_2_V_ce1),
    .we1(buf_2_V_we1),
    .d1(buf_2_V_d1)
);

cornerTracker_xFApplyMask3x3_3_s grp_xFApplyMask3x3_3_s_fu_361(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .p_i00(grp_xFApplyMask3x3_3_s_fu_361_p_i00),
    .p_i01(agg_tmp2_i_i_0_reg_336),
    .p_i02(grp_xFApplyMask3x3_3_s_fu_361_p_i02),
    .p_i10(grp_xFApplyMask3x3_3_s_fu_361_p_i10),
    .p_i11(agg_tmp12_i_i_0_reg_311),
    .p_i12(grp_xFApplyMask3x3_3_s_fu_361_p_i12),
    .p_i20(grp_xFApplyMask3x3_3_s_fu_361_p_i20),
    .p_i21(agg_tmp23_i_i_0_reg_286),
    .p_i22(grp_xFApplyMask3x3_3_s_fu_361_p_i22),
    .ap_return(grp_xFApplyMask3x3_3_s_fu_361_ap_return),
    .ap_ce(grp_xFApplyMask3x3_3_s_fu_361_ap_ce)
);

cornerTracker_mux_32_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_32_16_1_1_U175(
    .din0(buf_0_V_q0),
    .din1(buf_1_V_q0),
    .din2(buf_2_V_q0),
    .din3(empty_109_fu_100),
    .dout(tmp_fu_548_p5)
);

cornerTracker_mux_32_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_32_16_1_1_U176(
    .din0(buf_0_V_q0),
    .din1(buf_1_V_q0),
    .din2(buf_2_V_q0),
    .din3(empty_108_fu_96),
    .dout(tmp_3_fu_560_p5)
);

cornerTracker_mux_32_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_32_16_1_1_U177(
    .din0(buf_0_V_q0),
    .din1(buf_1_V_q0),
    .din2(buf_2_V_q0),
    .din3(empty_107_fu_92),
    .dout(tmp_4_fu_572_p5)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp1_flush_enable)) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln257_fu_418_p2 == 1'd0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter3_state9)) begin
                ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter2;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter8 <= ap_enable_reg_pp1_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter9 <= ap_enable_reg_pp1_iter8;
        end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln257_fu_418_p2 == 1'd0))) begin
            ap_enable_reg_pp1_iter9 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter5 == 1'b1) & (icmp_ln133_reg_682_pp1_iter4_reg == 1'd0))) begin
        agg_tmp104_0_reg_348 <= agg_tmp2_i_i_0_reg_336_pp1_iter4_reg;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln257_fu_418_p2 == 1'd0))) begin
        agg_tmp104_0_reg_348 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln133_reg_682_pp1_iter3_reg == 1'd0))) begin
        agg_tmp12_i_i_0_reg_311 <= tmp_3_reg_719;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln257_fu_418_p2 == 1'd0))) begin
        agg_tmp12_i_i_0_reg_311 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter5 == 1'b1) & (icmp_ln133_reg_682_pp1_iter4_reg == 1'd0))) begin
        agg_tmp20_i_i_0_reg_298 <= agg_tmp23_i_i_0_reg_286_pp1_iter4_reg;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln257_fu_418_p2 == 1'd0))) begin
        agg_tmp20_i_i_0_reg_298 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln133_reg_682_pp1_iter3_reg == 1'd0))) begin
        agg_tmp23_i_i_0_reg_286 <= tmp_4_reg_725;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln257_fu_418_p2 == 1'd0))) begin
        agg_tmp23_i_i_0_reg_286 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln133_reg_682_pp1_iter3_reg == 1'd0))) begin
        agg_tmp2_i_i_0_reg_336 <= tmp_reg_713;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln257_fu_418_p2 == 1'd0))) begin
        agg_tmp2_i_i_0_reg_336 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter5 == 1'b1) & (icmp_ln133_reg_682_pp1_iter4_reg == 1'd0))) begin
        agg_tmp9_i_i_0_reg_323 <= agg_tmp12_i_i_0_reg_311_pp1_iter4_reg;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln257_fu_418_p2 == 1'd0))) begin
        agg_tmp9_i_i_0_reg_323 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln257_fu_418_p2 == 1'd0))) begin
        if ((~(ap_phi_mux_empty_111_phi_fu_266_p4 == 13'd2) & ~(ap_phi_mux_empty_111_phi_fu_266_p4 == 13'd0))) begin
            empty_107_fu_92 <= select_ln272_fu_459_p3;
        end else if ((ap_phi_mux_empty_111_phi_fu_266_p4 == 13'd2)) begin
            empty_107_fu_92 <= 2'd2;
        end else if ((ap_phi_mux_empty_111_phi_fu_266_p4 == 13'd0)) begin
            empty_107_fu_92 <= 2'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln257_fu_418_p2 == 1'd0))) begin
        if ((~(ap_phi_mux_empty_111_phi_fu_266_p4 == 13'd2) & ~(ap_phi_mux_empty_111_phi_fu_266_p4 == 13'd0))) begin
            empty_108_fu_96 <= select_ln272_1_fu_467_p3;
        end else if ((ap_phi_mux_empty_111_phi_fu_266_p4 == 13'd2)) begin
            empty_108_fu_96 <= 2'd1;
        end else if ((ap_phi_mux_empty_111_phi_fu_266_p4 == 13'd0)) begin
            empty_108_fu_96 <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln257_fu_418_p2 == 1'd0))) begin
        if ((~(ap_phi_mux_empty_111_phi_fu_266_p4 == 13'd2) & ~(ap_phi_mux_empty_111_phi_fu_266_p4 == 13'd0))) begin
            empty_109_fu_100 <= select_ln272_2_fu_475_p3;
        end else if ((ap_phi_mux_empty_111_phi_fu_266_p4 == 13'd2)) begin
            empty_109_fu_100 <= 2'd0;
        end else if ((ap_phi_mux_empty_111_phi_fu_266_p4 == 13'd0)) begin
            empty_109_fu_100 <= 2'd1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((gradx2g_44_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state21))) begin
        empty_110_reg_250 <= add_ln695_5_reg_736;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        empty_110_reg_250 <= 12'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((gradx2g_44_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state21))) begin
        empty_111_reg_262 <= select_ln303_reg_731;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        empty_111_reg_262 <= 13'd2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln133_reg_682 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        empty_112_reg_274 <= add_ln695_6_reg_686;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln257_fu_418_p2 == 1'd0))) begin
        empty_112_reg_274 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln241_fu_393_p2 == 1'd0))) begin
        empty_reg_239 <= add_ln695_fu_398_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        empty_reg_239 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        add_ln257_reg_665 <= add_ln257_fu_412_p2;
        img_height_cast2_reg_660[10 : 0] <= img_height_cast2_fu_409_p1[10 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        add_ln695_5_reg_736 <= add_ln695_5_fu_604_p2;
        select_ln303_reg_731 <= select_ln303_fu_596_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        add_ln695_6_reg_686 <= add_ln695_6_fu_512_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        agg_tmp12_i_i_0_reg_311_pp1_iter4_reg <= agg_tmp12_i_i_0_reg_311;
        agg_tmp23_i_i_0_reg_286_pp1_iter4_reg <= agg_tmp23_i_i_0_reg_286;
        agg_tmp2_i_i_0_reg_336_pp1_iter4_reg <= agg_tmp2_i_i_0_reg_336;
        icmp_ln133_reg_682_pp1_iter2_reg <= icmp_ln133_reg_682_pp1_iter1_reg;
        icmp_ln133_reg_682_pp1_iter3_reg <= icmp_ln133_reg_682_pp1_iter2_reg;
        icmp_ln133_reg_682_pp1_iter4_reg <= icmp_ln133_reg_682_pp1_iter3_reg;
        icmp_ln874_4_reg_709_pp1_iter3_reg <= icmp_ln874_4_reg_709;
        icmp_ln874_4_reg_709_pp1_iter4_reg <= icmp_ln874_4_reg_709_pp1_iter3_reg;
        icmp_ln874_4_reg_709_pp1_iter5_reg <= icmp_ln874_4_reg_709_pp1_iter4_reg;
        icmp_ln874_4_reg_709_pp1_iter6_reg <= icmp_ln874_4_reg_709_pp1_iter5_reg;
        icmp_ln874_4_reg_709_pp1_iter7_reg <= icmp_ln874_4_reg_709_pp1_iter6_reg;
        icmp_ln874_4_reg_709_pp1_iter8_reg <= icmp_ln874_4_reg_709_pp1_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln257_fu_418_p2 == 1'd0))) begin
        cmp_i_i421_i_reg_674 <= cmp_i_i421_i_fu_498_p2;
        trunc_ln324_reg_678 <= trunc_ln324_fu_503_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        empty_112_reg_274_pp1_iter1_reg <= empty_112_reg_274;
        icmp_ln133_reg_682 <= icmp_ln133_fu_507_p2;
        icmp_ln133_reg_682_pp1_iter1_reg <= icmp_ln133_reg_682;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln241_reg_621 <= icmp_ln241_fu_393_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln133_reg_682_pp1_iter1_reg == 1'd0))) begin
        icmp_ln874_4_reg_709 <= icmp_ln874_4_fu_539_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1) & (icmp_ln133_reg_682_pp1_iter2_reg == 1'd0))) begin
        tmp_3_reg_719 <= tmp_3_fu_560_p5;
        tmp_4_reg_725 <= tmp_4_fu_572_p5;
        tmp_reg_713 <= tmp_fu_548_p5;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln241_fu_393_p2 == 1'd0))) begin
        zext_ln538_reg_630[10 : 0] <= zext_ln538_fu_404_p1[10 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln241_fu_393_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        ap_condition_pp1_exit_iter3_state9 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter3_state9 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln133_fu_507_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_condition_pp1_flush_enable = 1'b1;
    end else begin
        ap_condition_pp1_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)) | ((1'b1 == ap_CS_fsm_state5) & (icmp_ln257_fu_418_p2 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter9 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter8 == 1'b0) & (ap_enable_reg_pp1_iter7 == 1'b0) & (ap_enable_reg_pp1_iter6 == 1'b0) & (ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter5 == 1'b1) & (icmp_ln133_reg_682_pp1_iter4_reg == 1'd0))) begin
        ap_phi_mux_agg_tmp104_0_phi_fu_352_p4 = agg_tmp2_i_i_0_reg_336_pp1_iter4_reg;
    end else begin
        ap_phi_mux_agg_tmp104_0_phi_fu_352_p4 = agg_tmp104_0_reg_348;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter5 == 1'b1) & (icmp_ln133_reg_682_pp1_iter4_reg == 1'd0))) begin
        ap_phi_mux_agg_tmp20_i_i_0_phi_fu_302_p4 = agg_tmp23_i_i_0_reg_286_pp1_iter4_reg;
    end else begin
        ap_phi_mux_agg_tmp20_i_i_0_phi_fu_302_p4 = agg_tmp20_i_i_0_reg_298;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter5 == 1'b1) & (icmp_ln133_reg_682_pp1_iter4_reg == 1'd0))) begin
        ap_phi_mux_agg_tmp9_i_i_0_phi_fu_327_p4 = agg_tmp12_i_i_0_reg_311_pp1_iter4_reg;
    end else begin
        ap_phi_mux_agg_tmp9_i_i_0_phi_fu_327_p4 = agg_tmp9_i_i_0_reg_323;
    end
end

always @ (*) begin
    if (((icmp_ln133_reg_682 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_empty_112_phi_fu_278_p4 = add_ln695_6_reg_686;
    end else begin
        ap_phi_mux_empty_112_phi_fu_278_p4 = empty_112_reg_274;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln257_fu_418_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((cmp_i_i421_i_reg_674 == 1'd1) & (icmp_ln133_reg_682 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (trunc_ln324_reg_678 == 2'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        buf_0_V_address1 = zext_ln538_2_fu_525_p1;
    end else if (((cmp_i_i421_i_reg_674 == 1'd0) & (icmp_ln133_reg_682 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (grp_load_fu_384_p1 == 2'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        buf_0_V_address1 = zext_ln538_3_fu_518_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        buf_0_V_address1 = zext_ln538_fu_404_p1;
    end else begin
        buf_0_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        buf_0_V_ce0 = 1'b1;
    end else begin
        buf_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((cmp_i_i421_i_reg_674 == 1'd1) & (icmp_ln133_reg_682 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (trunc_ln324_reg_678 == 2'd0) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((cmp_i_i421_i_reg_674 == 1'd0) & (icmp_ln133_reg_682 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (grp_load_fu_384_p1 == 2'd0) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        buf_0_V_ce1 = 1'b1;
    end else begin
        buf_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((cmp_i_i421_i_reg_674 == 1'd1) & (icmp_ln133_reg_682 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (trunc_ln324_reg_678 == 2'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        buf_0_V_d1 = gradx_2_41_dout;
    end else if ((((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((cmp_i_i421_i_reg_674 == 1'd0) & (icmp_ln133_reg_682 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (grp_load_fu_384_p1 == 2'd0) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        buf_0_V_d1 = 16'd0;
    end else begin
        buf_0_V_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((cmp_i_i421_i_reg_674 == 1'd1) & (icmp_ln133_reg_682 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (trunc_ln324_reg_678 == 2'd0) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((cmp_i_i421_i_reg_674 == 1'd0) & (icmp_ln133_reg_682 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (grp_load_fu_384_p1 == 2'd0) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln241_fu_393_p2 == 1'd0)))) begin
        buf_0_V_we1 = 1'b1;
    end else begin
        buf_0_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((cmp_i_i421_i_reg_674 == 1'd1) & (icmp_ln133_reg_682 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (trunc_ln324_reg_678 == 2'd1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        buf_1_V_address1 = zext_ln538_2_fu_525_p1;
    end else if (((cmp_i_i421_i_reg_674 == 1'd0) & (icmp_ln133_reg_682 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (grp_load_fu_384_p1 == 2'd1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        buf_1_V_address1 = zext_ln538_3_fu_518_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf_1_V_address1 = zext_ln538_reg_630;
    end else begin
        buf_1_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        buf_1_V_ce0 = 1'b1;
    end else begin
        buf_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((cmp_i_i421_i_reg_674 == 1'd1) & (icmp_ln133_reg_682 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (trunc_ln324_reg_678 == 2'd1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((cmp_i_i421_i_reg_674 == 1'd0) & (icmp_ln133_reg_682 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (grp_load_fu_384_p1 == 2'd1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        buf_1_V_ce1 = 1'b1;
    end else begin
        buf_1_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((cmp_i_i421_i_reg_674 == 1'd0) & (icmp_ln133_reg_682 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (grp_load_fu_384_p1 == 2'd1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        buf_1_V_d1 = 16'd0;
    end else if ((((cmp_i_i421_i_reg_674 == 1'd1) & (icmp_ln133_reg_682 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (trunc_ln324_reg_678 == 2'd1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        buf_1_V_d1 = gradx_2_41_dout;
    end else begin
        buf_1_V_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((cmp_i_i421_i_reg_674 == 1'd1) & (icmp_ln133_reg_682 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (trunc_ln324_reg_678 == 2'd1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((icmp_ln241_reg_621 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((cmp_i_i421_i_reg_674 == 1'd0) & (icmp_ln133_reg_682 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (grp_load_fu_384_p1 == 2'd1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        buf_1_V_we1 = 1'b1;
    end else begin
        buf_1_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_441)) begin
        if ((1'b1 == ap_condition_717)) begin
            buf_2_V_address1 = zext_ln538_2_fu_525_p1;
        end else if ((1'b1 == ap_condition_713)) begin
            buf_2_V_address1 = zext_ln538_3_fu_518_p1;
        end else begin
            buf_2_V_address1 = 'bx;
        end
    end else begin
        buf_2_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        buf_2_V_ce0 = 1'b1;
    end else begin
        buf_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((~(trunc_ln324_reg_678 == 2'd1) & ~(trunc_ln324_reg_678 == 2'd0) & (cmp_i_i421_i_reg_674 == 1'd1) & (icmp_ln133_reg_682 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | (~(grp_load_fu_384_p1 == 2'd1) & ~(grp_load_fu_384_p1 == 2'd0) & (cmp_i_i421_i_reg_674 == 1'd0) & (icmp_ln133_reg_682 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        buf_2_V_ce1 = 1'b1;
    end else begin
        buf_2_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_441)) begin
        if ((1'b1 == ap_condition_717)) begin
            buf_2_V_d1 = gradx_2_41_dout;
        end else if ((1'b1 == ap_condition_713)) begin
            buf_2_V_d1 = 16'd0;
        end else begin
            buf_2_V_d1 = 'bx;
        end
    end else begin
        buf_2_V_d1 = 'bx;
    end
end

always @ (*) begin
    if (((~(trunc_ln324_reg_678 == 2'd1) & ~(trunc_ln324_reg_678 == 2'd0) & (cmp_i_i421_i_reg_674 == 1'd1) & (icmp_ln133_reg_682 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | (~(grp_load_fu_384_p1 == 2'd1) & ~(grp_load_fu_384_p1 == 2'd0) & (cmp_i_i421_i_reg_674 == 1'd0) & (icmp_ln133_reg_682 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        buf_2_V_we1 = 1'b1;
    end else begin
        buf_2_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | ((icmp_ln874_4_reg_709_pp1_iter8_reg == 1'd0) & (ap_enable_reg_pp1_iter9 == 1'b1) & (1'b0 == ap_block_pp1_stage0)))) begin
        gradx2g_44_blk_n = gradx2g_44_full_n;
    end else begin
        gradx2g_44_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((icmp_ln874_4_reg_709_pp1_iter8_reg == 1'd0) & (ap_enable_reg_pp1_iter9 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)) | ((gradx2g_44_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state21)))) begin
        gradx2g_44_write = 1'b1;
    end else begin
        gradx2g_44_write = 1'b0;
    end
end

always @ (*) begin
    if ((((cmp_i_i421_i_reg_674 == 1'd1) & (icmp_ln133_reg_682 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((icmp_ln241_reg_621 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        gradx_2_41_blk_n = gradx_2_41_empty_n;
    end else begin
        gradx_2_41_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_predicate_op105_read_state7 == 1'b1)) | ((icmp_ln241_reg_621 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        gradx_2_41_read = 1'b1;
    end else begin
        gradx_2_41_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) | (1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_block_pp1_stage0_11001_ignoreCallOp140)) | ((gradx2g_44_full_n == 1'b0) & (1'b1 == ap_CS_fsm_state21)))) begin
        grp_xFApplyMask3x3_3_s_fu_361_ap_ce = 1'b0;
    end else begin
        grp_xFApplyMask3x3_3_s_fu_361_ap_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_xFApplyMask3x3_3_s_fu_361_p_i00 = agg_tmp104_0_reg_348;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln133_reg_682_pp1_iter3_reg == 1'd0))) begin
        grp_xFApplyMask3x3_3_s_fu_361_p_i00 = ap_phi_mux_agg_tmp104_0_phi_fu_352_p4;
    end else begin
        grp_xFApplyMask3x3_3_s_fu_361_p_i00 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_xFApplyMask3x3_3_s_fu_361_p_i02 = 16'd0;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln133_reg_682_pp1_iter3_reg == 1'd0))) begin
        grp_xFApplyMask3x3_3_s_fu_361_p_i02 = tmp_reg_713;
    end else begin
        grp_xFApplyMask3x3_3_s_fu_361_p_i02 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_xFApplyMask3x3_3_s_fu_361_p_i10 = agg_tmp9_i_i_0_reg_323;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln133_reg_682_pp1_iter3_reg == 1'd0))) begin
        grp_xFApplyMask3x3_3_s_fu_361_p_i10 = ap_phi_mux_agg_tmp9_i_i_0_phi_fu_327_p4;
    end else begin
        grp_xFApplyMask3x3_3_s_fu_361_p_i10 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_xFApplyMask3x3_3_s_fu_361_p_i12 = 16'd0;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln133_reg_682_pp1_iter3_reg == 1'd0))) begin
        grp_xFApplyMask3x3_3_s_fu_361_p_i12 = tmp_3_reg_719;
    end else begin
        grp_xFApplyMask3x3_3_s_fu_361_p_i12 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_xFApplyMask3x3_3_s_fu_361_p_i20 = agg_tmp20_i_i_0_reg_298;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln133_reg_682_pp1_iter3_reg == 1'd0))) begin
        grp_xFApplyMask3x3_3_s_fu_361_p_i20 = ap_phi_mux_agg_tmp20_i_i_0_phi_fu_302_p4;
    end else begin
        grp_xFApplyMask3x3_3_s_fu_361_p_i20 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_xFApplyMask3x3_3_s_fu_361_p_i22 = 16'd0;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln133_reg_682_pp1_iter3_reg == 1'd0))) begin
        grp_xFApplyMask3x3_3_s_fu_361_p_i22 = tmp_4_reg_725;
    end else begin
        grp_xFApplyMask3x3_3_s_fu_361_p_i22 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln241_fu_393_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln241_fu_393_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln257_fu_418_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b1)) & ~((ap_enable_reg_pp1_iter9 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter8 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter9 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter8 == 1'b0)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            if (((gradx2g_44_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln257_fu_412_p2 = (img_height_cast2_fu_409_p1 + 12'd1);

assign add_ln695_4_fu_584_p2 = (empty_111_reg_262 + 13'd1);

assign add_ln695_5_fu_604_p2 = (empty_110_reg_250 + 12'd1);

assign add_ln695_6_fu_512_p2 = (ap_phi_mux_empty_112_phi_fu_278_p4 + 11'd1);

assign add_ln695_fu_398_p2 = (empty_reg_239 + 11'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((icmp_ln241_reg_621 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (gradx_2_41_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((icmp_ln241_reg_621 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (gradx_2_41_empty_n == 1'b0));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_01001 = (((icmp_ln874_4_reg_709_pp1_iter8_reg == 1'd0) & (ap_enable_reg_pp1_iter9 == 1'b1) & (gradx2g_44_full_n == 1'b0)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (gradx_2_41_empty_n == 1'b0) & (ap_predicate_op105_read_state7 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage0_11001 = (((icmp_ln874_4_reg_709_pp1_iter8_reg == 1'd0) & (ap_enable_reg_pp1_iter9 == 1'b1) & (gradx2g_44_full_n == 1'b0)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (gradx_2_41_empty_n == 1'b0) & (ap_predicate_op105_read_state7 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage0_11001_ignoreCallOp140 = (((icmp_ln874_4_reg_709_pp1_iter8_reg == 1'd0) & (ap_enable_reg_pp1_iter9 == 1'b1) & (gradx2g_44_full_n == 1'b0)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (gradx_2_41_empty_n == 1'b0) & (ap_predicate_op105_read_state7 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = (((icmp_ln874_4_reg_709_pp1_iter8_reg == 1'd0) & (ap_enable_reg_pp1_iter9 == 1'b1) & (gradx2g_44_full_n == 1'b0)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (gradx_2_41_empty_n == 1'b0) & (ap_predicate_op105_read_state7 == 1'b1)));
end

assign ap_block_state10_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp1_stage0_iter4_ignore_call13 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp1_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp1_stage0_iter5_ignore_call13 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp1_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp1_stage0_iter6_ignore_call13 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp1_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp1_stage0_iter7_ignore_call13 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp1_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp1_stage0_iter8_ignore_call13 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state15_pp1_stage0_iter9 = ((icmp_ln874_4_reg_709_pp1_iter8_reg == 1'd0) & (gradx2g_44_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state15_pp1_stage0_iter9_ignore_call13 = ((icmp_ln874_4_reg_709_pp1_iter8_reg == 1'd0) & (gradx2g_44_full_n == 1'b0));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((icmp_ln241_reg_621 == 1'd0) & (gradx_2_41_empty_n == 1'b0));
end

assign ap_block_state6_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp1_stage0_iter0_ignore_call13 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_pp1_stage0_iter1 = ((gradx_2_41_empty_n == 1'b0) & (ap_predicate_op105_read_state7 == 1'b1));
end

always @ (*) begin
    ap_block_state7_pp1_stage0_iter1_ignore_call13 = ((gradx_2_41_empty_n == 1'b0) & (ap_predicate_op105_read_state7 == 1'b1));
end

assign ap_block_state8_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp1_stage0_iter2_ignore_call13 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp1_stage0_iter3_ignore_call13 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_441 = ((icmp_ln133_reg_682 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_713 = (~(grp_load_fu_384_p1 == 2'd1) & ~(grp_load_fu_384_p1 == 2'd0) & (cmp_i_i421_i_reg_674 == 1'd0));
end

always @ (*) begin
    ap_condition_717 = (~(trunc_ln324_reg_678 == 2'd1) & ~(trunc_ln324_reg_678 == 2'd0) & (cmp_i_i421_i_reg_674 == 1'd1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_phi_mux_empty_111_phi_fu_266_p4 = empty_111_reg_262;

always @ (*) begin
    ap_predicate_op105_read_state7 = ((cmp_i_i421_i_reg_674 == 1'd1) & (icmp_ln133_reg_682 == 1'd0));
end

assign buf_0_V_address0 = zext_ln324_fu_532_p1;

assign buf_1_V_address0 = zext_ln324_fu_532_p1;

assign buf_2_V_address0 = zext_ln324_fu_532_p1;

assign cmp_i_i421_i_fu_498_p2 = ((empty_110_reg_250 < img_height_cast2_reg_660) ? 1'b1 : 1'b0);

assign gradx2g_44_din = grp_xFApplyMask3x3_3_s_fu_361_ap_return;

assign grp_load_fu_384_p1 = empty_107_fu_92;

assign icmp_ln133_fu_507_p2 = ((ap_phi_mux_empty_112_phi_fu_278_p4 == img_width) ? 1'b1 : 1'b0);

assign icmp_ln241_fu_393_p2 = ((empty_reg_239 == img_width) ? 1'b1 : 1'b0);

assign icmp_ln257_fu_418_p2 = ((empty_110_reg_250 == add_ln257_reg_665) ? 1'b1 : 1'b0);

assign icmp_ln874_3_fu_590_p2 = ((add_ln695_4_fu_584_p2 == 13'd3) ? 1'b1 : 1'b0);

assign icmp_ln874_4_fu_539_p2 = ((empty_112_reg_274_pp1_iter1_reg == 11'd0) ? 1'b1 : 1'b0);

assign icmp_ln874_fu_453_p2 = ((empty_111_reg_262 == 13'd1) ? 1'b1 : 1'b0);

assign img_height_cast2_fu_409_p1 = img_height;

assign select_ln272_1_fu_467_p3 = ((icmp_ln874_fu_453_p2[0:0] === 1'b1) ? 2'd0 : empty_108_fu_96);

assign select_ln272_2_fu_475_p3 = ((icmp_ln874_fu_453_p2[0:0] === 1'b1) ? 2'd2 : empty_109_fu_100);

assign select_ln272_fu_459_p3 = ((icmp_ln874_fu_453_p2[0:0] === 1'b1) ? 2'd1 : empty_107_fu_92);

assign select_ln303_fu_596_p3 = ((icmp_ln874_3_fu_590_p2[0:0] === 1'b1) ? 13'd0 : add_ln695_4_fu_584_p2);

assign trunc_ln324_fu_503_p1 = empty_111_reg_262[1:0];

assign zext_ln324_fu_532_p1 = empty_112_reg_274_pp1_iter1_reg;

assign zext_ln538_2_fu_525_p1 = empty_112_reg_274;

assign zext_ln538_3_fu_518_p1 = empty_112_reg_274;

assign zext_ln538_fu_404_p1 = empty_reg_239;

always @ (posedge ap_clk) begin
    zext_ln538_reg_630[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    img_height_cast2_reg_660[11] <= 1'b0;
end

endmodule //cornerTracker_xFBoxFilter3x3_2_1080_1920_3_1_5_5_1920_false_s
