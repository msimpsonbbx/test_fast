-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity cornerTracker_xFSobelFilter3x3_0_2_1080_1920_1_0_3_1_1_5_1920_false_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_harris_mat_419_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    in_harris_mat_419_empty_n : IN STD_LOGIC;
    in_harris_mat_419_read : OUT STD_LOGIC;
    gradx_mat_49_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    gradx_mat_49_full_n : IN STD_LOGIC;
    gradx_mat_49_write : OUT STD_LOGIC;
    grady_mat_410_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    grady_mat_410_full_n : IN STD_LOGIC;
    grady_mat_410_write : OUT STD_LOGIC;
    img_height : IN STD_LOGIC_VECTOR (10 downto 0);
    img_width : IN STD_LOGIC_VECTOR (10 downto 0) );
end;


architecture behav of cornerTracker_xFSobelFilter3x3_0_2_1080_1920_1_0_3_1_1_5_1920_false_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv13_2 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000010";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv13_3 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000011";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal in_harris_mat_419_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln341_reg_625 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal icmp_ln216_reg_686 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp_i_i548_i_reg_678 : STD_LOGIC_VECTOR (0 downto 0);
    signal gradx_mat_49_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp1_iter4 : STD_LOGIC := '0';
    signal icmp_ln874_2_reg_714 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln874_2_reg_714_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal grady_mat_410_blk_n : STD_LOGIC;
    signal empty_reg_210 : STD_LOGIC_VECTOR (10 downto 0);
    signal empty_61_reg_245 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Val2_2_reg_257 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf2_0_V_reg_269 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_1_reg_281 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf3_0_V_reg_294 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf1_0_V_reg_307 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_s_reg_319 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln341_fu_390_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal add_ln695_fu_395_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal zext_ln538_fu_401_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln538_reg_634 : STD_LOGIC_VECTOR (63 downto 0);
    signal img_height_cast2_fu_406_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal img_height_cast2_reg_664 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal add_ln353_fu_409_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln353_reg_669 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln353_fu_415_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal cmp_i_i548_i_fu_495_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln324_fu_500_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln324_reg_682 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln216_fu_504_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state6_pp1_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op96_read_state7 : BOOLEAN;
    signal ap_block_state7_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state8_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state9_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_state10_pp1_stage0_iter4 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal icmp_ln216_reg_686_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln216_reg_686_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln216_reg_686_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln695_3_fu_509_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln695_3_reg_690 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal p_load38_reg_695 : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_0_V_addr_1_reg_699 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_1_V_addr_1_reg_704 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_2_V_addr_reg_709 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln874_2_fu_522_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln874_2_reg_714_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal src_buf1_2_V_fu_531_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf1_2_V_reg_718 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal src_buf2_2_V_fu_544_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf2_2_V_reg_723 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf3_2_V_fu_557_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf3_2_V_reg_728 : STD_LOGIC_VECTOR (7 downto 0);
    signal GradientValuesX_0_V_1_reg_733 : STD_LOGIC_VECTOR (15 downto 0);
    signal GradientValuesY_0_V_1_reg_738 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln426_fu_600_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_block_state11 : BOOLEAN;
    signal add_ln695_2_fu_608_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_flush_enable : STD_LOGIC;
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_condition_pp1_exit_iter3_state9 : STD_LOGIC;
    signal buf_0_V_ce0 : STD_LOGIC;
    signal buf_0_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_0_V_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_0_V_ce1 : STD_LOGIC;
    signal buf_0_V_we1 : STD_LOGIC;
    signal buf_0_V_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_1_V_ce0 : STD_LOGIC;
    signal buf_1_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_1_V_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_1_V_ce1 : STD_LOGIC;
    signal buf_1_V_we1 : STD_LOGIC;
    signal buf_1_V_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_2_V_ce0 : STD_LOGIC;
    signal buf_2_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_2_V_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_2_V_ce1 : STD_LOGIC;
    signal buf_2_V_we1 : STD_LOGIC;
    signal buf_2_V_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret_xFSobel3x3_1_1_0_3_s_fu_332_ap_ready : STD_LOGIC;
    signal call_ret_xFSobel3x3_1_1_0_3_s_fu_332_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_xFSobel3x3_1_1_0_3_s_fu_332_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Repl2_s_xFGradientX3x3_0_3_s_fu_349_ap_ready : STD_LOGIC;
    signal p_Repl2_s_xFGradientX3x3_0_3_s_fu_349_ap_return : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Repl2_2_xFGradientY3x3_0_3_s_fu_365_ap_ready : STD_LOGIC;
    signal p_Repl2_2_xFGradientY3x3_0_3_s_fu_365_ap_return : STD_LOGIC_VECTOR (10 downto 0);
    signal empty_59_reg_221 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_phi_mux_empty_60_phi_fu_237_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal empty_60_reg_233 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_mux_empty_61_phi_fu_249_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_phi_mux_p_Val2_2_phi_fu_261_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_p_Val2_1_phi_fu_285_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_src_buf3_0_V_phi_fu_299_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_src_buf1_0_V_phi_fu_311_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_p_Val2_s_phi_fu_323_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln538_1_fu_515_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_56_fu_98 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln366_fu_456_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_57_fu_102 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln366_1_fu_464_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_58_fu_106 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln366_2_fu_472_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp1_stage0_01001 : BOOLEAN;
    signal sext_ln414_fu_578_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln414_1_fu_583_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln874_fu_450_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln695_1_fu_588_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln874_1_fu_594_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_condition_594 : BOOLEAN;
    signal ap_condition_598 : BOOLEAN;
    signal ap_condition_347 : BOOLEAN;

    component cornerTracker_xFSobel3x3_1_1_0_3_s IS
    port (
        ap_ready : OUT STD_LOGIC;
        p_read2 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read5 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read6 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read7 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read8 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read9 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read10 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read11 : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component cornerTracker_xFGradientX3x3_0_3_s IS
    port (
        ap_ready : OUT STD_LOGIC;
        t0 : IN STD_LOGIC_VECTOR (7 downto 0);
        t2 : IN STD_LOGIC_VECTOR (7 downto 0);
        m0 : IN STD_LOGIC_VECTOR (7 downto 0);
        m2 : IN STD_LOGIC_VECTOR (7 downto 0);
        b0 : IN STD_LOGIC_VECTOR (7 downto 0);
        b2 : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component cornerTracker_xFGradientY3x3_0_3_s IS
    port (
        ap_ready : OUT STD_LOGIC;
        t0 : IN STD_LOGIC_VECTOR (7 downto 0);
        t1 : IN STD_LOGIC_VECTOR (7 downto 0);
        t2 : IN STD_LOGIC_VECTOR (7 downto 0);
        b0 : IN STD_LOGIC_VECTOR (7 downto 0);
        b1 : IN STD_LOGIC_VECTOR (7 downto 0);
        b2 : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component cornerTracker_mux_32_8_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component cornerTracker_xFSobelFilter3x3_0_2_1080_1920_1_0_3_1_1_5_1920_false_s_buf_0_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    buf_0_V_U : component cornerTracker_xFSobelFilter3x3_0_2_1080_1920_1_0_3_1_1_5_1920_false_s_buf_0_V
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_0_V_addr_1_reg_699,
        ce0 => buf_0_V_ce0,
        q0 => buf_0_V_q0,
        address1 => buf_0_V_address1,
        ce1 => buf_0_V_ce1,
        we1 => buf_0_V_we1,
        d1 => buf_0_V_d1);

    buf_1_V_U : component cornerTracker_xFSobelFilter3x3_0_2_1080_1920_1_0_3_1_1_5_1920_false_s_buf_0_V
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_1_V_addr_1_reg_704,
        ce0 => buf_1_V_ce0,
        q0 => buf_1_V_q0,
        address1 => buf_1_V_address1,
        ce1 => buf_1_V_ce1,
        we1 => buf_1_V_we1,
        d1 => buf_1_V_d1);

    buf_2_V_U : component cornerTracker_xFSobelFilter3x3_0_2_1080_1920_1_0_3_1_1_5_1920_false_s_buf_0_V
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_2_V_addr_reg_709,
        ce0 => buf_2_V_ce0,
        q0 => buf_2_V_q0,
        address1 => buf_2_V_address1,
        ce1 => buf_2_V_ce1,
        we1 => buf_2_V_we1,
        d1 => buf_2_V_d1);

    call_ret_xFSobel3x3_1_1_0_3_s_fu_332 : component cornerTracker_xFSobel3x3_1_1_0_3_s
    port map (
        ap_ready => call_ret_xFSobel3x3_1_1_0_3_s_fu_332_ap_ready,
        p_read2 => ap_phi_mux_p_Val2_s_phi_fu_323_p4,
        p_read5 => ap_phi_mux_src_buf1_0_V_phi_fu_311_p4,
        p_read6 => src_buf1_2_V_fu_531_p5,
        p_read7 => ap_phi_mux_p_Val2_1_phi_fu_285_p4,
        p_read8 => src_buf2_2_V_fu_544_p5,
        p_read9 => ap_phi_mux_p_Val2_2_phi_fu_261_p4,
        p_read10 => ap_phi_mux_src_buf3_0_V_phi_fu_299_p4,
        p_read11 => src_buf3_2_V_fu_557_p5,
        ap_return_0 => call_ret_xFSobel3x3_1_1_0_3_s_fu_332_ap_return_0,
        ap_return_1 => call_ret_xFSobel3x3_1_1_0_3_s_fu_332_ap_return_1);

    p_Repl2_s_xFGradientX3x3_0_3_s_fu_349 : component cornerTracker_xFGradientX3x3_0_3_s
    port map (
        ap_ready => p_Repl2_s_xFGradientX3x3_0_3_s_fu_349_ap_ready,
        t0 => p_Val2_s_reg_319,
        t2 => ap_const_lv8_0,
        m0 => p_Val2_1_reg_281,
        m2 => ap_const_lv8_0,
        b0 => p_Val2_2_reg_257,
        b2 => ap_const_lv8_0,
        ap_return => p_Repl2_s_xFGradientX3x3_0_3_s_fu_349_ap_return);

    p_Repl2_2_xFGradientY3x3_0_3_s_fu_365 : component cornerTracker_xFGradientY3x3_0_3_s
    port map (
        ap_ready => p_Repl2_2_xFGradientY3x3_0_3_s_fu_365_ap_ready,
        t0 => p_Val2_s_reg_319,
        t1 => src_buf1_0_V_reg_307,
        t2 => ap_const_lv8_0,
        b0 => p_Val2_2_reg_257,
        b1 => src_buf3_0_V_reg_294,
        b2 => ap_const_lv8_0,
        ap_return => p_Repl2_2_xFGradientY3x3_0_3_s_fu_365_ap_return);

    mux_32_8_1_1_U113 : component cornerTracker_mux_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => buf_0_V_q0,
        din1 => buf_1_V_q0,
        din2 => buf_2_V_q0,
        din3 => empty_58_fu_106,
        dout => src_buf1_2_V_fu_531_p5);

    mux_32_8_1_1_U114 : component cornerTracker_mux_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => buf_0_V_q0,
        din1 => buf_1_V_q0,
        din2 => buf_2_V_q0,
        din3 => empty_57_fu_102,
        dout => src_buf2_2_V_fu_544_p5);

    mux_32_8_1_1_U115 : component cornerTracker_mux_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => buf_0_V_q0,
        din1 => buf_1_V_q0,
        din2 => buf_2_V_q0,
        din3 => empty_56_fu_98,
        dout => src_buf3_2_V_fu_557_p5);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_pp1_flush_enable)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln353_fu_415_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                elsif ((((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_const_logic_1 = ap_condition_pp1_exit_iter3_state9)) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln353_fu_415_p2 = ap_const_lv1_0)))) then 
                    ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter3_state9))) then 
                    ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter2;
                elsif ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln353_fu_415_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp1_iter4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    empty_56_fu_98_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln353_fu_415_p2 = ap_const_lv1_0))) then
                if ((not((ap_phi_mux_empty_60_phi_fu_237_p4 = ap_const_lv13_2)) and not((ap_phi_mux_empty_60_phi_fu_237_p4 = ap_const_lv13_0)))) then 
                    empty_56_fu_98 <= select_ln366_fu_456_p3;
                elsif ((ap_phi_mux_empty_60_phi_fu_237_p4 = ap_const_lv13_2)) then 
                    empty_56_fu_98 <= ap_const_lv2_2;
                elsif ((ap_phi_mux_empty_60_phi_fu_237_p4 = ap_const_lv13_0)) then 
                    empty_56_fu_98 <= ap_const_lv2_0;
                end if;
            end if; 
        end if;
    end process;

    empty_57_fu_102_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln353_fu_415_p2 = ap_const_lv1_0))) then
                if ((not((ap_phi_mux_empty_60_phi_fu_237_p4 = ap_const_lv13_2)) and not((ap_phi_mux_empty_60_phi_fu_237_p4 = ap_const_lv13_0)))) then 
                    empty_57_fu_102 <= select_ln366_1_fu_464_p3;
                elsif ((ap_phi_mux_empty_60_phi_fu_237_p4 = ap_const_lv13_2)) then 
                    empty_57_fu_102 <= ap_const_lv2_1;
                elsif ((ap_phi_mux_empty_60_phi_fu_237_p4 = ap_const_lv13_0)) then 
                    empty_57_fu_102 <= ap_const_lv2_2;
                end if;
            end if; 
        end if;
    end process;

    empty_58_fu_106_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln353_fu_415_p2 = ap_const_lv1_0))) then
                if ((not((ap_phi_mux_empty_60_phi_fu_237_p4 = ap_const_lv13_2)) and not((ap_phi_mux_empty_60_phi_fu_237_p4 = ap_const_lv13_0)))) then 
                    empty_58_fu_106 <= select_ln366_2_fu_472_p3;
                elsif ((ap_phi_mux_empty_60_phi_fu_237_p4 = ap_const_lv13_2)) then 
                    empty_58_fu_106 <= ap_const_lv2_0;
                elsif ((ap_phi_mux_empty_60_phi_fu_237_p4 = ap_const_lv13_0)) then 
                    empty_58_fu_106 <= ap_const_lv2_1;
                end if;
            end if; 
        end if;
    end process;

    empty_59_reg_221_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((grady_mat_410_full_n = ap_const_logic_0) or (gradx_mat_49_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                empty_59_reg_221 <= add_ln695_2_fu_608_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                empty_59_reg_221 <= ap_const_lv12_1;
            end if; 
        end if;
    end process;

    empty_60_reg_233_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((grady_mat_410_full_n = ap_const_logic_0) or (gradx_mat_49_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                empty_60_reg_233 <= select_ln426_fu_600_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                empty_60_reg_233 <= ap_const_lv13_2;
            end if; 
        end if;
    end process;

    empty_61_reg_245_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln216_reg_686 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                empty_61_reg_245 <= add_ln695_3_reg_690;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln353_fu_415_p2 = ap_const_lv1_0))) then 
                empty_61_reg_245 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    empty_reg_210_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln341_fu_390_p2 = ap_const_lv1_0))) then 
                empty_reg_210 <= add_ln695_fu_395_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                empty_reg_210 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    p_Val2_1_reg_281_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln216_reg_686_pp1_iter3_reg = ap_const_lv1_0))) then 
                p_Val2_1_reg_281 <= src_buf2_0_V_reg_269;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln353_fu_415_p2 = ap_const_lv1_0))) then 
                p_Val2_1_reg_281 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    p_Val2_2_reg_257_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln216_reg_686_pp1_iter3_reg = ap_const_lv1_0))) then 
                p_Val2_2_reg_257 <= src_buf3_0_V_reg_294;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln353_fu_415_p2 = ap_const_lv1_0))) then 
                p_Val2_2_reg_257 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    p_Val2_s_reg_319_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln216_reg_686_pp1_iter3_reg = ap_const_lv1_0))) then 
                p_Val2_s_reg_319 <= src_buf1_0_V_reg_307;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln353_fu_415_p2 = ap_const_lv1_0))) then 
                p_Val2_s_reg_319 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf1_0_V_reg_307_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln216_reg_686_pp1_iter3_reg = ap_const_lv1_0))) then 
                src_buf1_0_V_reg_307 <= src_buf1_2_V_reg_718;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln353_fu_415_p2 = ap_const_lv1_0))) then 
                src_buf1_0_V_reg_307 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf2_0_V_reg_269_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln216_reg_686_pp1_iter3_reg = ap_const_lv1_0))) then 
                src_buf2_0_V_reg_269 <= src_buf2_2_V_reg_723;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln353_fu_415_p2 = ap_const_lv1_0))) then 
                src_buf2_0_V_reg_269 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf3_0_V_reg_294_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln216_reg_686_pp1_iter3_reg = ap_const_lv1_0))) then 
                src_buf3_0_V_reg_294 <= src_buf3_2_V_reg_728;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln353_fu_415_p2 = ap_const_lv1_0))) then 
                src_buf3_0_V_reg_294 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln216_reg_686_pp1_iter2_reg = ap_const_lv1_0))) then
                GradientValuesX_0_V_1_reg_733 <= call_ret_xFSobel3x3_1_1_0_3_s_fu_332_ap_return_0;
                GradientValuesY_0_V_1_reg_738 <= call_ret_xFSobel3x3_1_1_0_3_s_fu_332_ap_return_1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                add_ln353_reg_669 <= add_ln353_fu_409_p2;
                    img_height_cast2_reg_664(10 downto 0) <= img_height_cast2_fu_406_p1(10 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then
                add_ln695_3_reg_690 <= add_ln695_3_fu_509_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln216_reg_686 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                buf_0_V_addr_1_reg_699 <= zext_ln538_1_fu_515_p1(11 - 1 downto 0);
                buf_1_V_addr_1_reg_704 <= zext_ln538_1_fu_515_p1(11 - 1 downto 0);
                buf_2_V_addr_reg_709 <= zext_ln538_1_fu_515_p1(11 - 1 downto 0);
                icmp_ln874_2_reg_714 <= icmp_ln874_2_fu_522_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln353_fu_415_p2 = ap_const_lv1_0))) then
                cmp_i_i548_i_reg_678 <= cmp_i_i548_i_fu_495_p2;
                trunc_ln324_reg_682 <= trunc_ln324_fu_500_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                icmp_ln216_reg_686 <= icmp_ln216_fu_504_p2;
                icmp_ln216_reg_686_pp1_iter1_reg <= icmp_ln216_reg_686;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp1_stage0_11001)) then
                icmp_ln216_reg_686_pp1_iter2_reg <= icmp_ln216_reg_686_pp1_iter1_reg;
                icmp_ln216_reg_686_pp1_iter3_reg <= icmp_ln216_reg_686_pp1_iter2_reg;
                icmp_ln874_2_reg_714_pp1_iter2_reg <= icmp_ln874_2_reg_714;
                icmp_ln874_2_reg_714_pp1_iter3_reg <= icmp_ln874_2_reg_714_pp1_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln341_reg_625 <= icmp_ln341_fu_390_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((cmp_i_i548_i_reg_678 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln216_fu_504_p2 = ap_const_lv1_0))) then
                p_load38_reg_695 <= empty_56_fu_98;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (icmp_ln216_reg_686_pp1_iter2_reg = ap_const_lv1_0))) then
                src_buf1_2_V_reg_718 <= src_buf1_2_V_fu_531_p5;
                src_buf2_2_V_reg_723 <= src_buf2_2_V_fu_544_p5;
                src_buf3_2_V_reg_728 <= src_buf3_2_V_fu_557_p5;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln341_fu_390_p2 = ap_const_lv1_0))) then
                    zext_ln538_reg_634(10 downto 0) <= zext_ln538_fu_401_p1(10 downto 0);
            end if;
        end if;
    end process;
    zext_ln538_reg_634(63 downto 11) <= "00000000000000000000000000000000000000000000000000000";
    img_height_cast2_reg_664(11) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, gradx_mat_49_full_n, grady_mat_410_full_n, ap_CS_fsm_state11, icmp_ln341_fu_390_p2, ap_enable_reg_pp0_iter0, icmp_ln353_fu_415_p2, ap_CS_fsm_state5, ap_enable_reg_pp1_iter3, ap_block_pp0_stage0_subdone, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln341_fu_390_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln341_fu_390_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln353_fu_415_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_pp1_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state11 => 
                if ((not(((grady_mat_410_full_n = ap_const_logic_0) or (gradx_mat_49_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
    add_ln353_fu_409_p2 <= std_logic_vector(unsigned(img_height_cast2_fu_406_p1) + unsigned(ap_const_lv12_1));
    add_ln695_1_fu_588_p2 <= std_logic_vector(unsigned(empty_60_reg_233) + unsigned(ap_const_lv13_1));
    add_ln695_2_fu_608_p2 <= std_logic_vector(unsigned(empty_59_reg_221) + unsigned(ap_const_lv12_1));
    add_ln695_3_fu_509_p2 <= std_logic_vector(unsigned(ap_phi_mux_empty_61_phi_fu_249_p4) + unsigned(ap_const_lv11_1));
    add_ln695_fu_395_p2 <= std_logic_vector(unsigned(empty_reg_210) + unsigned(ap_const_lv11_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(4);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state11 <= ap_CS_fsm(5);
    ap_CS_fsm_state4 <= ap_CS_fsm(2);
    ap_CS_fsm_state5 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(in_harris_mat_419_empty_n, ap_enable_reg_pp0_iter1, icmp_ln341_reg_625)
    begin
                ap_block_pp0_stage0_11001 <= ((icmp_ln341_reg_625 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (in_harris_mat_419_empty_n = ap_const_logic_0));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(in_harris_mat_419_empty_n, ap_enable_reg_pp0_iter1, icmp_ln341_reg_625)
    begin
                ap_block_pp0_stage0_subdone <= ((icmp_ln341_reg_625 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (in_harris_mat_419_empty_n = ap_const_logic_0));
    end process;

        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_01001_assign_proc : process(in_harris_mat_419_empty_n, gradx_mat_49_full_n, grady_mat_410_full_n, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter4, icmp_ln874_2_reg_714_pp1_iter3_reg, ap_predicate_op96_read_state7)
    begin
                ap_block_pp1_stage0_01001 <= (((ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (((icmp_ln874_2_reg_714_pp1_iter3_reg = ap_const_lv1_0) and (grady_mat_410_full_n = ap_const_logic_0)) or ((icmp_ln874_2_reg_714_pp1_iter3_reg = ap_const_lv1_0) and (gradx_mat_49_full_n = ap_const_logic_0)))) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (in_harris_mat_419_empty_n = ap_const_logic_0) and (ap_predicate_op96_read_state7 = ap_const_boolean_1)));
    end process;


    ap_block_pp1_stage0_11001_assign_proc : process(in_harris_mat_419_empty_n, gradx_mat_49_full_n, grady_mat_410_full_n, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter4, icmp_ln874_2_reg_714_pp1_iter3_reg, ap_predicate_op96_read_state7)
    begin
                ap_block_pp1_stage0_11001 <= (((ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (((icmp_ln874_2_reg_714_pp1_iter3_reg = ap_const_lv1_0) and (grady_mat_410_full_n = ap_const_logic_0)) or ((icmp_ln874_2_reg_714_pp1_iter3_reg = ap_const_lv1_0) and (gradx_mat_49_full_n = ap_const_logic_0)))) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (in_harris_mat_419_empty_n = ap_const_logic_0) and (ap_predicate_op96_read_state7 = ap_const_boolean_1)));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(in_harris_mat_419_empty_n, gradx_mat_49_full_n, grady_mat_410_full_n, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter4, icmp_ln874_2_reg_714_pp1_iter3_reg, ap_predicate_op96_read_state7)
    begin
                ap_block_pp1_stage0_subdone <= (((ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (((icmp_ln874_2_reg_714_pp1_iter3_reg = ap_const_lv1_0) and (grady_mat_410_full_n = ap_const_logic_0)) or ((icmp_ln874_2_reg_714_pp1_iter3_reg = ap_const_lv1_0) and (gradx_mat_49_full_n = ap_const_logic_0)))) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (in_harris_mat_419_empty_n = ap_const_logic_0) and (ap_predicate_op96_read_state7 = ap_const_boolean_1)));
    end process;


    ap_block_state10_pp1_stage0_iter4_assign_proc : process(gradx_mat_49_full_n, grady_mat_410_full_n, icmp_ln874_2_reg_714_pp1_iter3_reg)
    begin
                ap_block_state10_pp1_stage0_iter4 <= (((icmp_ln874_2_reg_714_pp1_iter3_reg = ap_const_lv1_0) and (grady_mat_410_full_n = ap_const_logic_0)) or ((icmp_ln874_2_reg_714_pp1_iter3_reg = ap_const_lv1_0) and (gradx_mat_49_full_n = ap_const_logic_0)));
    end process;


    ap_block_state11_assign_proc : process(gradx_mat_49_full_n, grady_mat_410_full_n)
    begin
                ap_block_state11 <= ((grady_mat_410_full_n = ap_const_logic_0) or (gradx_mat_49_full_n = ap_const_logic_0));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter1_assign_proc : process(in_harris_mat_419_empty_n, icmp_ln341_reg_625)
    begin
                ap_block_state3_pp0_stage0_iter1 <= ((icmp_ln341_reg_625 = ap_const_lv1_0) and (in_harris_mat_419_empty_n = ap_const_logic_0));
    end process;

        ap_block_state6_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state7_pp1_stage0_iter1_assign_proc : process(in_harris_mat_419_empty_n, ap_predicate_op96_read_state7)
    begin
                ap_block_state7_pp1_stage0_iter1 <= ((in_harris_mat_419_empty_n = ap_const_logic_0) and (ap_predicate_op96_read_state7 = ap_const_boolean_1));
    end process;

        ap_block_state8_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp1_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_347_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln216_reg_686)
    begin
                ap_condition_347 <= ((icmp_ln216_reg_686 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0));
    end process;


    ap_condition_594_assign_proc : process(cmp_i_i548_i_reg_678, p_load38_reg_695)
    begin
                ap_condition_594 <= (not((p_load38_reg_695 = ap_const_lv2_1)) and not((p_load38_reg_695 = ap_const_lv2_0)) and (cmp_i_i548_i_reg_678 = ap_const_lv1_0));
    end process;


    ap_condition_598_assign_proc : process(cmp_i_i548_i_reg_678, trunc_ln324_reg_682)
    begin
                ap_condition_598 <= (not((trunc_ln324_reg_682 = ap_const_lv2_1)) and not((trunc_ln324_reg_682 = ap_const_lv2_0)) and (cmp_i_i548_i_reg_678 = ap_const_lv1_1));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln341_fu_390_p2)
    begin
        if ((icmp_ln341_fu_390_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter3_state9_assign_proc : process(ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            ap_condition_pp1_exit_iter3_state9 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter3_state9 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_flush_enable_assign_proc : process(ap_CS_fsm_pp1_stage0, icmp_ln216_fu_504_p2, ap_block_pp1_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln216_fu_504_p2 = ap_const_lv1_1))) then 
            ap_condition_pp1_flush_enable <= ap_const_logic_1;
        else 
            ap_condition_pp1_flush_enable <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, icmp_ln353_fu_415_p2, ap_CS_fsm_state5)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln353_fu_415_p2 = ap_const_lv1_1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter4, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_enable_reg_pp1_iter4 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_mux_empty_60_phi_fu_237_p4 <= empty_60_reg_233;

    ap_phi_mux_empty_61_phi_fu_249_p4_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln216_reg_686, empty_61_reg_245, add_ln695_3_reg_690)
    begin
        if (((icmp_ln216_reg_686 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            ap_phi_mux_empty_61_phi_fu_249_p4 <= add_ln695_3_reg_690;
        else 
            ap_phi_mux_empty_61_phi_fu_249_p4 <= empty_61_reg_245;
        end if; 
    end process;


    ap_phi_mux_p_Val2_1_phi_fu_285_p4_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter4, src_buf2_0_V_reg_269, p_Val2_1_reg_281, icmp_ln216_reg_686_pp1_iter3_reg)
    begin
        if (((ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln216_reg_686_pp1_iter3_reg = ap_const_lv1_0))) then 
            ap_phi_mux_p_Val2_1_phi_fu_285_p4 <= src_buf2_0_V_reg_269;
        else 
            ap_phi_mux_p_Val2_1_phi_fu_285_p4 <= p_Val2_1_reg_281;
        end if; 
    end process;


    ap_phi_mux_p_Val2_2_phi_fu_261_p4_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter4, p_Val2_2_reg_257, src_buf3_0_V_reg_294, icmp_ln216_reg_686_pp1_iter3_reg)
    begin
        if (((ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln216_reg_686_pp1_iter3_reg = ap_const_lv1_0))) then 
            ap_phi_mux_p_Val2_2_phi_fu_261_p4 <= src_buf3_0_V_reg_294;
        else 
            ap_phi_mux_p_Val2_2_phi_fu_261_p4 <= p_Val2_2_reg_257;
        end if; 
    end process;


    ap_phi_mux_p_Val2_s_phi_fu_323_p4_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter4, src_buf1_0_V_reg_307, p_Val2_s_reg_319, icmp_ln216_reg_686_pp1_iter3_reg)
    begin
        if (((ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln216_reg_686_pp1_iter3_reg = ap_const_lv1_0))) then 
            ap_phi_mux_p_Val2_s_phi_fu_323_p4 <= src_buf1_0_V_reg_307;
        else 
            ap_phi_mux_p_Val2_s_phi_fu_323_p4 <= p_Val2_s_reg_319;
        end if; 
    end process;


    ap_phi_mux_src_buf1_0_V_phi_fu_311_p4_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter4, src_buf1_0_V_reg_307, icmp_ln216_reg_686_pp1_iter3_reg, src_buf1_2_V_reg_718)
    begin
        if (((ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln216_reg_686_pp1_iter3_reg = ap_const_lv1_0))) then 
            ap_phi_mux_src_buf1_0_V_phi_fu_311_p4 <= src_buf1_2_V_reg_718;
        else 
            ap_phi_mux_src_buf1_0_V_phi_fu_311_p4 <= src_buf1_0_V_reg_307;
        end if; 
    end process;


    ap_phi_mux_src_buf3_0_V_phi_fu_299_p4_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter4, src_buf3_0_V_reg_294, icmp_ln216_reg_686_pp1_iter3_reg, src_buf3_2_V_reg_728)
    begin
        if (((ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln216_reg_686_pp1_iter3_reg = ap_const_lv1_0))) then 
            ap_phi_mux_src_buf3_0_V_phi_fu_299_p4 <= src_buf3_2_V_reg_728;
        else 
            ap_phi_mux_src_buf3_0_V_phi_fu_299_p4 <= src_buf3_0_V_reg_294;
        end if; 
    end process;


    ap_predicate_op96_read_state7_assign_proc : process(icmp_ln216_reg_686, cmp_i_i548_i_reg_678)
    begin
                ap_predicate_op96_read_state7 <= ((cmp_i_i548_i_reg_678 = ap_const_lv1_1) and (icmp_ln216_reg_686 = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(icmp_ln353_fu_415_p2, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln353_fu_415_p2 = ap_const_lv1_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    buf_0_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln216_reg_686, cmp_i_i548_i_reg_678, ap_enable_reg_pp0_iter0, zext_ln538_fu_401_p1, trunc_ln324_reg_682, p_load38_reg_695, zext_ln538_1_fu_515_p1)
    begin
        if ((((cmp_i_i548_i_reg_678 = ap_const_lv1_1) and (icmp_ln216_reg_686 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (trunc_ln324_reg_682 = ap_const_lv2_0)) or ((cmp_i_i548_i_reg_678 = ap_const_lv1_0) and (icmp_ln216_reg_686 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (p_load38_reg_695 = ap_const_lv2_0)))) then 
            buf_0_V_address1 <= zext_ln538_1_fu_515_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            buf_0_V_address1 <= zext_ln538_fu_401_p1(11 - 1 downto 0);
        else 
            buf_0_V_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_0_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            buf_0_V_ce0 <= ap_const_logic_1;
        else 
            buf_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_0_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln216_reg_686, cmp_i_i548_i_reg_678, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, trunc_ln324_reg_682, ap_block_pp1_stage0_11001, p_load38_reg_695)
    begin
        if ((((cmp_i_i548_i_reg_678 = ap_const_lv1_1) and (icmp_ln216_reg_686 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (trunc_ln324_reg_682 = ap_const_lv2_0)) or ((cmp_i_i548_i_reg_678 = ap_const_lv1_0) and (icmp_ln216_reg_686 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (p_load38_reg_695 = ap_const_lv2_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            buf_0_V_ce1 <= ap_const_logic_1;
        else 
            buf_0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_0_V_d1_assign_proc : process(in_harris_mat_419_dout, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln216_reg_686, cmp_i_i548_i_reg_678, ap_enable_reg_pp0_iter0, trunc_ln324_reg_682, p_load38_reg_695)
    begin
        if (((cmp_i_i548_i_reg_678 = ap_const_lv1_1) and (icmp_ln216_reg_686 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (trunc_ln324_reg_682 = ap_const_lv2_0))) then 
            buf_0_V_d1 <= in_harris_mat_419_dout;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((cmp_i_i548_i_reg_678 = ap_const_lv1_0) and (icmp_ln216_reg_686 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (p_load38_reg_695 = ap_const_lv2_0)))) then 
            buf_0_V_d1 <= ap_const_lv8_0;
        else 
            buf_0_V_d1 <= "XXXXXXXX";
        end if; 
    end process;


    buf_0_V_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln216_reg_686, cmp_i_i548_i_reg_678, icmp_ln341_fu_390_p2, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, trunc_ln324_reg_682, ap_block_pp1_stage0_11001, p_load38_reg_695)
    begin
        if ((((cmp_i_i548_i_reg_678 = ap_const_lv1_1) and (icmp_ln216_reg_686 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (trunc_ln324_reg_682 = ap_const_lv2_0)) or ((cmp_i_i548_i_reg_678 = ap_const_lv1_0) and (icmp_ln216_reg_686 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (p_load38_reg_695 = ap_const_lv2_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln341_fu_390_p2 = ap_const_lv1_0)))) then 
            buf_0_V_we1 <= ap_const_logic_1;
        else 
            buf_0_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_1_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln216_reg_686, cmp_i_i548_i_reg_678, zext_ln538_reg_634, trunc_ln324_reg_682, p_load38_reg_695, zext_ln538_1_fu_515_p1)
    begin
        if ((((cmp_i_i548_i_reg_678 = ap_const_lv1_1) and (icmp_ln216_reg_686 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (trunc_ln324_reg_682 = ap_const_lv2_1)) or ((cmp_i_i548_i_reg_678 = ap_const_lv1_0) and (icmp_ln216_reg_686 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (p_load38_reg_695 = ap_const_lv2_1)))) then 
            buf_1_V_address1 <= zext_ln538_1_fu_515_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            buf_1_V_address1 <= zext_ln538_reg_634(11 - 1 downto 0);
        else 
            buf_1_V_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_1_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            buf_1_V_ce0 <= ap_const_logic_1;
        else 
            buf_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_1_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln216_reg_686, cmp_i_i548_i_reg_678, ap_block_pp0_stage0_11001, trunc_ln324_reg_682, ap_block_pp1_stage0_11001, p_load38_reg_695)
    begin
        if ((((cmp_i_i548_i_reg_678 = ap_const_lv1_1) and (icmp_ln216_reg_686 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (trunc_ln324_reg_682 = ap_const_lv2_1)) or ((cmp_i_i548_i_reg_678 = ap_const_lv1_0) and (icmp_ln216_reg_686 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (p_load38_reg_695 = ap_const_lv2_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            buf_1_V_ce1 <= ap_const_logic_1;
        else 
            buf_1_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_1_V_d1_assign_proc : process(in_harris_mat_419_dout, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln216_reg_686, cmp_i_i548_i_reg_678, trunc_ln324_reg_682, p_load38_reg_695)
    begin
        if (((cmp_i_i548_i_reg_678 = ap_const_lv1_0) and (icmp_ln216_reg_686 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (p_load38_reg_695 = ap_const_lv2_1))) then 
            buf_1_V_d1 <= ap_const_lv8_0;
        elsif ((((cmp_i_i548_i_reg_678 = ap_const_lv1_1) and (icmp_ln216_reg_686 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (trunc_ln324_reg_682 = ap_const_lv2_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            buf_1_V_d1 <= in_harris_mat_419_dout;
        else 
            buf_1_V_d1 <= "XXXXXXXX";
        end if; 
    end process;


    buf_1_V_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln341_reg_625, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln216_reg_686, cmp_i_i548_i_reg_678, ap_block_pp0_stage0_11001, trunc_ln324_reg_682, ap_block_pp1_stage0_11001, p_load38_reg_695)
    begin
        if ((((cmp_i_i548_i_reg_678 = ap_const_lv1_1) and (icmp_ln216_reg_686 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (trunc_ln324_reg_682 = ap_const_lv2_1)) or ((icmp_ln341_reg_625 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((cmp_i_i548_i_reg_678 = ap_const_lv1_0) and (icmp_ln216_reg_686 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (p_load38_reg_695 = ap_const_lv2_1)))) then 
            buf_1_V_we1 <= ap_const_logic_1;
        else 
            buf_1_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_2_V_address1 <= zext_ln538_1_fu_515_p1(11 - 1 downto 0);

    buf_2_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            buf_2_V_ce0 <= ap_const_logic_1;
        else 
            buf_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_2_V_ce1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln216_reg_686, cmp_i_i548_i_reg_678, trunc_ln324_reg_682, ap_block_pp1_stage0_11001, p_load38_reg_695)
    begin
        if (((not((trunc_ln324_reg_682 = ap_const_lv2_1)) and not((trunc_ln324_reg_682 = ap_const_lv2_0)) and (cmp_i_i548_i_reg_678 = ap_const_lv1_1) and (icmp_ln216_reg_686 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or (not((p_load38_reg_695 = ap_const_lv2_1)) and not((p_load38_reg_695 = ap_const_lv2_0)) and (cmp_i_i548_i_reg_678 = ap_const_lv1_0) and (icmp_ln216_reg_686 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            buf_2_V_ce1 <= ap_const_logic_1;
        else 
            buf_2_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_2_V_d1_assign_proc : process(in_harris_mat_419_dout, ap_condition_594, ap_condition_598, ap_condition_347)
    begin
        if ((ap_const_boolean_1 = ap_condition_347)) then
            if ((ap_const_boolean_1 = ap_condition_598)) then 
                buf_2_V_d1 <= in_harris_mat_419_dout;
            elsif ((ap_const_boolean_1 = ap_condition_594)) then 
                buf_2_V_d1 <= ap_const_lv8_0;
            else 
                buf_2_V_d1 <= "XXXXXXXX";
            end if;
        else 
            buf_2_V_d1 <= "XXXXXXXX";
        end if; 
    end process;


    buf_2_V_we1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln216_reg_686, cmp_i_i548_i_reg_678, trunc_ln324_reg_682, ap_block_pp1_stage0_11001, p_load38_reg_695)
    begin
        if (((not((trunc_ln324_reg_682 = ap_const_lv2_1)) and not((trunc_ln324_reg_682 = ap_const_lv2_0)) and (cmp_i_i548_i_reg_678 = ap_const_lv1_1) and (icmp_ln216_reg_686 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or (not((p_load38_reg_695 = ap_const_lv2_1)) and not((p_load38_reg_695 = ap_const_lv2_0)) and (cmp_i_i548_i_reg_678 = ap_const_lv1_0) and (icmp_ln216_reg_686 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            buf_2_V_we1 <= ap_const_logic_1;
        else 
            buf_2_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    cmp_i_i548_i_fu_495_p2 <= "1" when (unsigned(empty_59_reg_221) < unsigned(img_height_cast2_reg_664)) else "0";

    gradx_mat_49_blk_n_assign_proc : process(gradx_mat_49_full_n, ap_block_pp1_stage0, ap_enable_reg_pp1_iter4, icmp_ln874_2_reg_714_pp1_iter3_reg, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or ((icmp_ln874_2_reg_714_pp1_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0)))) then 
            gradx_mat_49_blk_n <= gradx_mat_49_full_n;
        else 
            gradx_mat_49_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    gradx_mat_49_din_assign_proc : process(gradx_mat_49_full_n, grady_mat_410_full_n, ap_enable_reg_pp1_iter4, icmp_ln874_2_reg_714_pp1_iter3_reg, ap_CS_fsm_state11, GradientValuesX_0_V_1_reg_733, ap_block_pp1_stage0_01001, sext_ln414_fu_578_p1)
    begin
        if ((not(((grady_mat_410_full_n = ap_const_logic_0) or (gradx_mat_49_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            gradx_mat_49_din <= sext_ln414_fu_578_p1;
        elsif (((icmp_ln874_2_reg_714_pp1_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_01001))) then 
            gradx_mat_49_din <= GradientValuesX_0_V_1_reg_733;
        else 
            gradx_mat_49_din <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gradx_mat_49_write_assign_proc : process(gradx_mat_49_full_n, grady_mat_410_full_n, ap_enable_reg_pp1_iter4, icmp_ln874_2_reg_714_pp1_iter3_reg, ap_CS_fsm_state11, ap_block_pp1_stage0_11001)
    begin
        if ((((icmp_ln874_2_reg_714_pp1_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or (not(((grady_mat_410_full_n = ap_const_logic_0) or (gradx_mat_49_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            gradx_mat_49_write <= ap_const_logic_1;
        else 
            gradx_mat_49_write <= ap_const_logic_0;
        end if; 
    end process;


    grady_mat_410_blk_n_assign_proc : process(grady_mat_410_full_n, ap_block_pp1_stage0, ap_enable_reg_pp1_iter4, icmp_ln874_2_reg_714_pp1_iter3_reg, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or ((icmp_ln874_2_reg_714_pp1_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0)))) then 
            grady_mat_410_blk_n <= grady_mat_410_full_n;
        else 
            grady_mat_410_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    grady_mat_410_din_assign_proc : process(gradx_mat_49_full_n, grady_mat_410_full_n, ap_enable_reg_pp1_iter4, icmp_ln874_2_reg_714_pp1_iter3_reg, ap_CS_fsm_state11, GradientValuesY_0_V_1_reg_738, ap_block_pp1_stage0_01001, sext_ln414_1_fu_583_p1)
    begin
        if ((not(((grady_mat_410_full_n = ap_const_logic_0) or (gradx_mat_49_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            grady_mat_410_din <= sext_ln414_1_fu_583_p1;
        elsif (((icmp_ln874_2_reg_714_pp1_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_01001))) then 
            grady_mat_410_din <= GradientValuesY_0_V_1_reg_738;
        else 
            grady_mat_410_din <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grady_mat_410_write_assign_proc : process(gradx_mat_49_full_n, grady_mat_410_full_n, ap_enable_reg_pp1_iter4, icmp_ln874_2_reg_714_pp1_iter3_reg, ap_CS_fsm_state11, ap_block_pp1_stage0_11001)
    begin
        if ((((icmp_ln874_2_reg_714_pp1_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or (not(((grady_mat_410_full_n = ap_const_logic_0) or (gradx_mat_49_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            grady_mat_410_write <= ap_const_logic_1;
        else 
            grady_mat_410_write <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln216_fu_504_p2 <= "1" when (ap_phi_mux_empty_61_phi_fu_249_p4 = img_width) else "0";
    icmp_ln341_fu_390_p2 <= "1" when (empty_reg_210 = img_width) else "0";
    icmp_ln353_fu_415_p2 <= "1" when (empty_59_reg_221 = add_ln353_reg_669) else "0";
    icmp_ln874_1_fu_594_p2 <= "1" when (add_ln695_1_fu_588_p2 = ap_const_lv13_3) else "0";
    icmp_ln874_2_fu_522_p2 <= "1" when (empty_61_reg_245 = ap_const_lv11_0) else "0";
    icmp_ln874_fu_450_p2 <= "1" when (empty_60_reg_233 = ap_const_lv13_1) else "0";
    img_height_cast2_fu_406_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(img_height),12));

    in_harris_mat_419_blk_n_assign_proc : process(in_harris_mat_419_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln341_reg_625, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln216_reg_686, cmp_i_i548_i_reg_678)
    begin
        if ((((cmp_i_i548_i_reg_678 = ap_const_lv1_1) and (icmp_ln216_reg_686 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((icmp_ln341_reg_625 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            in_harris_mat_419_blk_n <= in_harris_mat_419_empty_n;
        else 
            in_harris_mat_419_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_harris_mat_419_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln341_reg_625, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp0_stage0_11001, ap_predicate_op96_read_state7, ap_block_pp1_stage0_11001)
    begin
        if ((((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_predicate_op96_read_state7 = ap_const_boolean_1)) or ((icmp_ln341_reg_625 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            in_harris_mat_419_read <= ap_const_logic_1;
        else 
            in_harris_mat_419_read <= ap_const_logic_0;
        end if; 
    end process;

    select_ln366_1_fu_464_p3 <= 
        ap_const_lv2_0 when (icmp_ln874_fu_450_p2(0) = '1') else 
        empty_57_fu_102;
    select_ln366_2_fu_472_p3 <= 
        ap_const_lv2_2 when (icmp_ln874_fu_450_p2(0) = '1') else 
        empty_58_fu_106;
    select_ln366_fu_456_p3 <= 
        ap_const_lv2_1 when (icmp_ln874_fu_450_p2(0) = '1') else 
        empty_56_fu_98;
    select_ln426_fu_600_p3 <= 
        ap_const_lv13_0 when (icmp_ln874_1_fu_594_p2(0) = '1') else 
        add_ln695_1_fu_588_p2;
        sext_ln414_1_fu_583_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Repl2_2_xFGradientY3x3_0_3_s_fu_365_ap_return),16));

        sext_ln414_fu_578_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Repl2_s_xFGradientX3x3_0_3_s_fu_349_ap_return),16));

    trunc_ln324_fu_500_p1 <= empty_60_reg_233(2 - 1 downto 0);
    zext_ln538_1_fu_515_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_61_reg_245),64));
    zext_ln538_fu_401_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_reg_210),64));
end behav;
