-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity cornerTracker_xFBoxFilter3x3_2_1080_1920_3_1_5_5_1920_false_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    gradx_2_41_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    gradx_2_41_empty_n : IN STD_LOGIC;
    gradx_2_41_read : OUT STD_LOGIC;
    gradx2g_44_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    gradx2g_44_full_n : IN STD_LOGIC;
    gradx2g_44_write : OUT STD_LOGIC;
    img_height : IN STD_LOGIC_VECTOR (10 downto 0);
    img_width : IN STD_LOGIC_VECTOR (10 downto 0) );
end;


architecture behav of cornerTracker_xFBoxFilter3x3_2_1080_1920_3_1_5_5_1920_false_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (10 downto 0) := "00000000100";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (10 downto 0) := "00000001000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (10 downto 0) := "00000010000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (10 downto 0) := "00000100000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (10 downto 0) := "00001000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (10 downto 0) := "00010000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (10 downto 0) := "00100000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (10 downto 0) := "01000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv13_2 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000010";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv13_3 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000011";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal gradx_2_41_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln241_reg_621 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal icmp_ln133_reg_682 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp_i_i421_i_reg_674 : STD_LOGIC_VECTOR (0 downto 0);
    signal gradx2g_44_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp1_iter9 : STD_LOGIC := '0';
    signal icmp_ln874_4_reg_709 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln874_4_reg_709_pp1_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal empty_reg_239 : STD_LOGIC_VECTOR (10 downto 0);
    signal empty_112_reg_274 : STD_LOGIC_VECTOR (10 downto 0);
    signal empty_112_reg_274_pp1_iter1_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_state6_pp1_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op105_read_state7 : BOOLEAN;
    signal ap_block_state7_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state8_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state9_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_state10_pp1_stage0_iter4 : BOOLEAN;
    signal ap_block_state11_pp1_stage0_iter5 : BOOLEAN;
    signal ap_block_state12_pp1_stage0_iter6 : BOOLEAN;
    signal ap_block_state13_pp1_stage0_iter7 : BOOLEAN;
    signal ap_block_state14_pp1_stage0_iter8 : BOOLEAN;
    signal ap_block_state15_pp1_stage0_iter9 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal agg_tmp23_i_i_0_reg_286 : STD_LOGIC_VECTOR (15 downto 0);
    signal agg_tmp23_i_i_0_reg_286_pp1_iter4_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal agg_tmp20_i_i_0_reg_298 : STD_LOGIC_VECTOR (15 downto 0);
    signal agg_tmp12_i_i_0_reg_311 : STD_LOGIC_VECTOR (15 downto 0);
    signal agg_tmp12_i_i_0_reg_311_pp1_iter4_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal agg_tmp9_i_i_0_reg_323 : STD_LOGIC_VECTOR (15 downto 0);
    signal agg_tmp2_i_i_0_reg_336 : STD_LOGIC_VECTOR (15 downto 0);
    signal agg_tmp2_i_i_0_reg_336_pp1_iter4_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal agg_tmp104_0_reg_348 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln241_fu_393_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal add_ln695_fu_398_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal zext_ln538_fu_404_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln538_reg_630 : STD_LOGIC_VECTOR (63 downto 0);
    signal img_height_cast2_fu_409_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal img_height_cast2_reg_660 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal add_ln257_fu_412_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln257_reg_665 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln257_fu_418_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal cmp_i_i421_i_fu_498_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln324_fu_503_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln324_reg_678 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln133_fu_507_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln133_reg_682_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln133_reg_682_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln133_reg_682_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln133_reg_682_pp1_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln695_6_fu_512_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln695_6_reg_686 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal icmp_ln874_4_fu_539_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln874_4_reg_709_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln874_4_reg_709_pp1_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln874_4_reg_709_pp1_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln874_4_reg_709_pp1_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln874_4_reg_709_pp1_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_548_p5 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_reg_713 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal tmp_3_fu_560_p5 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_3_reg_719 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_4_fu_572_p5 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_4_reg_725 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln303_fu_596_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln303_reg_731 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal add_ln695_5_fu_604_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln695_5_reg_736 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_flush_enable : STD_LOGIC;
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter4 : STD_LOGIC := '0';
    signal ap_condition_pp1_exit_iter3_state9 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter8 : STD_LOGIC := '0';
    signal buf_0_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_0_V_ce0 : STD_LOGIC;
    signal buf_0_V_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_0_V_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_0_V_ce1 : STD_LOGIC;
    signal buf_0_V_we1 : STD_LOGIC;
    signal buf_0_V_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_1_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_1_V_ce0 : STD_LOGIC;
    signal buf_1_V_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_1_V_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_1_V_ce1 : STD_LOGIC;
    signal buf_1_V_we1 : STD_LOGIC;
    signal buf_1_V_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_2_V_ce0 : STD_LOGIC;
    signal buf_2_V_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2_V_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_2_V_ce1 : STD_LOGIC;
    signal buf_2_V_we1 : STD_LOGIC;
    signal buf_2_V_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_xFApplyMask3x3_3_s_fu_361_p_i00 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_xFApplyMask3x3_3_s_fu_361_p_i02 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_xFApplyMask3x3_3_s_fu_361_p_i10 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_xFApplyMask3x3_3_s_fu_361_p_i12 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_xFApplyMask3x3_3_s_fu_361_p_i20 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_xFApplyMask3x3_3_s_fu_361_p_i22 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_xFApplyMask3x3_3_s_fu_361_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_xFApplyMask3x3_3_s_fu_361_ap_ce : STD_LOGIC;
    signal ap_block_state6_pp1_stage0_iter0_ignore_call13 : BOOLEAN;
    signal ap_block_state7_pp1_stage0_iter1_ignore_call13 : BOOLEAN;
    signal ap_block_state8_pp1_stage0_iter2_ignore_call13 : BOOLEAN;
    signal ap_block_state9_pp1_stage0_iter3_ignore_call13 : BOOLEAN;
    signal ap_block_state10_pp1_stage0_iter4_ignore_call13 : BOOLEAN;
    signal ap_block_state11_pp1_stage0_iter5_ignore_call13 : BOOLEAN;
    signal ap_block_state12_pp1_stage0_iter6_ignore_call13 : BOOLEAN;
    signal ap_block_state13_pp1_stage0_iter7_ignore_call13 : BOOLEAN;
    signal ap_block_state14_pp1_stage0_iter8_ignore_call13 : BOOLEAN;
    signal ap_block_state15_pp1_stage0_iter9_ignore_call13 : BOOLEAN;
    signal ap_block_pp1_stage0_11001_ignoreCallOp140 : BOOLEAN;
    signal empty_110_reg_250 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_phi_mux_empty_111_phi_fu_266_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal empty_111_reg_262 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_mux_empty_112_phi_fu_278_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_phi_mux_agg_tmp20_i_i_0_phi_fu_302_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_agg_tmp9_i_i_0_phi_fu_327_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_agg_tmp104_0_phi_fu_352_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln538_3_fu_518_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln538_2_fu_525_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln324_fu_532_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_107_fu_92 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln272_fu_459_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_fu_384_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_108_fu_96 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln272_1_fu_467_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_109_fu_100 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln272_2_fu_475_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp1_stage0_01001 : BOOLEAN;
    signal icmp_ln874_fu_453_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln695_4_fu_584_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln874_3_fu_590_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_condition_713 : BOOLEAN;
    signal ap_condition_717 : BOOLEAN;
    signal ap_condition_441 : BOOLEAN;

    component cornerTracker_xFApplyMask3x3_3_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        p_i00 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_i01 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_i02 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_i10 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_i11 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_i12 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_i20 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_i21 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_i22 : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component cornerTracker_mux_32_16_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component cornerTracker_xFBoxFilter3x3_2_1080_1920_3_1_5_5_1920_false_s_buf_0_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    buf_0_V_U : component cornerTracker_xFBoxFilter3x3_2_1080_1920_3_1_5_5_1920_false_s_buf_0_V
    generic map (
        DataWidth => 16,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_0_V_address0,
        ce0 => buf_0_V_ce0,
        q0 => buf_0_V_q0,
        address1 => buf_0_V_address1,
        ce1 => buf_0_V_ce1,
        we1 => buf_0_V_we1,
        d1 => buf_0_V_d1);

    buf_1_V_U : component cornerTracker_xFBoxFilter3x3_2_1080_1920_3_1_5_5_1920_false_s_buf_0_V
    generic map (
        DataWidth => 16,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_1_V_address0,
        ce0 => buf_1_V_ce0,
        q0 => buf_1_V_q0,
        address1 => buf_1_V_address1,
        ce1 => buf_1_V_ce1,
        we1 => buf_1_V_we1,
        d1 => buf_1_V_d1);

    buf_2_V_U : component cornerTracker_xFBoxFilter3x3_2_1080_1920_3_1_5_5_1920_false_s_buf_0_V
    generic map (
        DataWidth => 16,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_2_V_address0,
        ce0 => buf_2_V_ce0,
        q0 => buf_2_V_q0,
        address1 => buf_2_V_address1,
        ce1 => buf_2_V_ce1,
        we1 => buf_2_V_we1,
        d1 => buf_2_V_d1);

    grp_xFApplyMask3x3_3_s_fu_361 : component cornerTracker_xFApplyMask3x3_3_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        p_i00 => grp_xFApplyMask3x3_3_s_fu_361_p_i00,
        p_i01 => agg_tmp2_i_i_0_reg_336,
        p_i02 => grp_xFApplyMask3x3_3_s_fu_361_p_i02,
        p_i10 => grp_xFApplyMask3x3_3_s_fu_361_p_i10,
        p_i11 => agg_tmp12_i_i_0_reg_311,
        p_i12 => grp_xFApplyMask3x3_3_s_fu_361_p_i12,
        p_i20 => grp_xFApplyMask3x3_3_s_fu_361_p_i20,
        p_i21 => agg_tmp23_i_i_0_reg_286,
        p_i22 => grp_xFApplyMask3x3_3_s_fu_361_p_i22,
        ap_return => grp_xFApplyMask3x3_3_s_fu_361_ap_return,
        ap_ce => grp_xFApplyMask3x3_3_s_fu_361_ap_ce);

    mux_32_16_1_1_U175 : component cornerTracker_mux_32_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => buf_0_V_q0,
        din1 => buf_1_V_q0,
        din2 => buf_2_V_q0,
        din3 => empty_109_fu_100,
        dout => tmp_fu_548_p5);

    mux_32_16_1_1_U176 : component cornerTracker_mux_32_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => buf_0_V_q0,
        din1 => buf_1_V_q0,
        din2 => buf_2_V_q0,
        din3 => empty_108_fu_96,
        dout => tmp_3_fu_560_p5);

    mux_32_16_1_1_U177 : component cornerTracker_mux_32_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => buf_0_V_q0,
        din1 => buf_1_V_q0,
        din2 => buf_2_V_q0,
        din3 => empty_107_fu_92,
        dout => tmp_4_fu_572_p5);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_pp1_flush_enable)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln257_fu_418_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp1_exit_iter3_state9)) then 
                        ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter2;
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter8 <= ap_enable_reg_pp1_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter9 <= ap_enable_reg_pp1_iter8;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln257_fu_418_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp1_iter9 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    agg_tmp104_0_reg_348_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (icmp_ln133_reg_682_pp1_iter4_reg = ap_const_lv1_0))) then 
                agg_tmp104_0_reg_348 <= agg_tmp2_i_i_0_reg_336_pp1_iter4_reg;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln257_fu_418_p2 = ap_const_lv1_0))) then 
                agg_tmp104_0_reg_348 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    agg_tmp12_i_i_0_reg_311_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (icmp_ln133_reg_682_pp1_iter3_reg = ap_const_lv1_0))) then 
                agg_tmp12_i_i_0_reg_311 <= tmp_3_reg_719;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln257_fu_418_p2 = ap_const_lv1_0))) then 
                agg_tmp12_i_i_0_reg_311 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    agg_tmp20_i_i_0_reg_298_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (icmp_ln133_reg_682_pp1_iter4_reg = ap_const_lv1_0))) then 
                agg_tmp20_i_i_0_reg_298 <= agg_tmp23_i_i_0_reg_286_pp1_iter4_reg;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln257_fu_418_p2 = ap_const_lv1_0))) then 
                agg_tmp20_i_i_0_reg_298 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    agg_tmp23_i_i_0_reg_286_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (icmp_ln133_reg_682_pp1_iter3_reg = ap_const_lv1_0))) then 
                agg_tmp23_i_i_0_reg_286 <= tmp_4_reg_725;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln257_fu_418_p2 = ap_const_lv1_0))) then 
                agg_tmp23_i_i_0_reg_286 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    agg_tmp2_i_i_0_reg_336_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (icmp_ln133_reg_682_pp1_iter3_reg = ap_const_lv1_0))) then 
                agg_tmp2_i_i_0_reg_336 <= tmp_reg_713;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln257_fu_418_p2 = ap_const_lv1_0))) then 
                agg_tmp2_i_i_0_reg_336 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    agg_tmp9_i_i_0_reg_323_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (icmp_ln133_reg_682_pp1_iter4_reg = ap_const_lv1_0))) then 
                agg_tmp9_i_i_0_reg_323 <= agg_tmp12_i_i_0_reg_311_pp1_iter4_reg;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln257_fu_418_p2 = ap_const_lv1_0))) then 
                agg_tmp9_i_i_0_reg_323 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    empty_107_fu_92_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln257_fu_418_p2 = ap_const_lv1_0))) then
                if ((not((ap_phi_mux_empty_111_phi_fu_266_p4 = ap_const_lv13_2)) and not((ap_phi_mux_empty_111_phi_fu_266_p4 = ap_const_lv13_0)))) then 
                    empty_107_fu_92 <= select_ln272_fu_459_p3;
                elsif ((ap_phi_mux_empty_111_phi_fu_266_p4 = ap_const_lv13_2)) then 
                    empty_107_fu_92 <= ap_const_lv2_2;
                elsif ((ap_phi_mux_empty_111_phi_fu_266_p4 = ap_const_lv13_0)) then 
                    empty_107_fu_92 <= ap_const_lv2_0;
                end if;
            end if; 
        end if;
    end process;

    empty_108_fu_96_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln257_fu_418_p2 = ap_const_lv1_0))) then
                if ((not((ap_phi_mux_empty_111_phi_fu_266_p4 = ap_const_lv13_2)) and not((ap_phi_mux_empty_111_phi_fu_266_p4 = ap_const_lv13_0)))) then 
                    empty_108_fu_96 <= select_ln272_1_fu_467_p3;
                elsif ((ap_phi_mux_empty_111_phi_fu_266_p4 = ap_const_lv13_2)) then 
                    empty_108_fu_96 <= ap_const_lv2_1;
                elsif ((ap_phi_mux_empty_111_phi_fu_266_p4 = ap_const_lv13_0)) then 
                    empty_108_fu_96 <= ap_const_lv2_2;
                end if;
            end if; 
        end if;
    end process;

    empty_109_fu_100_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln257_fu_418_p2 = ap_const_lv1_0))) then
                if ((not((ap_phi_mux_empty_111_phi_fu_266_p4 = ap_const_lv13_2)) and not((ap_phi_mux_empty_111_phi_fu_266_p4 = ap_const_lv13_0)))) then 
                    empty_109_fu_100 <= select_ln272_2_fu_475_p3;
                elsif ((ap_phi_mux_empty_111_phi_fu_266_p4 = ap_const_lv13_2)) then 
                    empty_109_fu_100 <= ap_const_lv2_0;
                elsif ((ap_phi_mux_empty_111_phi_fu_266_p4 = ap_const_lv13_0)) then 
                    empty_109_fu_100 <= ap_const_lv2_1;
                end if;
            end if; 
        end if;
    end process;

    empty_110_reg_250_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((gradx2g_44_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                empty_110_reg_250 <= add_ln695_5_reg_736;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                empty_110_reg_250 <= ap_const_lv12_1;
            end if; 
        end if;
    end process;

    empty_111_reg_262_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((gradx2g_44_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                empty_111_reg_262 <= select_ln303_reg_731;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                empty_111_reg_262 <= ap_const_lv13_2;
            end if; 
        end if;
    end process;

    empty_112_reg_274_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln133_reg_682 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                empty_112_reg_274 <= add_ln695_6_reg_686;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln257_fu_418_p2 = ap_const_lv1_0))) then 
                empty_112_reg_274 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    empty_reg_239_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln241_fu_393_p2 = ap_const_lv1_0))) then 
                empty_reg_239 <= add_ln695_fu_398_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                empty_reg_239 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                add_ln257_reg_665 <= add_ln257_fu_412_p2;
                    img_height_cast2_reg_660(10 downto 0) <= img_height_cast2_fu_409_p1(10 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                add_ln695_5_reg_736 <= add_ln695_5_fu_604_p2;
                select_ln303_reg_731 <= select_ln303_fu_596_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                add_ln695_6_reg_686 <= add_ln695_6_fu_512_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp1_stage0_11001)) then
                agg_tmp12_i_i_0_reg_311_pp1_iter4_reg <= agg_tmp12_i_i_0_reg_311;
                agg_tmp23_i_i_0_reg_286_pp1_iter4_reg <= agg_tmp23_i_i_0_reg_286;
                agg_tmp2_i_i_0_reg_336_pp1_iter4_reg <= agg_tmp2_i_i_0_reg_336;
                icmp_ln133_reg_682_pp1_iter2_reg <= icmp_ln133_reg_682_pp1_iter1_reg;
                icmp_ln133_reg_682_pp1_iter3_reg <= icmp_ln133_reg_682_pp1_iter2_reg;
                icmp_ln133_reg_682_pp1_iter4_reg <= icmp_ln133_reg_682_pp1_iter3_reg;
                icmp_ln874_4_reg_709_pp1_iter3_reg <= icmp_ln874_4_reg_709;
                icmp_ln874_4_reg_709_pp1_iter4_reg <= icmp_ln874_4_reg_709_pp1_iter3_reg;
                icmp_ln874_4_reg_709_pp1_iter5_reg <= icmp_ln874_4_reg_709_pp1_iter4_reg;
                icmp_ln874_4_reg_709_pp1_iter6_reg <= icmp_ln874_4_reg_709_pp1_iter5_reg;
                icmp_ln874_4_reg_709_pp1_iter7_reg <= icmp_ln874_4_reg_709_pp1_iter6_reg;
                icmp_ln874_4_reg_709_pp1_iter8_reg <= icmp_ln874_4_reg_709_pp1_iter7_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln257_fu_418_p2 = ap_const_lv1_0))) then
                cmp_i_i421_i_reg_674 <= cmp_i_i421_i_fu_498_p2;
                trunc_ln324_reg_678 <= trunc_ln324_fu_503_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                empty_112_reg_274_pp1_iter1_reg <= empty_112_reg_274;
                icmp_ln133_reg_682 <= icmp_ln133_fu_507_p2;
                icmp_ln133_reg_682_pp1_iter1_reg <= icmp_ln133_reg_682;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln241_reg_621 <= icmp_ln241_fu_393_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln133_reg_682_pp1_iter1_reg = ap_const_lv1_0))) then
                icmp_ln874_4_reg_709 <= icmp_ln874_4_fu_539_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (icmp_ln133_reg_682_pp1_iter2_reg = ap_const_lv1_0))) then
                tmp_3_reg_719 <= tmp_3_fu_560_p5;
                tmp_4_reg_725 <= tmp_4_fu_572_p5;
                tmp_reg_713 <= tmp_fu_548_p5;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln241_fu_393_p2 = ap_const_lv1_0))) then
                    zext_ln538_reg_630(10 downto 0) <= zext_ln538_fu_404_p1(10 downto 0);
            end if;
        end if;
    end process;
    zext_ln538_reg_630(63 downto 11) <= "00000000000000000000000000000000000000000000000000000";
    img_height_cast2_reg_660(11) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, gradx2g_44_full_n, ap_enable_reg_pp1_iter9, ap_CS_fsm_state21, icmp_ln241_fu_393_p2, ap_enable_reg_pp0_iter0, icmp_ln257_fu_418_p2, ap_CS_fsm_state5, ap_enable_reg_pp1_iter3, ap_block_pp0_stage0_subdone, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter4, ap_enable_reg_pp1_iter8)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln241_fu_393_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln241_fu_393_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln257_fu_418_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter4 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) and not(((ap_enable_reg_pp1_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter8 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((((ap_enable_reg_pp1_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter8 = ap_const_logic_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter4 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                if (((gradx2g_44_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state21;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXX";
        end case;
    end process;
    add_ln257_fu_412_p2 <= std_logic_vector(unsigned(img_height_cast2_fu_409_p1) + unsigned(ap_const_lv12_1));
    add_ln695_4_fu_584_p2 <= std_logic_vector(unsigned(empty_111_reg_262) + unsigned(ap_const_lv13_1));
    add_ln695_5_fu_604_p2 <= std_logic_vector(unsigned(empty_110_reg_250) + unsigned(ap_const_lv12_1));
    add_ln695_6_fu_512_p2 <= std_logic_vector(unsigned(ap_phi_mux_empty_112_phi_fu_278_p4) + unsigned(ap_const_lv11_1));
    add_ln695_fu_398_p2 <= std_logic_vector(unsigned(empty_reg_239) + unsigned(ap_const_lv11_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(4);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state16 <= ap_CS_fsm(5);
    ap_CS_fsm_state21 <= ap_CS_fsm(10);
    ap_CS_fsm_state4 <= ap_CS_fsm(2);
    ap_CS_fsm_state5 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(gradx_2_41_empty_n, ap_enable_reg_pp0_iter1, icmp_ln241_reg_621)
    begin
                ap_block_pp0_stage0_11001 <= ((icmp_ln241_reg_621 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (gradx_2_41_empty_n = ap_const_logic_0));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(gradx_2_41_empty_n, ap_enable_reg_pp0_iter1, icmp_ln241_reg_621)
    begin
                ap_block_pp0_stage0_subdone <= ((icmp_ln241_reg_621 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (gradx_2_41_empty_n = ap_const_logic_0));
    end process;

        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_01001_assign_proc : process(gradx_2_41_empty_n, gradx2g_44_full_n, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter9, icmp_ln874_4_reg_709_pp1_iter8_reg, ap_predicate_op105_read_state7)
    begin
                ap_block_pp1_stage0_01001 <= (((icmp_ln874_4_reg_709_pp1_iter8_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter9 = ap_const_logic_1) and (gradx2g_44_full_n = ap_const_logic_0)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (gradx_2_41_empty_n = ap_const_logic_0) and (ap_predicate_op105_read_state7 = ap_const_boolean_1)));
    end process;


    ap_block_pp1_stage0_11001_assign_proc : process(gradx_2_41_empty_n, gradx2g_44_full_n, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter9, icmp_ln874_4_reg_709_pp1_iter8_reg, ap_predicate_op105_read_state7)
    begin
                ap_block_pp1_stage0_11001 <= (((icmp_ln874_4_reg_709_pp1_iter8_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter9 = ap_const_logic_1) and (gradx2g_44_full_n = ap_const_logic_0)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (gradx_2_41_empty_n = ap_const_logic_0) and (ap_predicate_op105_read_state7 = ap_const_boolean_1)));
    end process;


    ap_block_pp1_stage0_11001_ignoreCallOp140_assign_proc : process(gradx_2_41_empty_n, gradx2g_44_full_n, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter9, icmp_ln874_4_reg_709_pp1_iter8_reg, ap_predicate_op105_read_state7)
    begin
                ap_block_pp1_stage0_11001_ignoreCallOp140 <= (((icmp_ln874_4_reg_709_pp1_iter8_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter9 = ap_const_logic_1) and (gradx2g_44_full_n = ap_const_logic_0)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (gradx_2_41_empty_n = ap_const_logic_0) and (ap_predicate_op105_read_state7 = ap_const_boolean_1)));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(gradx_2_41_empty_n, gradx2g_44_full_n, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter9, icmp_ln874_4_reg_709_pp1_iter8_reg, ap_predicate_op105_read_state7)
    begin
                ap_block_pp1_stage0_subdone <= (((icmp_ln874_4_reg_709_pp1_iter8_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter9 = ap_const_logic_1) and (gradx2g_44_full_n = ap_const_logic_0)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (gradx_2_41_empty_n = ap_const_logic_0) and (ap_predicate_op105_read_state7 = ap_const_boolean_1)));
    end process;

        ap_block_state10_pp1_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp1_stage0_iter4_ignore_call13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp1_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp1_stage0_iter5_ignore_call13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp1_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp1_stage0_iter6_ignore_call13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp1_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp1_stage0_iter7_ignore_call13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp1_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp1_stage0_iter8_ignore_call13 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state15_pp1_stage0_iter9_assign_proc : process(gradx2g_44_full_n, icmp_ln874_4_reg_709_pp1_iter8_reg)
    begin
                ap_block_state15_pp1_stage0_iter9 <= ((icmp_ln874_4_reg_709_pp1_iter8_reg = ap_const_lv1_0) and (gradx2g_44_full_n = ap_const_logic_0));
    end process;


    ap_block_state15_pp1_stage0_iter9_ignore_call13_assign_proc : process(gradx2g_44_full_n, icmp_ln874_4_reg_709_pp1_iter8_reg)
    begin
                ap_block_state15_pp1_stage0_iter9_ignore_call13 <= ((icmp_ln874_4_reg_709_pp1_iter8_reg = ap_const_lv1_0) and (gradx2g_44_full_n = ap_const_logic_0));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter1_assign_proc : process(gradx_2_41_empty_n, icmp_ln241_reg_621)
    begin
                ap_block_state3_pp0_stage0_iter1 <= ((icmp_ln241_reg_621 = ap_const_lv1_0) and (gradx_2_41_empty_n = ap_const_logic_0));
    end process;

        ap_block_state6_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp1_stage0_iter0_ignore_call13 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state7_pp1_stage0_iter1_assign_proc : process(gradx_2_41_empty_n, ap_predicate_op105_read_state7)
    begin
                ap_block_state7_pp1_stage0_iter1 <= ((gradx_2_41_empty_n = ap_const_logic_0) and (ap_predicate_op105_read_state7 = ap_const_boolean_1));
    end process;


    ap_block_state7_pp1_stage0_iter1_ignore_call13_assign_proc : process(gradx_2_41_empty_n, ap_predicate_op105_read_state7)
    begin
                ap_block_state7_pp1_stage0_iter1_ignore_call13 <= ((gradx_2_41_empty_n = ap_const_logic_0) and (ap_predicate_op105_read_state7 = ap_const_boolean_1));
    end process;

        ap_block_state8_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp1_stage0_iter2_ignore_call13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp1_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp1_stage0_iter3_ignore_call13 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_441_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln133_reg_682)
    begin
                ap_condition_441 <= ((icmp_ln133_reg_682 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0));
    end process;


    ap_condition_713_assign_proc : process(cmp_i_i421_i_reg_674, grp_load_fu_384_p1)
    begin
                ap_condition_713 <= (not((grp_load_fu_384_p1 = ap_const_lv2_1)) and not((grp_load_fu_384_p1 = ap_const_lv2_0)) and (cmp_i_i421_i_reg_674 = ap_const_lv1_0));
    end process;


    ap_condition_717_assign_proc : process(cmp_i_i421_i_reg_674, trunc_ln324_reg_678)
    begin
                ap_condition_717 <= (not((trunc_ln324_reg_678 = ap_const_lv2_1)) and not((trunc_ln324_reg_678 = ap_const_lv2_0)) and (cmp_i_i421_i_reg_674 = ap_const_lv1_1));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln241_fu_393_p2)
    begin
        if ((icmp_ln241_fu_393_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter3_state9_assign_proc : process(ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            ap_condition_pp1_exit_iter3_state9 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter3_state9 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_flush_enable_assign_proc : process(ap_CS_fsm_pp1_stage0, icmp_ln133_fu_507_p2, ap_block_pp1_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (icmp_ln133_fu_507_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            ap_condition_pp1_flush_enable <= ap_const_logic_1;
        else 
            ap_condition_pp1_flush_enable <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, icmp_ln257_fu_418_p2, ap_CS_fsm_state5)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln257_fu_418_p2 = ap_const_lv1_1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter9, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter4, ap_enable_reg_pp1_iter5, ap_enable_reg_pp1_iter6, ap_enable_reg_pp1_iter7, ap_enable_reg_pp1_iter8)
    begin
        if (((ap_enable_reg_pp1_iter9 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter8 = ap_const_logic_0) and (ap_enable_reg_pp1_iter7 = ap_const_logic_0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_agg_tmp104_0_phi_fu_352_p4_assign_proc : process(ap_block_pp1_stage0, agg_tmp2_i_i_0_reg_336_pp1_iter4_reg, agg_tmp104_0_reg_348, icmp_ln133_reg_682_pp1_iter4_reg, ap_enable_reg_pp1_iter5)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (icmp_ln133_reg_682_pp1_iter4_reg = ap_const_lv1_0))) then 
            ap_phi_mux_agg_tmp104_0_phi_fu_352_p4 <= agg_tmp2_i_i_0_reg_336_pp1_iter4_reg;
        else 
            ap_phi_mux_agg_tmp104_0_phi_fu_352_p4 <= agg_tmp104_0_reg_348;
        end if; 
    end process;


    ap_phi_mux_agg_tmp20_i_i_0_phi_fu_302_p4_assign_proc : process(ap_block_pp1_stage0, agg_tmp23_i_i_0_reg_286_pp1_iter4_reg, agg_tmp20_i_i_0_reg_298, icmp_ln133_reg_682_pp1_iter4_reg, ap_enable_reg_pp1_iter5)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (icmp_ln133_reg_682_pp1_iter4_reg = ap_const_lv1_0))) then 
            ap_phi_mux_agg_tmp20_i_i_0_phi_fu_302_p4 <= agg_tmp23_i_i_0_reg_286_pp1_iter4_reg;
        else 
            ap_phi_mux_agg_tmp20_i_i_0_phi_fu_302_p4 <= agg_tmp20_i_i_0_reg_298;
        end if; 
    end process;


    ap_phi_mux_agg_tmp9_i_i_0_phi_fu_327_p4_assign_proc : process(ap_block_pp1_stage0, agg_tmp12_i_i_0_reg_311_pp1_iter4_reg, agg_tmp9_i_i_0_reg_323, icmp_ln133_reg_682_pp1_iter4_reg, ap_enable_reg_pp1_iter5)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (icmp_ln133_reg_682_pp1_iter4_reg = ap_const_lv1_0))) then 
            ap_phi_mux_agg_tmp9_i_i_0_phi_fu_327_p4 <= agg_tmp12_i_i_0_reg_311_pp1_iter4_reg;
        else 
            ap_phi_mux_agg_tmp9_i_i_0_phi_fu_327_p4 <= agg_tmp9_i_i_0_reg_323;
        end if; 
    end process;

    ap_phi_mux_empty_111_phi_fu_266_p4 <= empty_111_reg_262;

    ap_phi_mux_empty_112_phi_fu_278_p4_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln133_reg_682, empty_112_reg_274, add_ln695_6_reg_686)
    begin
        if (((icmp_ln133_reg_682 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            ap_phi_mux_empty_112_phi_fu_278_p4 <= add_ln695_6_reg_686;
        else 
            ap_phi_mux_empty_112_phi_fu_278_p4 <= empty_112_reg_274;
        end if; 
    end process;


    ap_predicate_op105_read_state7_assign_proc : process(icmp_ln133_reg_682, cmp_i_i421_i_reg_674)
    begin
                ap_predicate_op105_read_state7 <= ((cmp_i_i421_i_reg_674 = ap_const_lv1_1) and (icmp_ln133_reg_682 = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(icmp_ln257_fu_418_p2, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln257_fu_418_p2 = ap_const_lv1_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    buf_0_V_address0 <= zext_ln324_fu_532_p1(11 - 1 downto 0);

    buf_0_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln133_reg_682, cmp_i_i421_i_reg_674, ap_enable_reg_pp0_iter0, zext_ln538_fu_404_p1, trunc_ln324_reg_678, zext_ln538_3_fu_518_p1, zext_ln538_2_fu_525_p1, grp_load_fu_384_p1)
    begin
        if (((cmp_i_i421_i_reg_674 = ap_const_lv1_1) and (icmp_ln133_reg_682 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (trunc_ln324_reg_678 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            buf_0_V_address1 <= zext_ln538_2_fu_525_p1(11 - 1 downto 0);
        elsif (((cmp_i_i421_i_reg_674 = ap_const_lv1_0) and (icmp_ln133_reg_682 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (grp_load_fu_384_p1 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            buf_0_V_address1 <= zext_ln538_3_fu_518_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            buf_0_V_address1 <= zext_ln538_fu_404_p1(11 - 1 downto 0);
        else 
            buf_0_V_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_0_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            buf_0_V_ce0 <= ap_const_logic_1;
        else 
            buf_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_0_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln133_reg_682, cmp_i_i421_i_reg_674, ap_block_pp1_stage0_11001, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, trunc_ln324_reg_678, grp_load_fu_384_p1)
    begin
        if ((((cmp_i_i421_i_reg_674 = ap_const_lv1_1) and (icmp_ln133_reg_682 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (trunc_ln324_reg_678 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((cmp_i_i421_i_reg_674 = ap_const_lv1_0) and (icmp_ln133_reg_682 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (grp_load_fu_384_p1 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            buf_0_V_ce1 <= ap_const_logic_1;
        else 
            buf_0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_0_V_d1_assign_proc : process(gradx_2_41_dout, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln133_reg_682, cmp_i_i421_i_reg_674, ap_enable_reg_pp0_iter0, trunc_ln324_reg_678, grp_load_fu_384_p1)
    begin
        if (((cmp_i_i421_i_reg_674 = ap_const_lv1_1) and (icmp_ln133_reg_682 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (trunc_ln324_reg_678 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            buf_0_V_d1 <= gradx_2_41_dout;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((cmp_i_i421_i_reg_674 = ap_const_lv1_0) and (icmp_ln133_reg_682 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (grp_load_fu_384_p1 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            buf_0_V_d1 <= ap_const_lv16_0;
        else 
            buf_0_V_d1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    buf_0_V_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln133_reg_682, cmp_i_i421_i_reg_674, ap_block_pp1_stage0_11001, icmp_ln241_fu_393_p2, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, trunc_ln324_reg_678, grp_load_fu_384_p1)
    begin
        if ((((cmp_i_i421_i_reg_674 = ap_const_lv1_1) and (icmp_ln133_reg_682 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (trunc_ln324_reg_678 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((cmp_i_i421_i_reg_674 = ap_const_lv1_0) and (icmp_ln133_reg_682 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (grp_load_fu_384_p1 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln241_fu_393_p2 = ap_const_lv1_0)))) then 
            buf_0_V_we1 <= ap_const_logic_1;
        else 
            buf_0_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_1_V_address0 <= zext_ln324_fu_532_p1(11 - 1 downto 0);

    buf_1_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln133_reg_682, cmp_i_i421_i_reg_674, zext_ln538_reg_630, trunc_ln324_reg_678, zext_ln538_3_fu_518_p1, zext_ln538_2_fu_525_p1, grp_load_fu_384_p1)
    begin
        if (((cmp_i_i421_i_reg_674 = ap_const_lv1_1) and (icmp_ln133_reg_682 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (trunc_ln324_reg_678 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            buf_1_V_address1 <= zext_ln538_2_fu_525_p1(11 - 1 downto 0);
        elsif (((cmp_i_i421_i_reg_674 = ap_const_lv1_0) and (icmp_ln133_reg_682 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (grp_load_fu_384_p1 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            buf_1_V_address1 <= zext_ln538_3_fu_518_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            buf_1_V_address1 <= zext_ln538_reg_630(11 - 1 downto 0);
        else 
            buf_1_V_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_1_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            buf_1_V_ce0 <= ap_const_logic_1;
        else 
            buf_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_1_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln133_reg_682, cmp_i_i421_i_reg_674, ap_block_pp1_stage0_11001, ap_block_pp0_stage0_11001, trunc_ln324_reg_678, grp_load_fu_384_p1)
    begin
        if ((((cmp_i_i421_i_reg_674 = ap_const_lv1_1) and (icmp_ln133_reg_682 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (trunc_ln324_reg_678 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((cmp_i_i421_i_reg_674 = ap_const_lv1_0) and (icmp_ln133_reg_682 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (grp_load_fu_384_p1 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            buf_1_V_ce1 <= ap_const_logic_1;
        else 
            buf_1_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_1_V_d1_assign_proc : process(gradx_2_41_dout, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln133_reg_682, cmp_i_i421_i_reg_674, trunc_ln324_reg_678, grp_load_fu_384_p1)
    begin
        if (((cmp_i_i421_i_reg_674 = ap_const_lv1_0) and (icmp_ln133_reg_682 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (grp_load_fu_384_p1 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            buf_1_V_d1 <= ap_const_lv16_0;
        elsif ((((cmp_i_i421_i_reg_674 = ap_const_lv1_1) and (icmp_ln133_reg_682 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (trunc_ln324_reg_678 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            buf_1_V_d1 <= gradx_2_41_dout;
        else 
            buf_1_V_d1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    buf_1_V_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln241_reg_621, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln133_reg_682, cmp_i_i421_i_reg_674, ap_block_pp1_stage0_11001, ap_block_pp0_stage0_11001, trunc_ln324_reg_678, grp_load_fu_384_p1)
    begin
        if ((((cmp_i_i421_i_reg_674 = ap_const_lv1_1) and (icmp_ln133_reg_682 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (trunc_ln324_reg_678 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((icmp_ln241_reg_621 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((cmp_i_i421_i_reg_674 = ap_const_lv1_0) and (icmp_ln133_reg_682 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (grp_load_fu_384_p1 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            buf_1_V_we1 <= ap_const_logic_1;
        else 
            buf_1_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_2_V_address0 <= zext_ln324_fu_532_p1(11 - 1 downto 0);

    buf_2_V_address1_assign_proc : process(zext_ln538_3_fu_518_p1, zext_ln538_2_fu_525_p1, ap_condition_713, ap_condition_717, ap_condition_441)
    begin
        if ((ap_const_boolean_1 = ap_condition_441)) then
            if ((ap_const_boolean_1 = ap_condition_717)) then 
                buf_2_V_address1 <= zext_ln538_2_fu_525_p1(11 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_713)) then 
                buf_2_V_address1 <= zext_ln538_3_fu_518_p1(11 - 1 downto 0);
            else 
                buf_2_V_address1 <= "XXXXXXXXXXX";
            end if;
        else 
            buf_2_V_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_2_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            buf_2_V_ce0 <= ap_const_logic_1;
        else 
            buf_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_2_V_ce1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln133_reg_682, cmp_i_i421_i_reg_674, ap_block_pp1_stage0_11001, trunc_ln324_reg_678, grp_load_fu_384_p1)
    begin
        if (((not((trunc_ln324_reg_678 = ap_const_lv2_1)) and not((trunc_ln324_reg_678 = ap_const_lv2_0)) and (cmp_i_i421_i_reg_674 = ap_const_lv1_1) and (icmp_ln133_reg_682 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or (not((grp_load_fu_384_p1 = ap_const_lv2_1)) and not((grp_load_fu_384_p1 = ap_const_lv2_0)) and (cmp_i_i421_i_reg_674 = ap_const_lv1_0) and (icmp_ln133_reg_682 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            buf_2_V_ce1 <= ap_const_logic_1;
        else 
            buf_2_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_2_V_d1_assign_proc : process(gradx_2_41_dout, ap_condition_713, ap_condition_717, ap_condition_441)
    begin
        if ((ap_const_boolean_1 = ap_condition_441)) then
            if ((ap_const_boolean_1 = ap_condition_717)) then 
                buf_2_V_d1 <= gradx_2_41_dout;
            elsif ((ap_const_boolean_1 = ap_condition_713)) then 
                buf_2_V_d1 <= ap_const_lv16_0;
            else 
                buf_2_V_d1 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            buf_2_V_d1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    buf_2_V_we1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln133_reg_682, cmp_i_i421_i_reg_674, ap_block_pp1_stage0_11001, trunc_ln324_reg_678, grp_load_fu_384_p1)
    begin
        if (((not((trunc_ln324_reg_678 = ap_const_lv2_1)) and not((trunc_ln324_reg_678 = ap_const_lv2_0)) and (cmp_i_i421_i_reg_674 = ap_const_lv1_1) and (icmp_ln133_reg_682 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or (not((grp_load_fu_384_p1 = ap_const_lv2_1)) and not((grp_load_fu_384_p1 = ap_const_lv2_0)) and (cmp_i_i421_i_reg_674 = ap_const_lv1_0) and (icmp_ln133_reg_682 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            buf_2_V_we1 <= ap_const_logic_1;
        else 
            buf_2_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    cmp_i_i421_i_fu_498_p2 <= "1" when (unsigned(empty_110_reg_250) < unsigned(img_height_cast2_reg_660)) else "0";

    gradx2g_44_blk_n_assign_proc : process(gradx2g_44_full_n, ap_block_pp1_stage0, ap_enable_reg_pp1_iter9, icmp_ln874_4_reg_709_pp1_iter8_reg, ap_CS_fsm_state21)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or ((icmp_ln874_4_reg_709_pp1_iter8_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0)))) then 
            gradx2g_44_blk_n <= gradx2g_44_full_n;
        else 
            gradx2g_44_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    gradx2g_44_din <= grp_xFApplyMask3x3_3_s_fu_361_ap_return;

    gradx2g_44_write_assign_proc : process(gradx2g_44_full_n, ap_enable_reg_pp1_iter9, icmp_ln874_4_reg_709_pp1_iter8_reg, ap_CS_fsm_state21, ap_block_pp1_stage0_11001)
    begin
        if ((((icmp_ln874_4_reg_709_pp1_iter8_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((gradx2g_44_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state21)))) then 
            gradx2g_44_write <= ap_const_logic_1;
        else 
            gradx2g_44_write <= ap_const_logic_0;
        end if; 
    end process;


    gradx_2_41_blk_n_assign_proc : process(gradx_2_41_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln241_reg_621, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln133_reg_682, cmp_i_i421_i_reg_674)
    begin
        if ((((cmp_i_i421_i_reg_674 = ap_const_lv1_1) and (icmp_ln133_reg_682 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((icmp_ln241_reg_621 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            gradx_2_41_blk_n <= gradx_2_41_empty_n;
        else 
            gradx_2_41_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    gradx_2_41_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln241_reg_621, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_predicate_op105_read_state7, ap_block_pp1_stage0_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_predicate_op105_read_state7 = ap_const_boolean_1)) or ((icmp_ln241_reg_621 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            gradx_2_41_read <= ap_const_logic_1;
        else 
            gradx_2_41_read <= ap_const_logic_0;
        end if; 
    end process;

    grp_load_fu_384_p1 <= empty_107_fu_92;

    grp_xFApplyMask3x3_3_s_fu_361_ap_ce_assign_proc : process(ap_CS_fsm_state1, gradx2g_44_full_n, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_CS_fsm_state21, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_block_pp1_stage0_11001_ignoreCallOp140)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) or (ap_const_logic_1 = ap_CS_fsm_state1) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_1 = ap_block_pp1_stage0_11001_ignoreCallOp140)) or ((gradx2g_44_full_n = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state21)))) then 
            grp_xFApplyMask3x3_3_s_fu_361_ap_ce <= ap_const_logic_0;
        else 
            grp_xFApplyMask3x3_3_s_fu_361_ap_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_xFApplyMask3x3_3_s_fu_361_p_i00_assign_proc : process(ap_block_pp1_stage0, agg_tmp104_0_reg_348, icmp_ln133_reg_682_pp1_iter3_reg, ap_CS_fsm_state16, ap_enable_reg_pp1_iter4, ap_phi_mux_agg_tmp104_0_phi_fu_352_p4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_xFApplyMask3x3_3_s_fu_361_p_i00 <= agg_tmp104_0_reg_348;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (icmp_ln133_reg_682_pp1_iter3_reg = ap_const_lv1_0))) then 
            grp_xFApplyMask3x3_3_s_fu_361_p_i00 <= ap_phi_mux_agg_tmp104_0_phi_fu_352_p4;
        else 
            grp_xFApplyMask3x3_3_s_fu_361_p_i00 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_xFApplyMask3x3_3_s_fu_361_p_i02_assign_proc : process(ap_block_pp1_stage0, icmp_ln133_reg_682_pp1_iter3_reg, tmp_reg_713, ap_CS_fsm_state16, ap_enable_reg_pp1_iter4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_xFApplyMask3x3_3_s_fu_361_p_i02 <= ap_const_lv16_0;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (icmp_ln133_reg_682_pp1_iter3_reg = ap_const_lv1_0))) then 
            grp_xFApplyMask3x3_3_s_fu_361_p_i02 <= tmp_reg_713;
        else 
            grp_xFApplyMask3x3_3_s_fu_361_p_i02 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_xFApplyMask3x3_3_s_fu_361_p_i10_assign_proc : process(ap_block_pp1_stage0, agg_tmp9_i_i_0_reg_323, icmp_ln133_reg_682_pp1_iter3_reg, ap_CS_fsm_state16, ap_enable_reg_pp1_iter4, ap_phi_mux_agg_tmp9_i_i_0_phi_fu_327_p4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_xFApplyMask3x3_3_s_fu_361_p_i10 <= agg_tmp9_i_i_0_reg_323;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (icmp_ln133_reg_682_pp1_iter3_reg = ap_const_lv1_0))) then 
            grp_xFApplyMask3x3_3_s_fu_361_p_i10 <= ap_phi_mux_agg_tmp9_i_i_0_phi_fu_327_p4;
        else 
            grp_xFApplyMask3x3_3_s_fu_361_p_i10 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_xFApplyMask3x3_3_s_fu_361_p_i12_assign_proc : process(ap_block_pp1_stage0, icmp_ln133_reg_682_pp1_iter3_reg, tmp_3_reg_719, ap_CS_fsm_state16, ap_enable_reg_pp1_iter4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_xFApplyMask3x3_3_s_fu_361_p_i12 <= ap_const_lv16_0;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (icmp_ln133_reg_682_pp1_iter3_reg = ap_const_lv1_0))) then 
            grp_xFApplyMask3x3_3_s_fu_361_p_i12 <= tmp_3_reg_719;
        else 
            grp_xFApplyMask3x3_3_s_fu_361_p_i12 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_xFApplyMask3x3_3_s_fu_361_p_i20_assign_proc : process(ap_block_pp1_stage0, agg_tmp20_i_i_0_reg_298, icmp_ln133_reg_682_pp1_iter3_reg, ap_CS_fsm_state16, ap_enable_reg_pp1_iter4, ap_phi_mux_agg_tmp20_i_i_0_phi_fu_302_p4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_xFApplyMask3x3_3_s_fu_361_p_i20 <= agg_tmp20_i_i_0_reg_298;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (icmp_ln133_reg_682_pp1_iter3_reg = ap_const_lv1_0))) then 
            grp_xFApplyMask3x3_3_s_fu_361_p_i20 <= ap_phi_mux_agg_tmp20_i_i_0_phi_fu_302_p4;
        else 
            grp_xFApplyMask3x3_3_s_fu_361_p_i20 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_xFApplyMask3x3_3_s_fu_361_p_i22_assign_proc : process(ap_block_pp1_stage0, icmp_ln133_reg_682_pp1_iter3_reg, tmp_4_reg_725, ap_CS_fsm_state16, ap_enable_reg_pp1_iter4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_xFApplyMask3x3_3_s_fu_361_p_i22 <= ap_const_lv16_0;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (icmp_ln133_reg_682_pp1_iter3_reg = ap_const_lv1_0))) then 
            grp_xFApplyMask3x3_3_s_fu_361_p_i22 <= tmp_4_reg_725;
        else 
            grp_xFApplyMask3x3_3_s_fu_361_p_i22 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    icmp_ln133_fu_507_p2 <= "1" when (ap_phi_mux_empty_112_phi_fu_278_p4 = img_width) else "0";
    icmp_ln241_fu_393_p2 <= "1" when (empty_reg_239 = img_width) else "0";
    icmp_ln257_fu_418_p2 <= "1" when (empty_110_reg_250 = add_ln257_reg_665) else "0";
    icmp_ln874_3_fu_590_p2 <= "1" when (add_ln695_4_fu_584_p2 = ap_const_lv13_3) else "0";
    icmp_ln874_4_fu_539_p2 <= "1" when (empty_112_reg_274_pp1_iter1_reg = ap_const_lv11_0) else "0";
    icmp_ln874_fu_453_p2 <= "1" when (empty_111_reg_262 = ap_const_lv13_1) else "0";
    img_height_cast2_fu_409_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(img_height),12));
    select_ln272_1_fu_467_p3 <= 
        ap_const_lv2_0 when (icmp_ln874_fu_453_p2(0) = '1') else 
        empty_108_fu_96;
    select_ln272_2_fu_475_p3 <= 
        ap_const_lv2_2 when (icmp_ln874_fu_453_p2(0) = '1') else 
        empty_109_fu_100;
    select_ln272_fu_459_p3 <= 
        ap_const_lv2_1 when (icmp_ln874_fu_453_p2(0) = '1') else 
        empty_107_fu_92;
    select_ln303_fu_596_p3 <= 
        ap_const_lv13_0 when (icmp_ln874_3_fu_590_p2(0) = '1') else 
        add_ln695_4_fu_584_p2;
    trunc_ln324_fu_503_p1 <= empty_111_reg_262(2 - 1 downto 0);
    zext_ln324_fu_532_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_112_reg_274_pp1_iter1_reg),64));
    zext_ln538_2_fu_525_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_112_reg_274),64));
    zext_ln538_3_fu_518_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_112_reg_274),64));
    zext_ln538_fu_404_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_reg_239),64));
end behav;
