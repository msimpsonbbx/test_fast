// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module pyr_down_accel_xf_pyrdown_gaussian_nxn_1080_1920_0_1_1_1922_5_25_1_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_filter_in1_dout,
        p_filter_in1_empty_n,
        p_filter_in1_read,
        p_filter_out2_din,
        p_filter_out2_full_n,
        p_filter_out2_write,
        img_height,
        img_width
);

parameter    ap_ST_fsm_state1 = 11'd1;
parameter    ap_ST_fsm_state2 = 11'd2;
parameter    ap_ST_fsm_state3 = 11'd4;
parameter    ap_ST_fsm_state4 = 11'd8;
parameter    ap_ST_fsm_pp1_stage0 = 11'd16;
parameter    ap_ST_fsm_state7 = 11'd32;
parameter    ap_ST_fsm_pp2_stage0 = 11'd64;
parameter    ap_ST_fsm_state10 = 11'd128;
parameter    ap_ST_fsm_state11 = 11'd256;
parameter    ap_ST_fsm_pp3_stage0 = 11'd512;
parameter    ap_ST_fsm_state17 = 11'd1024;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] p_filter_in1_dout;
input   p_filter_in1_empty_n;
output   p_filter_in1_read;
output  [7:0] p_filter_out2_din;
input   p_filter_out2_full_n;
output   p_filter_out2_write;
input  [15:0] img_height;
input  [15:0] img_width;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg p_filter_in1_read;
reg p_filter_out2_write;

(* fsm_encoding = "none" *) reg   [10:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    p_filter_in1_blk_n;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter1;
wire    ap_block_pp3_stage0;
reg   [0:0] and_ln120_reg_2412;
reg    p_filter_out2_blk_n;
reg    ap_enable_reg_pp3_iter4;
reg   [0:0] icmp_ln886_reg_2425;
reg   [0:0] icmp_ln886_reg_2425_pp3_iter3_reg;
reg   [12:0] empty_52_reg_544;
reg   [12:0] empty_53_reg_556;
reg   [12:0] empty_56_reg_634;
reg   [12:0] empty_56_reg_634_pp3_iter1_reg;
wire    ap_block_state12_pp3_stage0_iter0;
reg    ap_block_state13_pp3_stage0_iter1;
wire    ap_block_state14_pp3_stage0_iter2;
wire    ap_block_state15_pp3_stage0_iter3;
reg    ap_block_state16_pp3_stage0_iter4;
reg    ap_block_pp3_stage0_11001;
wire   [13:0] empty_fu_646_p1;
reg   [13:0] empty_reg_2064;
reg   [12:0] row_ind_V_0_0_load_reg_2069;
wire    ap_CS_fsm_state2;
reg   [12:0] row_ind_V_1_0_load_reg_2074;
reg   [12:0] row_ind_V_2_0_load_reg_2079;
reg   [12:0] row_ind_V_3_0_load_reg_2086;
reg   [12:0] row_ind_V_4_0_load_reg_2091;
wire   [2:0] init_row_ind_fu_671_p2;
wire   [63:0] zext_ln538_fu_706_p1;
wire    ap_CS_fsm_state3;
wire   [63:0] wide_trip_count_fu_709_p1;
reg   [63:0] wide_trip_count_reg_2110;
wire   [0:0] icmp_ln882_1_fu_712_p2;
wire    ap_CS_fsm_state4;
wire   [2:0] trunc_ln324_fu_717_p1;
reg   [2:0] trunc_ln324_reg_2119;
wire   [2:0] trunc_ln324_1_fu_721_p1;
reg   [2:0] trunc_ln324_1_reg_2123;
wire   [0:0] icmp_ln882_2_fu_728_p2;
reg   [0:0] icmp_ln882_2_reg_2129;
wire    ap_block_state5_pp1_stage0_iter0;
reg    ap_block_state6_pp1_stage0_iter1;
reg    ap_block_pp1_stage0_11001;
wire   [12:0] add_ln695_fu_733_p2;
reg   [12:0] add_ln695_reg_2133;
reg    ap_enable_reg_pp1_iter0;
wire   [63:0] add_ln217_fu_748_p2;
wire    ap_CS_fsm_state7;
wire   [0:0] icmp_ln882_3_fu_758_p2;
reg   [0:0] icmp_ln882_3_reg_2143;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state8_pp2_stage0_iter0;
wire    ap_block_state9_pp2_stage0_iter1;
wire    ap_block_pp2_stage0_11001;
wire   [12:0] add_ln695_1_fu_763_p2;
reg    ap_enable_reg_pp2_iter0;
reg   [10:0] buf_0_V_addr_1_reg_2152;
reg   [10:0] buf_1_V_addr_1_reg_2158;
wire   [16:0] add_i_i50_fu_813_p2;
reg   [16:0] add_i_i50_reg_2314;
wire    ap_CS_fsm_state10;
wire   [13:0] op2_assign_fu_819_p2;
reg   [13:0] op2_assign_reg_2319;
wire   [16:0] sub_i_fu_824_p2;
reg   [16:0] sub_i_reg_2324;
wire   [0:0] icmp_ln882_4_fu_838_p2;
wire    ap_CS_fsm_state11;
wire   [0:0] cmp_i_i289_i_fu_843_p2;
reg   [0:0] cmp_i_i289_i_reg_2334;
wire   [2:0] empty_55_fu_868_p1;
reg   [2:0] empty_55_reg_2339;
wire   [0:0] spec_select2101_fu_880_p2;
reg   [0:0] spec_select2101_reg_2344;
wire   [0:0] spec_select2117_fu_892_p2;
reg   [0:0] spec_select2117_reg_2349;
wire   [0:0] spec_select2133_fu_914_p2;
reg   [0:0] spec_select2133_reg_2354;
wire   [0:0] spec_select2149_fu_926_p2;
reg   [0:0] spec_select2149_reg_2359;
wire   [0:0] spec_select2165_fu_938_p2;
reg   [0:0] spec_select2165_reg_2364;
wire   [2:0] trunc_ln324_2_fu_944_p1;
reg   [2:0] trunc_ln324_2_reg_2369;
wire   [2:0] trunc_ln324_3_fu_948_p1;
reg   [2:0] trunc_ln324_3_reg_2374;
wire   [2:0] trunc_ln324_4_fu_952_p1;
reg   [2:0] trunc_ln324_4_reg_2379;
wire   [2:0] trunc_ln324_5_fu_956_p1;
reg   [2:0] trunc_ln324_5_reg_2384;
wire   [2:0] trunc_ln324_6_fu_960_p1;
reg   [2:0] trunc_ln324_6_reg_2389;
wire   [0:0] icmp_ln882_5_fu_972_p2;
reg   [0:0] icmp_ln882_5_reg_2394;
reg   [0:0] icmp_ln882_5_reg_2394_pp3_iter1_reg;
reg   [0:0] icmp_ln882_5_reg_2394_pp3_iter2_reg;
wire   [12:0] add_ln695_20_fu_977_p2;
reg   [12:0] add_ln695_20_reg_2398;
reg    ap_enable_reg_pp3_iter0;
wire   [0:0] icmp_ln882_6_fu_983_p2;
reg   [0:0] icmp_ln882_6_reg_2403;
reg   [0:0] icmp_ln882_6_reg_2403_pp3_iter1_reg;
reg   [0:0] icmp_ln882_6_reg_2403_pp3_iter2_reg;
wire   [0:0] and_ln120_fu_988_p2;
wire   [2:0] trunc_ln324_7_fu_1008_p1;
reg   [2:0] trunc_ln324_7_reg_2416;
reg   [2:0] trunc_ln324_7_reg_2416_pp3_iter1_reg;
reg   [2:0] trunc_ln324_7_reg_2416_pp3_iter2_reg;
wire   [0:0] icmp_ln886_fu_1022_p2;
reg   [0:0] icmp_ln886_reg_2425_pp3_iter1_reg;
reg   [0:0] icmp_ln886_reg_2425_pp3_iter2_reg;
wire   [0:0] cmp_i_i_i_fu_1055_p2;
reg   [0:0] cmp_i_i_i_reg_2454;
reg   [7:0] src_buf_V_2_1_load_reg_2473;
wire   [9:0] add_ln695_4_fu_1451_p2;
reg   [9:0] add_ln695_4_reg_2478;
wire   [10:0] add_ln695_10_fu_1545_p2;
reg   [10:0] add_ln695_10_reg_2484;
wire   [10:0] tmp29_fu_1555_p2;
reg   [10:0] tmp29_reg_2489;
wire   [9:0] empty_58_fu_1597_p2;
reg   [9:0] empty_58_reg_2494;
wire   [11:0] add_ln695_15_fu_1633_p2;
reg   [11:0] add_ln695_15_reg_2499;
wire   [12:0] add_ln695_2_fu_2015_p2;
wire    ap_CS_fsm_state17;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state5;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state8;
reg    ap_enable_reg_pp2_iter1;
reg    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state12;
reg    ap_enable_reg_pp3_iter2;
reg    ap_enable_reg_pp3_iter3;
reg   [10:0] buf_0_V_address0;
reg    buf_0_V_ce0;
wire   [7:0] buf_0_V_q0;
reg   [10:0] buf_0_V_address1;
reg    buf_0_V_ce1;
reg    buf_0_V_we1;
reg   [7:0] buf_0_V_d1;
reg   [10:0] buf_1_V_address0;
reg    buf_1_V_ce0;
wire   [7:0] buf_1_V_q0;
reg   [10:0] buf_1_V_address1;
reg    buf_1_V_ce1;
reg    buf_1_V_we1;
reg   [7:0] buf_1_V_d1;
reg   [10:0] buf_2_V_address0;
reg    buf_2_V_ce0;
wire   [7:0] buf_2_V_q0;
reg   [10:0] buf_2_V_address1;
reg    buf_2_V_ce1;
reg    buf_2_V_we1;
reg   [7:0] buf_2_V_d1;
reg   [10:0] buf_3_V_address0;
reg    buf_3_V_ce0;
wire   [7:0] buf_3_V_q0;
reg   [10:0] buf_3_V_address1;
reg    buf_3_V_ce1;
reg    buf_3_V_we1;
reg   [7:0] buf_3_V_d1;
reg   [10:0] buf_4_V_address0;
reg    buf_4_V_ce0;
wire   [7:0] buf_4_V_q0;
reg   [10:0] buf_4_V_address1;
reg    buf_4_V_ce1;
reg    buf_4_V_we1;
reg   [7:0] buf_4_V_d1;
wire   [2:0] ap_phi_mux_row_ind_V_0_2_phi_fu_527_p4;
reg   [2:0] row_ind_V_0_2_reg_523;
wire   [0:0] icmp_ln882_fu_665_p2;
reg   [63:0] init_buf_reg_534;
reg   [12:0] ap_phi_mux_empty_52_phi_fu_548_p4;
reg   [12:0] row_ind_V_3_1_reg_567;
reg   [12:0] row_ind_V_4_reg_610;
reg   [12:0] row_ind_V_2_reg_577;
reg   [12:0] row_ind_V_1_reg_588;
reg   [12:0] row_ind_V_0_reg_599;
reg   [12:0] empty_54_reg_622;
reg   [12:0] ap_phi_mux_empty_56_phi_fu_638_p4;
wire   [63:0] zext_ln538_1_fu_739_p1;
wire   [63:0] conv_i85_fu_769_p1;
wire    ap_block_pp2_stage0;
wire   [63:0] zext_ln538_3_fu_1028_p1;
wire   [63:0] zext_ln538_2_fu_1037_p1;
wire   [63:0] zext_ln130_fu_1046_p1;
reg   [12:0] row_ind_V_0_0_fu_148;
wire   [12:0] zext_ln304_fu_677_p1;
reg   [12:0] row_ind_V_1_0_fu_152;
reg   [12:0] row_ind_V_2_0_fu_156;
reg   [12:0] row_ind_V_3_0_fu_160;
reg   [12:0] row_ind_V_4_0_fu_164;
reg   [7:0] p_Result_s_fu_188;
wire   [7:0] src_buf_V_0_0_1_fu_1761_p3;
reg   [7:0] src_buf_V_0_0_fu_192;
wire   [7:0] src_buf_V_0_1_1_fu_1754_p3;
reg   [7:0] src_buf_V_0_1_fu_196;
wire   [7:0] src_buf_V_0_4_2_fu_1747_p3;
reg   [7:0] src_buf_V_0_2_fu_200;
wire   [7:0] src_buf_V_0_4_3_fu_1327_p3;
reg   [7:0] src_buf_V_1_0_fu_204;
wire   [7:0] src_buf_V_1_0_2_fu_1740_p3;
reg   [7:0] src_buf_V_1_0_1_fu_208;
wire   [7:0] src_buf_V_1_1_1_fu_1733_p3;
reg   [7:0] src_buf_V_1_1_fu_212;
wire   [7:0] src_buf_V_1_4_2_fu_1726_p3;
reg   [7:0] src_buf_V_1_2_fu_216;
wire   [7:0] src_buf_V_1_4_3_fu_1320_p3;
reg   [7:0] src_buf_V_2_0_fu_220;
wire   [7:0] src_buf_V_2_0_2_fu_1719_p3;
reg   [7:0] src_buf_V_2_0_1_fu_224;
wire   [7:0] src_buf_V_2_1_1_fu_1712_p3;
reg   [7:0] src_buf_V_2_1_fu_228;
wire   [7:0] src_buf_V_2_4_2_fu_1705_p3;
reg   [7:0] src_buf_V_2_2_fu_232;
wire   [7:0] src_buf_V_2_4_3_fu_1313_p3;
reg   [7:0] src_buf_V_3_0_fu_236;
wire   [7:0] src_buf_V_3_0_2_fu_1698_p3;
reg   [7:0] src_buf_V_3_0_1_fu_240;
wire   [7:0] src_buf_V_3_1_1_fu_1691_p3;
reg   [7:0] src_buf_V_3_1_fu_244;
wire   [7:0] src_buf_V_3_4_2_fu_1684_p3;
reg   [7:0] src_buf_V_3_2_fu_248;
wire   [7:0] src_buf_V_3_4_3_fu_1306_p3;
reg   [7:0] p_Result_1_fu_252;
wire   [7:0] src_buf_V_4_0_1_fu_1768_p3;
reg   [7:0] src_buf_V_4_0_fu_256;
wire   [7:0] src_buf_V_4_0_2_fu_1775_p3;
reg   [7:0] src_buf_V_4_1_fu_260;
wire   [7:0] src_buf_V_4_0_3_fu_1782_p3;
reg   [7:0] src_buf_V_4_2_fu_264;
wire   [7:0] src_buf_V_4_4_fu_1334_p3;
reg    ap_block_pp3_stage0_01001;
wire   [7:0] tmp_2_fu_794_p7;
wire   [7:0] tmp_1_fu_778_p7;
wire   [15:0] zext_ln882_fu_724_p1;
wire   [15:0] zext_ln882_1_fu_754_p1;
wire   [16:0] conv_i_i_i47_fu_810_p1;
wire   [16:0] zext_ln882_3_fu_834_p1;
wire   [15:0] zext_ln882_2_fu_830_p1;
wire  signed [16:0] sub_i_i198_i_fu_853_p2;
wire  signed [17:0] sub_i_i198_i_cast_fu_858_p1;
wire   [17:0] sub_i181_i_fu_862_p2;
wire   [0:0] cmp_i_i224_i_fu_848_p2;
wire   [0:0] tmp_fu_872_p3;
wire   [0:0] cmp_i_i169_i_1_fu_886_p2;
wire   [16:0] tmp_13_fu_898_p4;
wire   [0:0] icmp_fu_908_p2;
wire   [0:0] cmp_i_i169_i_3_fu_920_p2;
wire   [0:0] cmp_i_i169_i_4_fu_932_p2;
wire   [13:0] zext_ln882_5_fu_968_p1;
wire   [15:0] zext_ln882_4_fu_964_p1;
wire   [12:0] tmp_3_fu_993_p7;
wire   [11:0] tmp_14_fu_1012_p4;
wire   [7:0] tmp_4_fu_1121_p7;
wire   [7:0] tmp_5_fu_1136_p7;
wire   [7:0] tmp_6_fu_1158_p7;
wire   [7:0] tmp_7_fu_1173_p7;
wire   [7:0] tmp_8_fu_1195_p7;
wire   [7:0] tmp_9_fu_1210_p7;
wire   [7:0] tmp_s_fu_1232_p7;
wire   [7:0] tmp_10_fu_1247_p7;
wire   [7:0] tmp_11_fu_1269_p7;
wire   [7:0] tmp_12_fu_1284_p7;
wire   [7:0] src_buf_V_3_4_fu_1262_p3;
wire   [7:0] src_buf_V_2_4_fu_1225_p3;
wire   [7:0] src_buf_V_1_4_fu_1188_p3;
wire   [7:0] src_buf_V_0_4_fu_1151_p3;
wire   [7:0] empty_57_fu_1299_p3;
wire   [8:0] zext_ln1501_fu_1357_p1;
wire   [8:0] zext_ln1501_1_fu_1361_p1;
wire   [8:0] add_ln1501_fu_1369_p2;
wire   [8:0] zext_ln695_1_fu_1379_p1;
wire   [8:0] zext_ln1501_2_fu_1365_p1;
wire   [8:0] add_ln695_6_fu_1383_p2;
wire   [9:0] zext_ln1501_3_fu_1375_p1;
wire   [9:0] zext_ln695_3_fu_1389_p1;
wire   [9:0] add_ln695_3_fu_1393_p2;
wire   [10:0] shl_ln_fu_1403_p3;
wire   [8:0] zext_ln1501_6_fu_1419_p1;
wire   [8:0] zext_ln1501_5_fu_1415_p1;
wire   [8:0] add_ln1501_1_fu_1423_p2;
wire   [8:0] zext_ln695_5_fu_1437_p1;
wire   [8:0] zext_ln1501_8_fu_1433_p1;
wire   [8:0] add_ln695_8_fu_1441_p2;
wire   [9:0] zext_ln1501_7_fu_1429_p1;
wire   [9:0] zext_ln695_7_fu_1447_p1;
wire   [8:0] src_buf_V_0_3_load_cast_fu_1457_p1;
wire   [8:0] zext_ln695_2_fu_1461_p1;
wire   [8:0] add_ln695_5_fu_1469_p2;
wire   [8:0] zext_ln695_9_fu_1479_p1;
wire   [8:0] zext_ln695_8_fu_1465_p1;
wire   [8:0] add_ln695_9_fu_1487_p2;
wire   [9:0] zext_ln695_4_fu_1475_p1;
wire   [9:0] zext_ln695_10_fu_1493_p1;
wire   [9:0] add_ln695_7_fu_1497_p2;
wire   [10:0] zext_ln695_6_fu_1483_p1;
wire   [10:0] add_ln695_7_cast_fu_1503_p1;
wire   [8:0] zext_ln695_16_fu_1515_p1;
wire   [8:0] zext_ln695_15_fu_1511_p1;
wire   [8:0] add_ln695_18_fu_1525_p2;
wire   [9:0] zext_ln695_11_fu_1507_p1;
wire   [9:0] zext_ln695_23_fu_1531_p1;
wire   [9:0] add_ln695_19_fu_1535_p2;
wire   [10:0] add_ln695_13_fu_1519_p2;
wire   [10:0] zext_ln695_24_fu_1541_p1;
wire   [10:0] src_buf_V_2_2_1_cast_fu_1551_p1;
wire   [10:0] zext_ln695_fu_1399_p1;
wire   [8:0] zext_ln695_13_fu_1565_p1;
wire   [8:0] zext_ln695_12_fu_1561_p1;
wire   [8:0] add_ln695_11_fu_1569_p2;
wire   [8:0] src_buf_V_3_3_1_cast_fu_1583_p1;
wire   [8:0] zext_ln695_26_fu_1579_p1;
wire   [8:0] tmp30_fu_1587_p2;
wire   [9:0] zext_ln695_14_fu_1575_p1;
wire   [9:0] tmp30_cast_fu_1593_p1;
wire   [8:0] zext_ln357_fu_1341_p1;
wire   [8:0] zext_ln357_1_fu_1345_p1;
wire   [8:0] add_ln695_12_fu_1603_p2;
wire   [8:0] zext_ln674_1_fu_1353_p1;
wire   [8:0] zext_ln674_fu_1349_p1;
wire   [8:0] add_ln695_21_fu_1613_p2;
wire   [9:0] zext_ln695_18_fu_1609_p1;
wire   [9:0] zext_ln695_27_fu_1619_p1;
wire   [9:0] add_ln695_14_fu_1623_p2;
wire   [11:0] zext_ln695_19_fu_1629_p1;
wire   [11:0] zext_ln1501_4_fu_1411_p1;
wire   [12:0] shl_ln695_1_fu_1889_p3;
wire   [12:0] shl_ln1_fu_1900_p3;
wire   [11:0] add_ln695_11_cast_fu_1911_p1;
wire   [11:0] tmp29_cast_fu_1914_p1;
wire   [11:0] tmp24_fu_1917_p2;
wire   [13:0] tmp3_fu_1923_p3;
wire   [10:0] p_cast16_fu_1935_p1;
wire   [10:0] p_cast17_fu_1938_p1;
wire   [10:0] tmp42_fu_1941_p2;
wire   [14:0] tmp5_fu_1947_p3;
wire   [13:0] zext_ln695_20_fu_1959_p1;
wire   [13:0] zext_ln674_2_fu_1896_p1;
wire   [13:0] add_ln695_16_fu_1962_p2;
wire   [14:0] shl_ln785_cast_fu_1907_p1;
wire   [14:0] zext_ln695_21_fu_1968_p1;
wire   [14:0] add_ln695_17_fu_1972_p2;
wire   [15:0] zext_ln695_17_fu_1955_p1;
wire   [15:0] zext_ln695_22_fu_1978_p1;
wire   [14:0] zext_ln695_25_fu_1931_p1;
wire   [14:0] add_ln1350_2_fu_1988_p2;
wire   [15:0] add_ln1350_1_fu_1982_p2;
wire   [15:0] zext_ln1350_fu_1994_p1;
wire   [15:0] add_ln1350_fu_1998_p2;
reg   [10:0] ap_NS_fsm;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;

// power-on initialization
initial begin
#0 ap_CS_fsm = 11'd1;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter3 = 1'b0;
end

pyr_down_accel_xf_pyrdown_gaussian_nxn_1080_1920_0_1_1_1922_5_25_1_s_buf_0_V #(
    .DataWidth( 8 ),
    .AddressRange( 1922 ),
    .AddressWidth( 11 ))
buf_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_0_V_address0),
    .ce0(buf_0_V_ce0),
    .q0(buf_0_V_q0),
    .address1(buf_0_V_address1),
    .ce1(buf_0_V_ce1),
    .we1(buf_0_V_we1),
    .d1(buf_0_V_d1)
);

pyr_down_accel_xf_pyrdown_gaussian_nxn_1080_1920_0_1_1_1922_5_25_1_s_buf_0_V #(
    .DataWidth( 8 ),
    .AddressRange( 1922 ),
    .AddressWidth( 11 ))
buf_1_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_1_V_address0),
    .ce0(buf_1_V_ce0),
    .q0(buf_1_V_q0),
    .address1(buf_1_V_address1),
    .ce1(buf_1_V_ce1),
    .we1(buf_1_V_we1),
    .d1(buf_1_V_d1)
);

pyr_down_accel_xf_pyrdown_gaussian_nxn_1080_1920_0_1_1_1922_5_25_1_s_buf_0_V #(
    .DataWidth( 8 ),
    .AddressRange( 1922 ),
    .AddressWidth( 11 ))
buf_2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_2_V_address0),
    .ce0(buf_2_V_ce0),
    .q0(buf_2_V_q0),
    .address1(buf_2_V_address1),
    .ce1(buf_2_V_ce1),
    .we1(buf_2_V_we1),
    .d1(buf_2_V_d1)
);

pyr_down_accel_xf_pyrdown_gaussian_nxn_1080_1920_0_1_1_1922_5_25_1_s_buf_0_V #(
    .DataWidth( 8 ),
    .AddressRange( 1922 ),
    .AddressWidth( 11 ))
buf_3_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_3_V_address0),
    .ce0(buf_3_V_ce0),
    .q0(buf_3_V_q0),
    .address1(buf_3_V_address1),
    .ce1(buf_3_V_ce1),
    .we1(buf_3_V_we1),
    .d1(buf_3_V_d1)
);

pyr_down_accel_xf_pyrdown_gaussian_nxn_1080_1920_0_1_1_1922_5_25_1_s_buf_0_V #(
    .DataWidth( 8 ),
    .AddressRange( 1922 ),
    .AddressWidth( 11 ))
buf_4_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_4_V_address0),
    .ce0(buf_4_V_ce0),
    .q0(buf_4_V_q0),
    .address1(buf_4_V_address1),
    .ce1(buf_4_V_ce1),
    .we1(buf_4_V_we1),
    .d1(buf_4_V_d1)
);

pyr_down_accel_mux_53_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
mux_53_8_1_1_U88(
    .din0(buf_0_V_q0),
    .din1(buf_1_V_q0),
    .din2(buf_2_V_q0),
    .din3(buf_3_V_q0),
    .din4(buf_4_V_q0),
    .din5(trunc_ln324_1_reg_2123),
    .dout(tmp_1_fu_778_p7)
);

pyr_down_accel_mux_53_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
mux_53_8_1_1_U89(
    .din0(tmp_1_fu_778_p7),
    .din1(buf_1_V_q0),
    .din2(buf_2_V_q0),
    .din3(buf_3_V_q0),
    .din4(buf_4_V_q0),
    .din5(trunc_ln324_1_reg_2123),
    .dout(tmp_2_fu_794_p7)
);

pyr_down_accel_mux_53_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 13 ),
    .din3_WIDTH( 13 ),
    .din4_WIDTH( 13 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 13 ))
mux_53_13_1_1_U90(
    .din0(row_ind_V_4_reg_610),
    .din1(row_ind_V_0_reg_599),
    .din2(row_ind_V_1_reg_588),
    .din3(row_ind_V_2_reg_577),
    .din4(row_ind_V_3_1_reg_567),
    .din5(empty_55_reg_2339),
    .dout(tmp_3_fu_993_p7)
);

pyr_down_accel_mux_53_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
mux_53_8_1_1_U91(
    .din0(buf_0_V_q0),
    .din1(buf_1_V_q0),
    .din2(buf_2_V_q0),
    .din3(buf_3_V_q0),
    .din4(buf_4_V_q0),
    .din5(trunc_ln324_7_reg_2416_pp3_iter2_reg),
    .dout(tmp_4_fu_1121_p7)
);

pyr_down_accel_mux_53_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
mux_53_8_1_1_U92(
    .din0(buf_0_V_q0),
    .din1(buf_1_V_q0),
    .din2(buf_2_V_q0),
    .din3(buf_3_V_q0),
    .din4(buf_4_V_q0),
    .din5(trunc_ln324_6_reg_2389),
    .dout(tmp_5_fu_1136_p7)
);

pyr_down_accel_mux_53_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
mux_53_8_1_1_U93(
    .din0(buf_0_V_q0),
    .din1(buf_1_V_q0),
    .din2(buf_2_V_q0),
    .din3(buf_3_V_q0),
    .din4(buf_4_V_q0),
    .din5(trunc_ln324_7_reg_2416_pp3_iter2_reg),
    .dout(tmp_6_fu_1158_p7)
);

pyr_down_accel_mux_53_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
mux_53_8_1_1_U94(
    .din0(buf_0_V_q0),
    .din1(buf_1_V_q0),
    .din2(buf_2_V_q0),
    .din3(buf_3_V_q0),
    .din4(buf_4_V_q0),
    .din5(trunc_ln324_5_reg_2384),
    .dout(tmp_7_fu_1173_p7)
);

pyr_down_accel_mux_53_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
mux_53_8_1_1_U95(
    .din0(buf_0_V_q0),
    .din1(buf_1_V_q0),
    .din2(buf_2_V_q0),
    .din3(buf_3_V_q0),
    .din4(buf_4_V_q0),
    .din5(trunc_ln324_7_reg_2416_pp3_iter2_reg),
    .dout(tmp_8_fu_1195_p7)
);

pyr_down_accel_mux_53_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
mux_53_8_1_1_U96(
    .din0(buf_0_V_q0),
    .din1(buf_1_V_q0),
    .din2(buf_2_V_q0),
    .din3(buf_3_V_q0),
    .din4(buf_4_V_q0),
    .din5(trunc_ln324_4_reg_2379),
    .dout(tmp_9_fu_1210_p7)
);

pyr_down_accel_mux_53_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
mux_53_8_1_1_U97(
    .din0(buf_0_V_q0),
    .din1(buf_1_V_q0),
    .din2(buf_2_V_q0),
    .din3(buf_3_V_q0),
    .din4(buf_4_V_q0),
    .din5(trunc_ln324_7_reg_2416_pp3_iter2_reg),
    .dout(tmp_s_fu_1232_p7)
);

pyr_down_accel_mux_53_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
mux_53_8_1_1_U98(
    .din0(buf_0_V_q0),
    .din1(buf_1_V_q0),
    .din2(buf_2_V_q0),
    .din3(buf_3_V_q0),
    .din4(buf_4_V_q0),
    .din5(trunc_ln324_3_reg_2374),
    .dout(tmp_10_fu_1247_p7)
);

pyr_down_accel_mux_53_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
mux_53_8_1_1_U99(
    .din0(buf_0_V_q0),
    .din1(buf_1_V_q0),
    .din2(buf_2_V_q0),
    .din3(buf_3_V_q0),
    .din4(buf_4_V_q0),
    .din5(trunc_ln324_7_reg_2416_pp3_iter2_reg),
    .dout(tmp_11_fu_1269_p7)
);

pyr_down_accel_mux_53_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
mux_53_8_1_1_U100(
    .din0(buf_0_V_q0),
    .din1(buf_1_V_q0),
    .din2(buf_2_V_q0),
    .din3(buf_3_V_q0),
    .din4(buf_4_V_q0),
    .din5(trunc_ln324_2_reg_2369),
    .dout(tmp_12_fu_1284_p7)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_condition_pp1_exit_iter0_state5))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln882_1_fu_712_p2 == 1'd1))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state5))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state5);
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln882_1_fu_712_p2 == 1'd1))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state8) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln882_1_fu_712_p2 == 1'd0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state8))) begin
            ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state8);
        end else if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln882_1_fu_712_p2 == 1'd0))) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_condition_pp3_exit_iter0_state12))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if (((icmp_ln882_4_fu_838_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter0_state12)) begin
                ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state12);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter4 <= ap_enable_reg_pp3_iter3;
        end else if (((icmp_ln882_4_fu_838_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
            ap_enable_reg_pp3_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln882_2_reg_2129 == 1'd1))) begin
        empty_52_reg_544 <= add_ln695_reg_2133;
    end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln882_1_fu_712_p2 == 1'd1))) begin
        empty_52_reg_544 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln882_1_fu_712_p2 == 1'd0))) begin
        empty_53_reg_556 <= 13'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln882_3_fu_758_p2 == 1'd1))) begin
        empty_53_reg_556 <= add_ln695_1_fu_763_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        empty_54_reg_622 <= add_ln695_2_fu_2015_p2;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        empty_54_reg_622 <= 13'd2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln882_5_reg_2394 == 1'd1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        empty_56_reg_634 <= add_ln695_20_reg_2398;
    end else if (((icmp_ln882_4_fu_838_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
        empty_56_reg_634 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        init_buf_reg_534 <= zext_ln538_fu_706_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        init_buf_reg_534 <= add_ln217_fu_748_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln882_fu_665_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        row_ind_V_0_2_reg_523 <= init_row_ind_fu_671_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        row_ind_V_0_2_reg_523 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        row_ind_V_0_reg_599 <= row_ind_V_1_reg_588;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        row_ind_V_0_reg_599 <= row_ind_V_1_0_load_reg_2074;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        row_ind_V_1_reg_588 <= row_ind_V_2_reg_577;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        row_ind_V_1_reg_588 <= row_ind_V_2_0_load_reg_2079;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        row_ind_V_2_reg_577 <= row_ind_V_3_1_reg_567;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        row_ind_V_2_reg_577 <= row_ind_V_3_0_load_reg_2086;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        row_ind_V_3_1_reg_567 <= row_ind_V_4_reg_610;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        row_ind_V_3_1_reg_567 <= row_ind_V_4_0_load_reg_2091;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        row_ind_V_4_reg_610 <= row_ind_V_0_reg_599;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        row_ind_V_4_reg_610 <= row_ind_V_0_0_load_reg_2069;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        add_i_i50_reg_2314 <= add_i_i50_fu_813_p2;
        op2_assign_reg_2319 <= op2_assign_fu_819_p2;
        sub_i_reg_2324 <= sub_i_fu_824_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp3_stage0_11001)) begin
        add_ln695_10_reg_2484 <= add_ln695_10_fu_1545_p2;
        add_ln695_15_reg_2499 <= add_ln695_15_fu_1633_p2;
        add_ln695_4_reg_2478 <= add_ln695_4_fu_1451_p2;
        empty_58_reg_2494 <= empty_58_fu_1597_p2;
        icmp_ln882_5_reg_2394_pp3_iter2_reg <= icmp_ln882_5_reg_2394_pp3_iter1_reg;
        icmp_ln882_6_reg_2403_pp3_iter2_reg <= icmp_ln882_6_reg_2403_pp3_iter1_reg;
        icmp_ln886_reg_2425_pp3_iter2_reg <= icmp_ln886_reg_2425_pp3_iter1_reg;
        icmp_ln886_reg_2425_pp3_iter3_reg <= icmp_ln886_reg_2425_pp3_iter2_reg;
        src_buf_V_2_1_load_reg_2473 <= src_buf_V_2_1_fu_228;
        tmp29_reg_2489 <= tmp29_fu_1555_p2;
        trunc_ln324_7_reg_2416_pp3_iter2_reg <= trunc_ln324_7_reg_2416_pp3_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        add_ln695_20_reg_2398 <= add_ln695_20_fu_977_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        add_ln695_reg_2133 <= add_ln695_fu_733_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln882_5_fu_972_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        and_ln120_reg_2412 <= and_ln120_fu_988_p2;
        icmp_ln882_6_reg_2403 <= icmp_ln882_6_fu_983_p2;
        icmp_ln886_reg_2425 <= icmp_ln886_fu_1022_p2;
        trunc_ln324_7_reg_2416 <= trunc_ln324_7_fu_1008_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln882_3_fu_758_p2 == 1'd1))) begin
        buf_0_V_addr_1_reg_2152 <= conv_i85_fu_769_p1;
        buf_1_V_addr_1_reg_2158 <= conv_i85_fu_769_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln882_4_fu_838_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
        cmp_i_i289_i_reg_2334 <= cmp_i_i289_i_fu_843_p2;
        empty_55_reg_2339 <= empty_55_fu_868_p1;
        spec_select2101_reg_2344 <= spec_select2101_fu_880_p2;
        spec_select2117_reg_2349 <= spec_select2117_fu_892_p2;
        spec_select2133_reg_2354 <= spec_select2133_fu_914_p2;
        spec_select2149_reg_2359 <= spec_select2149_fu_926_p2;
        spec_select2165_reg_2364 <= spec_select2165_fu_938_p2;
        trunc_ln324_2_reg_2369 <= trunc_ln324_2_fu_944_p1;
        trunc_ln324_3_reg_2374 <= trunc_ln324_3_fu_948_p1;
        trunc_ln324_4_reg_2379 <= trunc_ln324_4_fu_952_p1;
        trunc_ln324_5_reg_2384 <= trunc_ln324_5_fu_956_p1;
        trunc_ln324_6_reg_2389 <= trunc_ln324_6_fu_960_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln882_5_reg_2394_pp3_iter1_reg == 1'd1))) begin
        cmp_i_i_i_reg_2454 <= cmp_i_i_i_fu_1055_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        empty_56_reg_634_pp3_iter1_reg <= empty_56_reg_634;
        icmp_ln882_5_reg_2394 <= icmp_ln882_5_fu_972_p2;
        icmp_ln882_5_reg_2394_pp3_iter1_reg <= icmp_ln882_5_reg_2394;
        icmp_ln882_6_reg_2403_pp3_iter1_reg <= icmp_ln882_6_reg_2403;
        icmp_ln886_reg_2425_pp3_iter1_reg <= icmp_ln886_reg_2425;
        trunc_ln324_7_reg_2416_pp3_iter1_reg <= trunc_ln324_7_reg_2416;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        empty_reg_2064 <= empty_fu_646_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln882_2_reg_2129 <= icmp_ln882_2_fu_728_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln882_3_reg_2143 <= icmp_ln882_3_fu_758_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter3 == 1'b1) & (icmp_ln882_5_reg_2394_pp3_iter2_reg == 1'd1))) begin
        p_Result_1_fu_252 <= src_buf_V_4_0_1_fu_1768_p3;
        p_Result_s_fu_188 <= src_buf_V_0_0_1_fu_1761_p3;
        src_buf_V_0_0_fu_192 <= src_buf_V_0_1_1_fu_1754_p3;
        src_buf_V_0_1_fu_196 <= src_buf_V_0_4_2_fu_1747_p3;
        src_buf_V_0_2_fu_200 <= src_buf_V_0_4_3_fu_1327_p3;
        src_buf_V_1_0_1_fu_208 <= src_buf_V_1_1_1_fu_1733_p3;
        src_buf_V_1_0_fu_204 <= src_buf_V_1_0_2_fu_1740_p3;
        src_buf_V_1_1_fu_212 <= src_buf_V_1_4_2_fu_1726_p3;
        src_buf_V_1_2_fu_216 <= src_buf_V_1_4_3_fu_1320_p3;
        src_buf_V_2_0_1_fu_224 <= src_buf_V_2_1_1_fu_1712_p3;
        src_buf_V_2_0_fu_220 <= src_buf_V_2_0_2_fu_1719_p3;
        src_buf_V_2_1_fu_228 <= src_buf_V_2_4_2_fu_1705_p3;
        src_buf_V_2_2_fu_232 <= src_buf_V_2_4_3_fu_1313_p3;
        src_buf_V_3_0_1_fu_240 <= src_buf_V_3_1_1_fu_1691_p3;
        src_buf_V_3_0_fu_236 <= src_buf_V_3_0_2_fu_1698_p3;
        src_buf_V_3_1_fu_244 <= src_buf_V_3_4_2_fu_1684_p3;
        src_buf_V_3_2_fu_248 <= src_buf_V_3_4_3_fu_1306_p3;
        src_buf_V_4_0_fu_256 <= src_buf_V_4_0_2_fu_1775_p3;
        src_buf_V_4_1_fu_260 <= src_buf_V_4_0_3_fu_1782_p3;
        src_buf_V_4_2_fu_264 <= src_buf_V_4_4_fu_1334_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln882_fu_665_p2 == 1'd0) & (ap_phi_mux_row_ind_V_0_2_phi_fu_527_p4 == 3'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        row_ind_V_0_0_fu_148[2 : 0] <= zext_ln304_fu_677_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        row_ind_V_0_0_load_reg_2069[2 : 0] <= row_ind_V_0_0_fu_148[2 : 0];
        row_ind_V_1_0_load_reg_2074[2 : 0] <= row_ind_V_1_0_fu_152[2 : 0];
        row_ind_V_2_0_load_reg_2079[2 : 0] <= row_ind_V_2_0_fu_156[2 : 0];
        row_ind_V_3_0_load_reg_2086[2 : 0] <= row_ind_V_3_0_fu_160[2 : 0];
        row_ind_V_4_0_load_reg_2091[2 : 0] <= row_ind_V_4_0_fu_164[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln882_fu_665_p2 == 1'd0) & (ap_phi_mux_row_ind_V_0_2_phi_fu_527_p4 == 3'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        row_ind_V_1_0_fu_152[2 : 0] <= zext_ln304_fu_677_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln882_fu_665_p2 == 1'd0) & (ap_phi_mux_row_ind_V_0_2_phi_fu_527_p4 == 3'd2) & (1'b1 == ap_CS_fsm_state2))) begin
        row_ind_V_2_0_fu_156[2 : 0] <= zext_ln304_fu_677_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln882_fu_665_p2 == 1'd0) & (ap_phi_mux_row_ind_V_0_2_phi_fu_527_p4 == 3'd3) & (1'b1 == ap_CS_fsm_state2))) begin
        row_ind_V_3_0_fu_160[2 : 0] <= zext_ln304_fu_677_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((~(ap_phi_mux_row_ind_V_0_2_phi_fu_527_p4 == 3'd3) & ~(ap_phi_mux_row_ind_V_0_2_phi_fu_527_p4 == 3'd2) & ~(ap_phi_mux_row_ind_V_0_2_phi_fu_527_p4 == 3'd1) & ~(ap_phi_mux_row_ind_V_0_2_phi_fu_527_p4 == 3'd0) & (icmp_ln882_fu_665_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        row_ind_V_4_0_fu_164[2 : 0] <= zext_ln304_fu_677_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln882_1_fu_712_p2 == 1'd0))) begin
        trunc_ln324_1_reg_2123 <= trunc_ln324_1_fu_721_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln882_1_fu_712_p2 == 1'd1))) begin
        trunc_ln324_reg_2119 <= trunc_ln324_fu_717_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        wide_trip_count_reg_2110[2 : 0] <= wide_trip_count_fu_709_p1[2 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln882_2_fu_728_p2 == 1'd0)) begin
        ap_condition_pp1_exit_iter0_state5 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state5 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln882_3_fu_758_p2 == 1'd0)) begin
        ap_condition_pp2_exit_iter0_state8 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state8 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln882_5_fu_972_p2 == 1'd0)) begin
        ap_condition_pp3_exit_iter0_state12 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state12 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)) | ((icmp_ln882_4_fu_838_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter4 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter3 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln882_2_reg_2129 == 1'd1))) begin
        ap_phi_mux_empty_52_phi_fu_548_p4 = add_ln695_reg_2133;
    end else begin
        ap_phi_mux_empty_52_phi_fu_548_p4 = empty_52_reg_544;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (icmp_ln882_5_reg_2394 == 1'd1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        ap_phi_mux_empty_56_phi_fu_638_p4 = add_ln695_20_reg_2398;
    end else begin
        ap_phi_mux_empty_56_phi_fu_638_p4 = empty_56_reg_634;
    end
end

always @ (*) begin
    if (((icmp_ln882_4_fu_838_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        buf_0_V_address0 = zext_ln130_fu_1046_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        buf_0_V_address0 = conv_i85_fu_769_p1;
    end else begin
        buf_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln120_reg_2412) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (trunc_ln324_2_reg_2369 == 3'd0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        buf_0_V_address1 = zext_ln538_2_fu_1037_p1;
    end else if (((1'd0 == and_ln120_reg_2412) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (trunc_ln324_2_reg_2369 == 3'd0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        buf_0_V_address1 = zext_ln538_3_fu_1028_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        buf_0_V_address1 = buf_0_V_addr_1_reg_2152;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        buf_0_V_address1 = zext_ln538_1_fu_739_p1;
    end else begin
        buf_0_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1)))) begin
        buf_0_V_ce0 = 1'b1;
    end else begin
        buf_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln120_reg_2412) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (trunc_ln324_2_reg_2369 == 3'd0) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'd0 == and_ln120_reg_2412) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (trunc_ln324_2_reg_2369 == 3'd0) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        buf_0_V_ce1 = 1'b1;
    end else begin
        buf_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd0 == and_ln120_reg_2412) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (trunc_ln324_2_reg_2369 == 3'd0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        buf_0_V_d1 = 8'd0;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        buf_0_V_d1 = tmp_1_fu_778_p7;
    end else if ((((1'd1 == and_ln120_reg_2412) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (trunc_ln324_2_reg_2369 == 3'd0) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        buf_0_V_d1 = p_filter_in1_dout;
    end else begin
        buf_0_V_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln120_reg_2412) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (trunc_ln324_2_reg_2369 == 3'd0) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'd0 == and_ln120_reg_2412) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (trunc_ln324_2_reg_2369 == 3'd0) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln882_3_reg_2143 == 1'd1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (trunc_ln324_reg_2119 == 3'd0)))) begin
        buf_0_V_we1 = 1'b1;
    end else begin
        buf_0_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        buf_1_V_address0 = zext_ln130_fu_1046_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        buf_1_V_address0 = conv_i85_fu_769_p1;
    end else begin
        buf_1_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln120_reg_2412) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (trunc_ln324_2_reg_2369 == 3'd1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        buf_1_V_address1 = zext_ln538_2_fu_1037_p1;
    end else if (((1'd0 == and_ln120_reg_2412) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (trunc_ln324_2_reg_2369 == 3'd1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        buf_1_V_address1 = zext_ln538_3_fu_1028_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        buf_1_V_address1 = buf_1_V_addr_1_reg_2158;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        buf_1_V_address1 = zext_ln538_1_fu_739_p1;
    end else begin
        buf_1_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1)))) begin
        buf_1_V_ce0 = 1'b1;
    end else begin
        buf_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln120_reg_2412) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (trunc_ln324_2_reg_2369 == 3'd1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'd0 == and_ln120_reg_2412) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (trunc_ln324_2_reg_2369 == 3'd1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        buf_1_V_ce1 = 1'b1;
    end else begin
        buf_1_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd0 == and_ln120_reg_2412) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (trunc_ln324_2_reg_2369 == 3'd1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        buf_1_V_d1 = 8'd0;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        buf_1_V_d1 = tmp_2_fu_794_p7;
    end else if ((((1'd1 == and_ln120_reg_2412) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (trunc_ln324_2_reg_2369 == 3'd1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        buf_1_V_d1 = p_filter_in1_dout;
    end else begin
        buf_1_V_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln120_reg_2412) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (trunc_ln324_2_reg_2369 == 3'd1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'd0 == and_ln120_reg_2412) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (trunc_ln324_2_reg_2369 == 3'd1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln882_3_reg_2143 == 1'd1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (trunc_ln324_reg_2119 == 3'd1)))) begin
        buf_1_V_we1 = 1'b1;
    end else begin
        buf_1_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        buf_2_V_address0 = zext_ln130_fu_1046_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        buf_2_V_address0 = conv_i85_fu_769_p1;
    end else begin
        buf_2_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln120_reg_2412) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (trunc_ln324_2_reg_2369 == 3'd2) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        buf_2_V_address1 = zext_ln538_2_fu_1037_p1;
    end else if (((1'd0 == and_ln120_reg_2412) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (trunc_ln324_2_reg_2369 == 3'd2) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        buf_2_V_address1 = zext_ln538_3_fu_1028_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        buf_2_V_address1 = zext_ln538_1_fu_739_p1;
    end else begin
        buf_2_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1)))) begin
        buf_2_V_ce0 = 1'b1;
    end else begin
        buf_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln120_reg_2412) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (trunc_ln324_2_reg_2369 == 3'd2) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'd0 == and_ln120_reg_2412) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (trunc_ln324_2_reg_2369 == 3'd2) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        buf_2_V_ce1 = 1'b1;
    end else begin
        buf_2_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd0 == and_ln120_reg_2412) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (trunc_ln324_2_reg_2369 == 3'd2) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        buf_2_V_d1 = 8'd0;
    end else if ((((1'd1 == and_ln120_reg_2412) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (trunc_ln324_2_reg_2369 == 3'd2) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        buf_2_V_d1 = p_filter_in1_dout;
    end else begin
        buf_2_V_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln120_reg_2412) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (trunc_ln324_2_reg_2369 == 3'd2) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'd0 == and_ln120_reg_2412) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (trunc_ln324_2_reg_2369 == 3'd2) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (trunc_ln324_reg_2119 == 3'd2)))) begin
        buf_2_V_we1 = 1'b1;
    end else begin
        buf_2_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        buf_3_V_address0 = zext_ln130_fu_1046_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        buf_3_V_address0 = conv_i85_fu_769_p1;
    end else begin
        buf_3_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln120_reg_2412) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (trunc_ln324_2_reg_2369 == 3'd3) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        buf_3_V_address1 = zext_ln538_2_fu_1037_p1;
    end else if (((1'd0 == and_ln120_reg_2412) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (trunc_ln324_2_reg_2369 == 3'd3) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        buf_3_V_address1 = zext_ln538_3_fu_1028_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        buf_3_V_address1 = zext_ln538_1_fu_739_p1;
    end else begin
        buf_3_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1)))) begin
        buf_3_V_ce0 = 1'b1;
    end else begin
        buf_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln120_reg_2412) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (trunc_ln324_2_reg_2369 == 3'd3) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'd0 == and_ln120_reg_2412) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (trunc_ln324_2_reg_2369 == 3'd3) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        buf_3_V_ce1 = 1'b1;
    end else begin
        buf_3_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd0 == and_ln120_reg_2412) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (trunc_ln324_2_reg_2369 == 3'd3) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        buf_3_V_d1 = 8'd0;
    end else if ((((1'd1 == and_ln120_reg_2412) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (trunc_ln324_2_reg_2369 == 3'd3) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        buf_3_V_d1 = p_filter_in1_dout;
    end else begin
        buf_3_V_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln120_reg_2412) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (trunc_ln324_2_reg_2369 == 3'd3) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'd0 == and_ln120_reg_2412) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (trunc_ln324_2_reg_2369 == 3'd3) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (trunc_ln324_reg_2119 == 3'd3)))) begin
        buf_3_V_we1 = 1'b1;
    end else begin
        buf_3_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        buf_4_V_address0 = zext_ln130_fu_1046_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        buf_4_V_address0 = conv_i85_fu_769_p1;
    end else begin
        buf_4_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((~(trunc_ln324_2_reg_2369 == 3'd0) & ~(trunc_ln324_2_reg_2369 == 3'd1) & ~(trunc_ln324_2_reg_2369 == 3'd2) & ~(trunc_ln324_2_reg_2369 == 3'd3) & (1'd1 == and_ln120_reg_2412) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        buf_4_V_address1 = zext_ln538_2_fu_1037_p1;
    end else if ((~(trunc_ln324_2_reg_2369 == 3'd0) & ~(trunc_ln324_2_reg_2369 == 3'd1) & ~(trunc_ln324_2_reg_2369 == 3'd2) & ~(trunc_ln324_2_reg_2369 == 3'd3) & (1'd0 == and_ln120_reg_2412) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        buf_4_V_address1 = zext_ln538_3_fu_1028_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        buf_4_V_address1 = zext_ln538_1_fu_739_p1;
    end else begin
        buf_4_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1)))) begin
        buf_4_V_ce0 = 1'b1;
    end else begin
        buf_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((~(trunc_ln324_2_reg_2369 == 3'd0) & ~(trunc_ln324_2_reg_2369 == 3'd1) & ~(trunc_ln324_2_reg_2369 == 3'd2) & ~(trunc_ln324_2_reg_2369 == 3'd3) & (1'd1 == and_ln120_reg_2412) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0)) | (~(trunc_ln324_2_reg_2369 == 3'd0) & ~(trunc_ln324_2_reg_2369 == 3'd1) & ~(trunc_ln324_2_reg_2369 == 3'd2) & ~(trunc_ln324_2_reg_2369 == 3'd3) & (1'd0 == and_ln120_reg_2412) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        buf_4_V_ce1 = 1'b1;
    end else begin
        buf_4_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~(trunc_ln324_2_reg_2369 == 3'd0) & ~(trunc_ln324_2_reg_2369 == 3'd1) & ~(trunc_ln324_2_reg_2369 == 3'd2) & ~(trunc_ln324_2_reg_2369 == 3'd3) & (1'd0 == and_ln120_reg_2412) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        buf_4_V_d1 = 8'd0;
    end else if (((~(trunc_ln324_2_reg_2369 == 3'd0) & ~(trunc_ln324_2_reg_2369 == 3'd1) & ~(trunc_ln324_2_reg_2369 == 3'd2) & ~(trunc_ln324_2_reg_2369 == 3'd3) & (1'd1 == and_ln120_reg_2412) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        buf_4_V_d1 = p_filter_in1_dout;
    end else begin
        buf_4_V_d1 = 'bx;
    end
end

always @ (*) begin
    if (((~(trunc_ln324_2_reg_2369 == 3'd0) & ~(trunc_ln324_2_reg_2369 == 3'd1) & ~(trunc_ln324_2_reg_2369 == 3'd2) & ~(trunc_ln324_2_reg_2369 == 3'd3) & (1'd1 == and_ln120_reg_2412) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0)) | (~(trunc_ln324_2_reg_2369 == 3'd0) & ~(trunc_ln324_2_reg_2369 == 3'd1) & ~(trunc_ln324_2_reg_2369 == 3'd2) & ~(trunc_ln324_2_reg_2369 == 3'd3) & (1'd0 == and_ln120_reg_2412) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0)) | (~(trunc_ln324_reg_2119 == 3'd0) & ~(trunc_ln324_reg_2119 == 3'd1) & ~(trunc_ln324_reg_2119 == 3'd2) & ~(trunc_ln324_reg_2119 == 3'd3) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        buf_4_V_we1 = 1'b1;
    end else begin
        buf_4_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln120_reg_2412) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        p_filter_in1_blk_n = p_filter_in1_empty_n;
    end else begin
        p_filter_in1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln120_reg_2412) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        p_filter_in1_read = 1'b1;
    end else begin
        p_filter_in1_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln886_reg_2425_pp3_iter3_reg == 1'd0) & (ap_enable_reg_pp3_iter4 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        p_filter_out2_blk_n = p_filter_out2_full_n;
    end else begin
        p_filter_out2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln886_reg_2425_pp3_iter3_reg == 1'd0) & (ap_enable_reg_pp3_iter4 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        p_filter_out2_write = 1'b1;
    end else begin
        p_filter_out2_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln882_fu_665_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln882_1_fu_712_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln882_2_fu_728_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln882_2_fu_728_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if (~((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln882_3_fu_758_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln882_3_fu_758_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((icmp_ln882_4_fu_838_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter0 == 1'b1) & (icmp_ln882_5_fu_972_p2 == 1'd0)) & ~((ap_enable_reg_pp3_iter4 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter3 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((ap_enable_reg_pp3_iter4 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter3 == 1'b0)) | ((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter0 == 1'b1) & (icmp_ln882_5_fu_972_p2 == 1'd0)))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_i_i50_fu_813_p2 = (conv_i_i_i47_fu_810_p1 + 17'd2);

assign add_ln1350_1_fu_1982_p2 = (zext_ln695_17_fu_1955_p1 + zext_ln695_22_fu_1978_p1);

assign add_ln1350_2_fu_1988_p2 = (15'd128 + zext_ln695_25_fu_1931_p1);

assign add_ln1350_fu_1998_p2 = (add_ln1350_1_fu_1982_p2 + zext_ln1350_fu_1994_p1);

assign add_ln1501_1_fu_1423_p2 = (zext_ln1501_6_fu_1419_p1 + zext_ln1501_5_fu_1415_p1);

assign add_ln1501_fu_1369_p2 = (zext_ln1501_fu_1357_p1 + zext_ln1501_1_fu_1361_p1);

assign add_ln217_fu_748_p2 = (init_buf_reg_534 + 64'd1);

assign add_ln695_10_fu_1545_p2 = (add_ln695_13_fu_1519_p2 + zext_ln695_24_fu_1541_p1);

assign add_ln695_11_cast_fu_1911_p1 = add_ln695_10_reg_2484;

assign add_ln695_11_fu_1569_p2 = (zext_ln695_13_fu_1565_p1 + zext_ln695_12_fu_1561_p1);

assign add_ln695_12_fu_1603_p2 = (zext_ln357_fu_1341_p1 + zext_ln357_1_fu_1345_p1);

assign add_ln695_13_fu_1519_p2 = (zext_ln695_6_fu_1483_p1 + add_ln695_7_cast_fu_1503_p1);

assign add_ln695_14_fu_1623_p2 = (zext_ln695_18_fu_1609_p1 + zext_ln695_27_fu_1619_p1);

assign add_ln695_15_fu_1633_p2 = (zext_ln695_19_fu_1629_p1 + zext_ln1501_4_fu_1411_p1);

assign add_ln695_16_fu_1962_p2 = (zext_ln695_20_fu_1959_p1 + zext_ln674_2_fu_1896_p1);

assign add_ln695_17_fu_1972_p2 = (shl_ln785_cast_fu_1907_p1 + zext_ln695_21_fu_1968_p1);

assign add_ln695_18_fu_1525_p2 = (zext_ln695_16_fu_1515_p1 + zext_ln695_15_fu_1511_p1);

assign add_ln695_19_fu_1535_p2 = (zext_ln695_11_fu_1507_p1 + zext_ln695_23_fu_1531_p1);

assign add_ln695_1_fu_763_p2 = (empty_53_reg_556 + 13'd1);

assign add_ln695_20_fu_977_p2 = (ap_phi_mux_empty_56_phi_fu_638_p4 + 13'd1);

assign add_ln695_21_fu_1613_p2 = (zext_ln674_1_fu_1353_p1 + zext_ln674_fu_1349_p1);

assign add_ln695_2_fu_2015_p2 = (empty_54_reg_622 + 13'd1);

assign add_ln695_3_fu_1393_p2 = (zext_ln1501_3_fu_1375_p1 + zext_ln695_3_fu_1389_p1);

assign add_ln695_4_fu_1451_p2 = (zext_ln1501_7_fu_1429_p1 + zext_ln695_7_fu_1447_p1);

assign add_ln695_5_fu_1469_p2 = (src_buf_V_0_3_load_cast_fu_1457_p1 + zext_ln695_2_fu_1461_p1);

assign add_ln695_6_fu_1383_p2 = (zext_ln695_1_fu_1379_p1 + zext_ln1501_2_fu_1365_p1);

assign add_ln695_7_cast_fu_1503_p1 = add_ln695_7_fu_1497_p2;

assign add_ln695_7_fu_1497_p2 = (zext_ln695_4_fu_1475_p1 + zext_ln695_10_fu_1493_p1);

assign add_ln695_8_fu_1441_p2 = (zext_ln695_5_fu_1437_p1 + zext_ln1501_8_fu_1433_p1);

assign add_ln695_9_fu_1487_p2 = (zext_ln695_9_fu_1479_p1 + zext_ln695_8_fu_1465_p1);

assign add_ln695_fu_733_p2 = (ap_phi_mux_empty_52_phi_fu_548_p4 + 13'd1);

assign and_ln120_fu_988_p2 = (icmp_ln882_6_fu_983_p2 & cmp_i_i289_i_reg_2334);

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd5];

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((ap_enable_reg_pp1_iter1 == 1'b1) & (p_filter_in1_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((ap_enable_reg_pp1_iter1 == 1'b1) & (p_filter_in1_empty_n == 1'b0));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage0_01001 = (((icmp_ln886_reg_2425_pp3_iter3_reg == 1'd0) & (ap_enable_reg_pp3_iter4 == 1'b1) & (p_filter_out2_full_n == 1'b0)) | ((1'd1 == and_ln120_reg_2412) & (ap_enable_reg_pp3_iter1 == 1'b1) & (p_filter_in1_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_pp3_stage0_11001 = (((icmp_ln886_reg_2425_pp3_iter3_reg == 1'd0) & (ap_enable_reg_pp3_iter4 == 1'b1) & (p_filter_out2_full_n == 1'b0)) | ((1'd1 == and_ln120_reg_2412) & (ap_enable_reg_pp3_iter1 == 1'b1) & (p_filter_in1_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_pp3_stage0_subdone = (((icmp_ln886_reg_2425_pp3_iter3_reg == 1'd0) & (ap_enable_reg_pp3_iter4 == 1'b1) & (p_filter_out2_full_n == 1'b0)) | ((1'd1 == and_ln120_reg_2412) & (ap_enable_reg_pp3_iter1 == 1'b1) & (p_filter_in1_empty_n == 1'b0)));
end

assign ap_block_state12_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state13_pp3_stage0_iter1 = ((1'd1 == and_ln120_reg_2412) & (p_filter_in1_empty_n == 1'b0));
end

assign ap_block_state14_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp3_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state16_pp3_stage0_iter4 = ((icmp_ln886_reg_2425_pp3_iter3_reg == 1'd0) & (p_filter_out2_full_n == 1'b0));
end

assign ap_block_state5_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_pp1_stage0_iter1 = (p_filter_in1_empty_n == 1'b0);
end

assign ap_block_state8_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_phi_mux_row_ind_V_0_2_phi_fu_527_p4 = row_ind_V_0_2_reg_523;

assign cmp_i_i169_i_1_fu_886_p2 = (($signed(sub_i181_i_fu_862_p2) < $signed(18'd1)) ? 1'b1 : 1'b0);

assign cmp_i_i169_i_3_fu_920_p2 = (($signed(sub_i181_i_fu_862_p2) < $signed(18'd3)) ? 1'b1 : 1'b0);

assign cmp_i_i169_i_4_fu_932_p2 = (($signed(sub_i_i198_i_fu_853_p2) > $signed(17'd0)) ? 1'b1 : 1'b0);

assign cmp_i_i224_i_fu_848_p2 = (($signed(zext_ln882_3_fu_834_p1) > $signed(sub_i_reg_2324)) ? 1'b1 : 1'b0);

assign cmp_i_i289_i_fu_843_p2 = ((zext_ln882_2_fu_830_p1 < img_height) ? 1'b1 : 1'b0);

assign cmp_i_i_i_fu_1055_p2 = ((empty_56_reg_634_pp3_iter1_reg == 13'd0) ? 1'b1 : 1'b0);

assign conv_i85_fu_769_p1 = empty_53_reg_556;

assign conv_i_i_i47_fu_810_p1 = img_height;

assign empty_55_fu_868_p1 = sub_i181_i_fu_862_p2[2:0];

assign empty_57_fu_1299_p3 = ((spec_select2165_reg_2364[0:0] === 1'b1) ? tmp_11_fu_1269_p7 : tmp_12_fu_1284_p7);

assign empty_58_fu_1597_p2 = (zext_ln695_14_fu_1575_p1 + tmp30_cast_fu_1593_p1);

assign empty_fu_646_p1 = img_width[13:0];

assign icmp_fu_908_p2 = (($signed(tmp_13_fu_898_p4) < $signed(17'd1)) ? 1'b1 : 1'b0);

assign icmp_ln882_1_fu_712_p2 = ((init_buf_reg_534 < wide_trip_count_reg_2110) ? 1'b1 : 1'b0);

assign icmp_ln882_2_fu_728_p2 = ((zext_ln882_fu_724_p1 < img_width) ? 1'b1 : 1'b0);

assign icmp_ln882_3_fu_758_p2 = ((zext_ln882_1_fu_754_p1 < img_width) ? 1'b1 : 1'b0);

assign icmp_ln882_4_fu_838_p2 = ((zext_ln882_3_fu_834_p1 < add_i_i50_reg_2314) ? 1'b1 : 1'b0);

assign icmp_ln882_5_fu_972_p2 = ((zext_ln882_5_fu_968_p1 < op2_assign_reg_2319) ? 1'b1 : 1'b0);

assign icmp_ln882_6_fu_983_p2 = ((zext_ln882_4_fu_964_p1 < img_width) ? 1'b1 : 1'b0);

assign icmp_ln882_fu_665_p2 = ((row_ind_V_0_2_reg_523 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln886_fu_1022_p2 = ((tmp_14_fu_1012_p4 == 12'd0) ? 1'b1 : 1'b0);

assign init_row_ind_fu_671_p2 = (row_ind_V_0_2_reg_523 + 3'd1);

assign op2_assign_fu_819_p2 = (empty_reg_2064 + 14'd2);

assign p_cast16_fu_1935_p1 = empty_58_reg_2494;

assign p_cast17_fu_1938_p1 = add_ln695_4_reg_2478;

assign p_filter_out2_din = {{add_ln1350_fu_1998_p2[15:8]}};

assign shl_ln1_fu_1900_p3 = {{src_buf_V_2_1_load_reg_2473}, {5'd0}};

assign shl_ln695_1_fu_1889_p3 = {{add_ln695_4_reg_2478}, {3'd0}};

assign shl_ln785_cast_fu_1907_p1 = shl_ln1_fu_1900_p3;

assign shl_ln_fu_1403_p3 = {{add_ln695_3_fu_1393_p2}, {1'd0}};

assign spec_select2101_fu_880_p2 = (tmp_fu_872_p3 & cmp_i_i224_i_fu_848_p2);

assign spec_select2117_fu_892_p2 = (cmp_i_i224_i_fu_848_p2 & cmp_i_i169_i_1_fu_886_p2);

assign spec_select2133_fu_914_p2 = (icmp_fu_908_p2 & cmp_i_i224_i_fu_848_p2);

assign spec_select2149_fu_926_p2 = (cmp_i_i224_i_fu_848_p2 & cmp_i_i169_i_3_fu_920_p2);

assign spec_select2165_fu_938_p2 = (cmp_i_i224_i_fu_848_p2 & cmp_i_i169_i_4_fu_932_p2);

assign src_buf_V_0_0_1_fu_1761_p3 = ((cmp_i_i_i_reg_2454[0:0] === 1'b1) ? src_buf_V_0_4_3_fu_1327_p3 : src_buf_V_0_0_fu_192);

assign src_buf_V_0_1_1_fu_1754_p3 = ((cmp_i_i_i_reg_2454[0:0] === 1'b1) ? src_buf_V_0_4_3_fu_1327_p3 : src_buf_V_0_1_fu_196);

assign src_buf_V_0_3_load_cast_fu_1457_p1 = src_buf_V_0_2_fu_200;

assign src_buf_V_0_4_2_fu_1747_p3 = ((cmp_i_i_i_reg_2454[0:0] === 1'b1) ? src_buf_V_0_4_3_fu_1327_p3 : src_buf_V_0_2_fu_200);

assign src_buf_V_0_4_3_fu_1327_p3 = ((icmp_ln882_6_reg_2403_pp3_iter2_reg[0:0] === 1'b1) ? src_buf_V_0_4_fu_1151_p3 : src_buf_V_0_2_fu_200);

assign src_buf_V_0_4_fu_1151_p3 = ((spec_select2101_reg_2344[0:0] === 1'b1) ? tmp_4_fu_1121_p7 : tmp_5_fu_1136_p7);

assign src_buf_V_1_0_2_fu_1740_p3 = ((cmp_i_i_i_reg_2454[0:0] === 1'b1) ? src_buf_V_1_4_3_fu_1320_p3 : src_buf_V_1_0_1_fu_208);

assign src_buf_V_1_1_1_fu_1733_p3 = ((cmp_i_i_i_reg_2454[0:0] === 1'b1) ? src_buf_V_1_4_3_fu_1320_p3 : src_buf_V_1_1_fu_212);

assign src_buf_V_1_4_2_fu_1726_p3 = ((cmp_i_i_i_reg_2454[0:0] === 1'b1) ? src_buf_V_1_4_3_fu_1320_p3 : src_buf_V_1_2_fu_216);

assign src_buf_V_1_4_3_fu_1320_p3 = ((icmp_ln882_6_reg_2403_pp3_iter2_reg[0:0] === 1'b1) ? src_buf_V_1_4_fu_1188_p3 : src_buf_V_1_2_fu_216);

assign src_buf_V_1_4_fu_1188_p3 = ((spec_select2117_reg_2349[0:0] === 1'b1) ? tmp_6_fu_1158_p7 : tmp_7_fu_1173_p7);

assign src_buf_V_2_0_2_fu_1719_p3 = ((cmp_i_i_i_reg_2454[0:0] === 1'b1) ? src_buf_V_2_4_3_fu_1313_p3 : src_buf_V_2_0_1_fu_224);

assign src_buf_V_2_1_1_fu_1712_p3 = ((cmp_i_i_i_reg_2454[0:0] === 1'b1) ? src_buf_V_2_4_3_fu_1313_p3 : src_buf_V_2_1_fu_228);

assign src_buf_V_2_2_1_cast_fu_1551_p1 = src_buf_V_2_1_fu_228;

assign src_buf_V_2_4_2_fu_1705_p3 = ((cmp_i_i_i_reg_2454[0:0] === 1'b1) ? src_buf_V_2_4_3_fu_1313_p3 : src_buf_V_2_2_fu_232);

assign src_buf_V_2_4_3_fu_1313_p3 = ((icmp_ln882_6_reg_2403_pp3_iter2_reg[0:0] === 1'b1) ? src_buf_V_2_4_fu_1225_p3 : src_buf_V_2_2_fu_232);

assign src_buf_V_2_4_fu_1225_p3 = ((spec_select2133_reg_2354[0:0] === 1'b1) ? tmp_8_fu_1195_p7 : tmp_9_fu_1210_p7);

assign src_buf_V_3_0_2_fu_1698_p3 = ((cmp_i_i_i_reg_2454[0:0] === 1'b1) ? src_buf_V_3_4_3_fu_1306_p3 : src_buf_V_3_0_1_fu_240);

assign src_buf_V_3_1_1_fu_1691_p3 = ((cmp_i_i_i_reg_2454[0:0] === 1'b1) ? src_buf_V_3_4_3_fu_1306_p3 : src_buf_V_3_1_fu_244);

assign src_buf_V_3_3_1_cast_fu_1583_p1 = src_buf_V_3_2_fu_248;

assign src_buf_V_3_4_2_fu_1684_p3 = ((cmp_i_i_i_reg_2454[0:0] === 1'b1) ? src_buf_V_3_4_3_fu_1306_p3 : src_buf_V_3_2_fu_248);

assign src_buf_V_3_4_3_fu_1306_p3 = ((icmp_ln882_6_reg_2403_pp3_iter2_reg[0:0] === 1'b1) ? src_buf_V_3_4_fu_1262_p3 : src_buf_V_3_2_fu_248);

assign src_buf_V_3_4_fu_1262_p3 = ((spec_select2149_reg_2359[0:0] === 1'b1) ? tmp_s_fu_1232_p7 : tmp_10_fu_1247_p7);

assign src_buf_V_4_0_1_fu_1768_p3 = ((cmp_i_i_i_reg_2454[0:0] === 1'b1) ? src_buf_V_4_4_fu_1334_p3 : src_buf_V_4_0_fu_256);

assign src_buf_V_4_0_2_fu_1775_p3 = ((cmp_i_i_i_reg_2454[0:0] === 1'b1) ? src_buf_V_4_4_fu_1334_p3 : src_buf_V_4_1_fu_260);

assign src_buf_V_4_0_3_fu_1782_p3 = ((cmp_i_i_i_reg_2454[0:0] === 1'b1) ? src_buf_V_4_4_fu_1334_p3 : src_buf_V_4_2_fu_264);

assign src_buf_V_4_4_fu_1334_p3 = ((icmp_ln882_6_reg_2403_pp3_iter2_reg[0:0] === 1'b1) ? empty_57_fu_1299_p3 : src_buf_V_4_2_fu_264);

assign sub_i181_i_fu_862_p2 = ($signed(18'd4) - $signed(sub_i_i198_i_cast_fu_858_p1));

assign sub_i_fu_824_p2 = ($signed(conv_i_i_i47_fu_810_p1) + $signed(17'd131071));

assign sub_i_i198_i_cast_fu_858_p1 = sub_i_i198_i_fu_853_p2;

assign sub_i_i198_i_fu_853_p2 = (zext_ln882_3_fu_834_p1 - sub_i_reg_2324);

assign tmp24_fu_1917_p2 = (add_ln695_11_cast_fu_1911_p1 + tmp29_cast_fu_1914_p1);

assign tmp29_cast_fu_1914_p1 = tmp29_reg_2489;

assign tmp29_fu_1555_p2 = (src_buf_V_2_2_1_cast_fu_1551_p1 + zext_ln695_fu_1399_p1);

assign tmp30_cast_fu_1593_p1 = tmp30_fu_1587_p2;

assign tmp30_fu_1587_p2 = (src_buf_V_3_3_1_cast_fu_1583_p1 + zext_ln695_26_fu_1579_p1);

assign tmp3_fu_1923_p3 = {{tmp24_fu_1917_p2}, {2'd0}};

assign tmp42_fu_1941_p2 = (p_cast16_fu_1935_p1 + p_cast17_fu_1938_p1);

assign tmp5_fu_1947_p3 = {{tmp42_fu_1941_p2}, {4'd0}};

assign tmp_13_fu_898_p4 = {{sub_i181_i_fu_862_p2[17:1]}};

assign tmp_14_fu_1012_p4 = {{ap_phi_mux_empty_56_phi_fu_638_p4[12:1]}};

assign tmp_fu_872_p3 = sub_i181_i_fu_862_p2[32'd17];

assign trunc_ln324_1_fu_721_p1 = row_ind_V_2_0_load_reg_2079[2:0];

assign trunc_ln324_2_fu_944_p1 = row_ind_V_3_1_reg_567[2:0];

assign trunc_ln324_3_fu_948_p1 = row_ind_V_2_reg_577[2:0];

assign trunc_ln324_4_fu_952_p1 = row_ind_V_1_reg_588[2:0];

assign trunc_ln324_5_fu_956_p1 = row_ind_V_0_reg_599[2:0];

assign trunc_ln324_6_fu_960_p1 = row_ind_V_4_reg_610[2:0];

assign trunc_ln324_7_fu_1008_p1 = tmp_3_fu_993_p7[2:0];

assign trunc_ln324_fu_717_p1 = init_buf_reg_534[2:0];

assign wide_trip_count_fu_709_p1 = row_ind_V_4_0_load_reg_2091;

assign zext_ln130_fu_1046_p1 = empty_56_reg_634_pp3_iter1_reg;

assign zext_ln1350_fu_1994_p1 = add_ln1350_2_fu_1988_p2;

assign zext_ln1501_1_fu_1361_p1 = src_buf_V_0_1_fu_196;

assign zext_ln1501_2_fu_1365_p1 = src_buf_V_2_4_3_fu_1313_p3;

assign zext_ln1501_3_fu_1375_p1 = add_ln1501_fu_1369_p2;

assign zext_ln1501_4_fu_1411_p1 = shl_ln_fu_1403_p3;

assign zext_ln1501_5_fu_1415_p1 = src_buf_V_1_1_fu_212;

assign zext_ln1501_6_fu_1419_p1 = src_buf_V_2_0_1_fu_224;

assign zext_ln1501_7_fu_1429_p1 = add_ln1501_1_fu_1423_p2;

assign zext_ln1501_8_fu_1433_p1 = src_buf_V_2_2_fu_232;

assign zext_ln1501_fu_1357_p1 = src_buf_V_2_0_fu_220;

assign zext_ln304_fu_677_p1 = row_ind_V_0_2_reg_523;

assign zext_ln357_1_fu_1345_p1 = src_buf_V_0_4_3_fu_1327_p3;

assign zext_ln357_fu_1341_p1 = p_Result_s_fu_188;

assign zext_ln538_1_fu_739_p1 = empty_52_reg_544;

assign zext_ln538_2_fu_1037_p1 = empty_56_reg_634;

assign zext_ln538_3_fu_1028_p1 = empty_56_reg_634;

assign zext_ln538_fu_706_p1 = row_ind_V_2_0_load_reg_2079;

assign zext_ln674_1_fu_1353_p1 = src_buf_V_4_4_fu_1334_p3;

assign zext_ln674_2_fu_1896_p1 = shl_ln695_1_fu_1889_p3;

assign zext_ln674_fu_1349_p1 = p_Result_1_fu_252;

assign zext_ln695_10_fu_1493_p1 = add_ln695_9_fu_1487_p2;

assign zext_ln695_11_fu_1507_p1 = src_buf_V_4_2_fu_264;

assign zext_ln695_12_fu_1561_p1 = src_buf_V_1_0_1_fu_208;

assign zext_ln695_13_fu_1565_p1 = src_buf_V_1_2_fu_216;

assign zext_ln695_14_fu_1575_p1 = add_ln695_11_fu_1569_p2;

assign zext_ln695_15_fu_1511_p1 = src_buf_V_3_0_fu_236;

assign zext_ln695_16_fu_1515_p1 = src_buf_V_3_4_3_fu_1306_p3;

assign zext_ln695_17_fu_1955_p1 = tmp5_fu_1947_p3;

assign zext_ln695_18_fu_1609_p1 = add_ln695_12_fu_1603_p2;

assign zext_ln695_19_fu_1629_p1 = add_ln695_14_fu_1623_p2;

assign zext_ln695_1_fu_1379_p1 = src_buf_V_4_1_fu_260;

assign zext_ln695_20_fu_1959_p1 = add_ln695_15_reg_2499;

assign zext_ln695_21_fu_1968_p1 = add_ln695_16_fu_1962_p2;

assign zext_ln695_22_fu_1978_p1 = add_ln695_17_fu_1972_p2;

assign zext_ln695_23_fu_1531_p1 = add_ln695_18_fu_1525_p2;

assign zext_ln695_24_fu_1541_p1 = add_ln695_19_fu_1535_p2;

assign zext_ln695_25_fu_1931_p1 = tmp3_fu_1923_p3;

assign zext_ln695_26_fu_1579_p1 = src_buf_V_3_0_1_fu_240;

assign zext_ln695_27_fu_1619_p1 = add_ln695_21_fu_1613_p2;

assign zext_ln695_2_fu_1461_p1 = src_buf_V_0_0_fu_192;

assign zext_ln695_3_fu_1389_p1 = add_ln695_6_fu_1383_p2;

assign zext_ln695_4_fu_1475_p1 = add_ln695_5_fu_1469_p2;

assign zext_ln695_5_fu_1437_p1 = src_buf_V_3_1_fu_244;

assign zext_ln695_6_fu_1483_p1 = src_buf_V_4_0_fu_256;

assign zext_ln695_7_fu_1447_p1 = add_ln695_8_fu_1441_p2;

assign zext_ln695_8_fu_1465_p1 = src_buf_V_1_0_fu_204;

assign zext_ln695_9_fu_1479_p1 = src_buf_V_1_4_3_fu_1320_p3;

assign zext_ln695_fu_1399_p1 = add_ln695_3_fu_1393_p2;

assign zext_ln882_1_fu_754_p1 = empty_53_reg_556;

assign zext_ln882_2_fu_830_p1 = empty_54_reg_622;

assign zext_ln882_3_fu_834_p1 = empty_54_reg_622;

assign zext_ln882_4_fu_964_p1 = ap_phi_mux_empty_56_phi_fu_638_p4;

assign zext_ln882_5_fu_968_p1 = ap_phi_mux_empty_56_phi_fu_638_p4;

assign zext_ln882_fu_724_p1 = ap_phi_mux_empty_52_phi_fu_548_p4;

always @ (posedge ap_clk) begin
    row_ind_V_0_0_load_reg_2069[12:3] <= 10'b0000000000;
    row_ind_V_1_0_load_reg_2074[12:3] <= 10'b0000000000;
    row_ind_V_2_0_load_reg_2079[12:3] <= 10'b0000000000;
    row_ind_V_3_0_load_reg_2086[12:3] <= 10'b0000000000;
    row_ind_V_4_0_load_reg_2091[12:3] <= 10'b0000000000;
    wide_trip_count_reg_2110[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    row_ind_V_0_0_fu_148[12:3] <= 10'b0000000000;
    row_ind_V_1_0_fu_152[12:3] <= 10'b0000000000;
    row_ind_V_2_0_fu_156[12:3] <= 10'b0000000000;
    row_ind_V_3_0_fu_160[12:3] <= 10'b0000000000;
    row_ind_V_4_0_fu_164[12:3] <= 10'b0000000000;
end

endmodule //pyr_down_accel_xf_pyrdown_gaussian_nxn_1080_1920_0_1_1_1922_5_25_1_s
