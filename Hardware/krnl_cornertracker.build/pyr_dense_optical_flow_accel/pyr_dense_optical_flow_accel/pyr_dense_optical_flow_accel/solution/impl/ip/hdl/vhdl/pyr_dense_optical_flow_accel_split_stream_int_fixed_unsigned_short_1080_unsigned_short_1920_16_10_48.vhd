-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity pyr_dense_optical_flow_accel_split_stream_int_fixed_unsigned_short_1080_unsigned_short_1920_16_10_48 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    streamFlowin_mat_436_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    streamFlowin_mat_436_empty_n : IN STD_LOGIC;
    streamFlowin_mat_436_read : OUT STD_LOGIC;
    strmFlowU_split15_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    strmFlowU_split15_full_n : IN STD_LOGIC;
    strmFlowU_split15_write : OUT STD_LOGIC;
    strmFlowV_split16_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    strmFlowV_split16_full_n : IN STD_LOGIC;
    strmFlowV_split16_write : OUT STD_LOGIC;
    rows : IN STD_LOGIC_VECTOR (31 downto 0);
    cols : IN STD_LOGIC_VECTOR (31 downto 0);
    rows1 : IN STD_LOGIC_VECTOR (31 downto 0);
    cols2 : IN STD_LOGIC_VECTOR (31 downto 0);
    level : IN STD_LOGIC_VECTOR (31 downto 0);
    scale_up_flag : IN STD_LOGIC_VECTOR (0 downto 0);
    scale_in : IN STD_LOGIC_VECTOR (31 downto 0);
    init_flag : IN STD_LOGIC_VECTOR (0 downto 0);
    rows_out_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    rows_out_full_n : IN STD_LOGIC;
    rows_out_write : OUT STD_LOGIC;
    rows_out1_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    rows_out1_full_n : IN STD_LOGIC;
    rows_out1_write : OUT STD_LOGIC;
    cols_out_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    cols_out_full_n : IN STD_LOGIC;
    cols_out_write : OUT STD_LOGIC;
    cols_out2_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    cols_out2_full_n : IN STD_LOGIC;
    cols_out2_write : OUT STD_LOGIC;
    rows1_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    rows1_out_full_n : IN STD_LOGIC;
    rows1_out_write : OUT STD_LOGIC;
    rows1_out3_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    rows1_out3_full_n : IN STD_LOGIC;
    rows1_out3_write : OUT STD_LOGIC;
    cols2_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    cols2_out_full_n : IN STD_LOGIC;
    cols2_out_write : OUT STD_LOGIC;
    cols2_out4_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    cols2_out4_full_n : IN STD_LOGIC;
    cols2_out4_write : OUT STD_LOGIC;
    level_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    level_out_full_n : IN STD_LOGIC;
    level_out_write : OUT STD_LOGIC;
    scale_up_flag_out_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    scale_up_flag_out_full_n : IN STD_LOGIC;
    scale_up_flag_out_write : OUT STD_LOGIC;
    scale_up_flag_out5_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    scale_up_flag_out5_full_n : IN STD_LOGIC;
    scale_up_flag_out5_write : OUT STD_LOGIC;
    scale_in_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    scale_in_out_full_n : IN STD_LOGIC;
    scale_in_out_write : OUT STD_LOGIC;
    scale_in_out6_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    scale_in_out6_full_n : IN STD_LOGIC;
    scale_in_out6_write : OUT STD_LOGIC;
    init_flag_out_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    init_flag_out_full_n : IN STD_LOGIC;
    init_flag_out_write : OUT STD_LOGIC );
end;


architecture behav of pyr_dense_optical_flow_accel_split_stream_int_fixed_unsigned_short_1080_unsigned_short_1920_16_10_48 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";

attribute shreg_extract : string;
    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal streamFlowin_mat_436_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln882_2_reg_399 : STD_LOGIC_VECTOR (0 downto 0);
    signal strmFlowU_split15_blk_n : STD_LOGIC;
    signal strmFlowV_split16_blk_n : STD_LOGIC;
    signal rows_out_blk_n : STD_LOGIC;
    signal rows_out1_blk_n : STD_LOGIC;
    signal cols_out_blk_n : STD_LOGIC;
    signal cols_out2_blk_n : STD_LOGIC;
    signal rows1_out_blk_n : STD_LOGIC;
    signal rows1_out3_blk_n : STD_LOGIC;
    signal cols2_out_blk_n : STD_LOGIC;
    signal cols2_out4_blk_n : STD_LOGIC;
    signal level_out_blk_n : STD_LOGIC;
    signal scale_up_flag_out_blk_n : STD_LOGIC;
    signal scale_up_flag_out5_blk_n : STD_LOGIC;
    signal scale_in_out_blk_n : STD_LOGIC;
    signal scale_in_out6_blk_n : STD_LOGIC;
    signal init_flag_out_blk_n : STD_LOGIC;
    signal empty_154_reg_301 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal icmp_ln882_fu_338_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal add_ln695_2_fu_343_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln695_2_reg_394 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln882_2_fu_353_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal add_ln695_fu_358_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal empty_reg_290 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal trunc_ln91_3_fu_328_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln91_2_fu_322_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal zext_ln882_fu_334_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln882_2_fu_349_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln882_fu_338_p2 = ap_const_lv1_0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln882_fu_338_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state3);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln882_fu_338_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    empty_154_reg_301_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln882_2_fu_353_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                empty_154_reg_301 <= add_ln695_fu_358_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln882_fu_338_p2 = ap_const_lv1_1))) then 
                empty_154_reg_301 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    empty_reg_290_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                empty_reg_290 <= add_ln695_2_reg_394;
            elsif ((not(((scale_up_flag_out_full_n = ap_const_logic_0) or (level_out_full_n = ap_const_logic_0) or (cols2_out4_full_n = ap_const_logic_0) or (cols2_out_full_n = ap_const_logic_0) or (rows1_out3_full_n = ap_const_logic_0) or (rows1_out_full_n = ap_const_logic_0) or (cols_out2_full_n = ap_const_logic_0) or (cols_out_full_n = ap_const_logic_0) or (rows_out1_full_n = ap_const_logic_0) or (rows_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (init_flag_out_full_n = ap_const_logic_0) or (scale_in_out6_full_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (scale_in_out_full_n = ap_const_logic_0) or (scale_up_flag_out5_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                empty_reg_290 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln695_2_reg_394 <= add_ln695_2_fu_343_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln882_2_reg_399 <= icmp_ln882_2_fu_353_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, rows_out_full_n, rows_out1_full_n, cols_out_full_n, cols_out2_full_n, rows1_out_full_n, rows1_out3_full_n, cols2_out_full_n, cols2_out4_full_n, level_out_full_n, scale_up_flag_out_full_n, scale_up_flag_out5_full_n, scale_in_out_full_n, scale_in_out6_full_n, init_flag_out_full_n, icmp_ln882_fu_338_p2, ap_CS_fsm_state2, icmp_ln882_2_fu_353_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((scale_up_flag_out_full_n = ap_const_logic_0) or (level_out_full_n = ap_const_logic_0) or (cols2_out4_full_n = ap_const_logic_0) or (cols2_out_full_n = ap_const_logic_0) or (rows1_out3_full_n = ap_const_logic_0) or (rows1_out_full_n = ap_const_logic_0) or (cols_out2_full_n = ap_const_logic_0) or (cols_out_full_n = ap_const_logic_0) or (rows_out1_full_n = ap_const_logic_0) or (rows_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (init_flag_out_full_n = ap_const_logic_0) or (scale_in_out6_full_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (scale_in_out_full_n = ap_const_logic_0) or (scale_up_flag_out5_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln882_fu_338_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln882_2_fu_353_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln882_2_fu_353_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    add_ln695_2_fu_343_p2 <= std_logic_vector(unsigned(empty_reg_290) + unsigned(ap_const_lv16_1));
    add_ln695_fu_358_p2 <= std_logic_vector(unsigned(empty_154_reg_301) + unsigned(ap_const_lv16_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state5 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(streamFlowin_mat_436_empty_n, strmFlowU_split15_full_n, strmFlowV_split16_full_n, ap_enable_reg_pp0_iter1, icmp_ln882_2_reg_399)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((strmFlowV_split16_full_n = ap_const_logic_0) and (icmp_ln882_2_reg_399 = ap_const_lv1_1)) or ((strmFlowU_split15_full_n = ap_const_logic_0) and (icmp_ln882_2_reg_399 = ap_const_lv1_1)) or ((streamFlowin_mat_436_empty_n = ap_const_logic_0) and (icmp_ln882_2_reg_399 = ap_const_lv1_1))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(streamFlowin_mat_436_empty_n, strmFlowU_split15_full_n, strmFlowV_split16_full_n, ap_enable_reg_pp0_iter1, icmp_ln882_2_reg_399)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((strmFlowV_split16_full_n = ap_const_logic_0) and (icmp_ln882_2_reg_399 = ap_const_lv1_1)) or ((strmFlowU_split15_full_n = ap_const_logic_0) and (icmp_ln882_2_reg_399 = ap_const_lv1_1)) or ((streamFlowin_mat_436_empty_n = ap_const_logic_0) and (icmp_ln882_2_reg_399 = ap_const_lv1_1))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(streamFlowin_mat_436_empty_n, strmFlowU_split15_full_n, strmFlowV_split16_full_n, ap_enable_reg_pp0_iter1, icmp_ln882_2_reg_399)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((strmFlowV_split16_full_n = ap_const_logic_0) and (icmp_ln882_2_reg_399 = ap_const_lv1_1)) or ((strmFlowU_split15_full_n = ap_const_logic_0) and (icmp_ln882_2_reg_399 = ap_const_lv1_1)) or ((streamFlowin_mat_436_empty_n = ap_const_logic_0) and (icmp_ln882_2_reg_399 = ap_const_lv1_1))));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg, rows_out_full_n, rows_out1_full_n, cols_out_full_n, cols_out2_full_n, rows1_out_full_n, rows1_out3_full_n, cols2_out_full_n, cols2_out4_full_n, level_out_full_n, scale_up_flag_out_full_n, scale_up_flag_out5_full_n, scale_in_out_full_n, scale_in_out6_full_n, init_flag_out_full_n)
    begin
                ap_block_state1 <= ((scale_up_flag_out_full_n = ap_const_logic_0) or (level_out_full_n = ap_const_logic_0) or (cols2_out4_full_n = ap_const_logic_0) or (cols2_out_full_n = ap_const_logic_0) or (rows1_out3_full_n = ap_const_logic_0) or (rows1_out_full_n = ap_const_logic_0) or (cols_out2_full_n = ap_const_logic_0) or (cols_out_full_n = ap_const_logic_0) or (rows_out1_full_n = ap_const_logic_0) or (rows_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (init_flag_out_full_n = ap_const_logic_0) or (scale_in_out6_full_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (scale_in_out_full_n = ap_const_logic_0) or (scale_up_flag_out5_full_n = ap_const_logic_0));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter1_assign_proc : process(streamFlowin_mat_436_empty_n, strmFlowU_split15_full_n, strmFlowV_split16_full_n, icmp_ln882_2_reg_399)
    begin
                ap_block_state4_pp0_stage0_iter1 <= (((strmFlowV_split16_full_n = ap_const_logic_0) and (icmp_ln882_2_reg_399 = ap_const_lv1_1)) or ((strmFlowU_split15_full_n = ap_const_logic_0) and (icmp_ln882_2_reg_399 = ap_const_lv1_1)) or ((streamFlowin_mat_436_empty_n = ap_const_logic_0) and (icmp_ln882_2_reg_399 = ap_const_lv1_1)));
    end process;


    ap_condition_pp0_exit_iter0_state3_assign_proc : process(icmp_ln882_2_fu_353_p2)
    begin
        if ((icmp_ln882_2_fu_353_p2 = ap_const_lv1_0)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, icmp_ln882_fu_338_p2, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln882_fu_338_p2 = ap_const_lv1_0))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (real_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;

    cols2_out4_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, cols2_out4_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            cols2_out4_blk_n <= cols2_out4_full_n;
        else 
            cols2_out4_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    cols2_out4_din <= cols2(16 - 1 downto 0);

    cols2_out4_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, rows_out_full_n, rows_out1_full_n, cols_out_full_n, cols_out2_full_n, rows1_out_full_n, rows1_out3_full_n, cols2_out_full_n, cols2_out4_full_n, level_out_full_n, scale_up_flag_out_full_n, scale_up_flag_out5_full_n, scale_in_out_full_n, scale_in_out6_full_n, init_flag_out_full_n)
    begin
        if ((not(((scale_up_flag_out_full_n = ap_const_logic_0) or (level_out_full_n = ap_const_logic_0) or (cols2_out4_full_n = ap_const_logic_0) or (cols2_out_full_n = ap_const_logic_0) or (rows1_out3_full_n = ap_const_logic_0) or (rows1_out_full_n = ap_const_logic_0) or (cols_out2_full_n = ap_const_logic_0) or (cols_out_full_n = ap_const_logic_0) or (rows_out1_full_n = ap_const_logic_0) or (rows_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (init_flag_out_full_n = ap_const_logic_0) or (scale_in_out6_full_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (scale_in_out_full_n = ap_const_logic_0) or (scale_up_flag_out5_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            cols2_out4_write <= ap_const_logic_1;
        else 
            cols2_out4_write <= ap_const_logic_0;
        end if; 
    end process;


    cols2_out_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, cols2_out_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            cols2_out_blk_n <= cols2_out_full_n;
        else 
            cols2_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    cols2_out_din <= cols2;

    cols2_out_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, rows_out_full_n, rows_out1_full_n, cols_out_full_n, cols_out2_full_n, rows1_out_full_n, rows1_out3_full_n, cols2_out_full_n, cols2_out4_full_n, level_out_full_n, scale_up_flag_out_full_n, scale_up_flag_out5_full_n, scale_in_out_full_n, scale_in_out6_full_n, init_flag_out_full_n)
    begin
        if ((not(((scale_up_flag_out_full_n = ap_const_logic_0) or (level_out_full_n = ap_const_logic_0) or (cols2_out4_full_n = ap_const_logic_0) or (cols2_out_full_n = ap_const_logic_0) or (rows1_out3_full_n = ap_const_logic_0) or (rows1_out_full_n = ap_const_logic_0) or (cols_out2_full_n = ap_const_logic_0) or (cols_out_full_n = ap_const_logic_0) or (rows_out1_full_n = ap_const_logic_0) or (rows_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (init_flag_out_full_n = ap_const_logic_0) or (scale_in_out6_full_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (scale_in_out_full_n = ap_const_logic_0) or (scale_up_flag_out5_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            cols2_out_write <= ap_const_logic_1;
        else 
            cols2_out_write <= ap_const_logic_0;
        end if; 
    end process;


    cols_out2_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, cols_out2_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            cols_out2_blk_n <= cols_out2_full_n;
        else 
            cols_out2_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    cols_out2_din <= trunc_ln91_2_fu_322_p1;

    cols_out2_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, rows_out_full_n, rows_out1_full_n, cols_out_full_n, cols_out2_full_n, rows1_out_full_n, rows1_out3_full_n, cols2_out_full_n, cols2_out4_full_n, level_out_full_n, scale_up_flag_out_full_n, scale_up_flag_out5_full_n, scale_in_out_full_n, scale_in_out6_full_n, init_flag_out_full_n)
    begin
        if ((not(((scale_up_flag_out_full_n = ap_const_logic_0) or (level_out_full_n = ap_const_logic_0) or (cols2_out4_full_n = ap_const_logic_0) or (cols2_out_full_n = ap_const_logic_0) or (rows1_out3_full_n = ap_const_logic_0) or (rows1_out_full_n = ap_const_logic_0) or (cols_out2_full_n = ap_const_logic_0) or (cols_out_full_n = ap_const_logic_0) or (rows_out1_full_n = ap_const_logic_0) or (rows_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (init_flag_out_full_n = ap_const_logic_0) or (scale_in_out6_full_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (scale_in_out_full_n = ap_const_logic_0) or (scale_up_flag_out5_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            cols_out2_write <= ap_const_logic_1;
        else 
            cols_out2_write <= ap_const_logic_0;
        end if; 
    end process;


    cols_out_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, cols_out_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            cols_out_blk_n <= cols_out_full_n;
        else 
            cols_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    cols_out_din <= trunc_ln91_2_fu_322_p1;

    cols_out_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, rows_out_full_n, rows_out1_full_n, cols_out_full_n, cols_out2_full_n, rows1_out_full_n, rows1_out3_full_n, cols2_out_full_n, cols2_out4_full_n, level_out_full_n, scale_up_flag_out_full_n, scale_up_flag_out5_full_n, scale_in_out_full_n, scale_in_out6_full_n, init_flag_out_full_n)
    begin
        if ((not(((scale_up_flag_out_full_n = ap_const_logic_0) or (level_out_full_n = ap_const_logic_0) or (cols2_out4_full_n = ap_const_logic_0) or (cols2_out_full_n = ap_const_logic_0) or (rows1_out3_full_n = ap_const_logic_0) or (rows1_out_full_n = ap_const_logic_0) or (cols_out2_full_n = ap_const_logic_0) or (cols_out_full_n = ap_const_logic_0) or (rows_out1_full_n = ap_const_logic_0) or (rows_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (init_flag_out_full_n = ap_const_logic_0) or (scale_in_out6_full_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (scale_in_out_full_n = ap_const_logic_0) or (scale_up_flag_out5_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            cols_out_write <= ap_const_logic_1;
        else 
            cols_out_write <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln882_2_fu_353_p2 <= "1" when (unsigned(zext_ln882_2_fu_349_p1) < unsigned(cols)) else "0";
    icmp_ln882_fu_338_p2 <= "1" when (unsigned(zext_ln882_fu_334_p1) < unsigned(rows)) else "0";

    init_flag_out_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, init_flag_out_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            init_flag_out_blk_n <= init_flag_out_full_n;
        else 
            init_flag_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    init_flag_out_din <= init_flag;

    init_flag_out_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, rows_out_full_n, rows_out1_full_n, cols_out_full_n, cols_out2_full_n, rows1_out_full_n, rows1_out3_full_n, cols2_out_full_n, cols2_out4_full_n, level_out_full_n, scale_up_flag_out_full_n, scale_up_flag_out5_full_n, scale_in_out_full_n, scale_in_out6_full_n, init_flag_out_full_n)
    begin
        if ((not(((scale_up_flag_out_full_n = ap_const_logic_0) or (level_out_full_n = ap_const_logic_0) or (cols2_out4_full_n = ap_const_logic_0) or (cols2_out_full_n = ap_const_logic_0) or (rows1_out3_full_n = ap_const_logic_0) or (rows1_out_full_n = ap_const_logic_0) or (cols_out2_full_n = ap_const_logic_0) or (cols_out_full_n = ap_const_logic_0) or (rows_out1_full_n = ap_const_logic_0) or (rows_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (init_flag_out_full_n = ap_const_logic_0) or (scale_in_out6_full_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (scale_in_out_full_n = ap_const_logic_0) or (scale_up_flag_out5_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            init_flag_out_write <= ap_const_logic_1;
        else 
            init_flag_out_write <= ap_const_logic_0;
        end if; 
    end process;


    internal_ap_ready_assign_proc : process(icmp_ln882_fu_338_p2, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln882_fu_338_p2 = ap_const_lv1_0))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    level_out_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, level_out_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            level_out_blk_n <= level_out_full_n;
        else 
            level_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    level_out_din <= level;

    level_out_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, rows_out_full_n, rows_out1_full_n, cols_out_full_n, cols_out2_full_n, rows1_out_full_n, rows1_out3_full_n, cols2_out_full_n, cols2_out4_full_n, level_out_full_n, scale_up_flag_out_full_n, scale_up_flag_out5_full_n, scale_in_out_full_n, scale_in_out6_full_n, init_flag_out_full_n)
    begin
        if ((not(((scale_up_flag_out_full_n = ap_const_logic_0) or (level_out_full_n = ap_const_logic_0) or (cols2_out4_full_n = ap_const_logic_0) or (cols2_out_full_n = ap_const_logic_0) or (rows1_out3_full_n = ap_const_logic_0) or (rows1_out_full_n = ap_const_logic_0) or (cols_out2_full_n = ap_const_logic_0) or (cols_out_full_n = ap_const_logic_0) or (rows_out1_full_n = ap_const_logic_0) or (rows_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (init_flag_out_full_n = ap_const_logic_0) or (scale_in_out6_full_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (scale_in_out_full_n = ap_const_logic_0) or (scale_up_flag_out5_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            level_out_write <= ap_const_logic_1;
        else 
            level_out_write <= ap_const_logic_0;
        end if; 
    end process;


    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;


    rows1_out3_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, rows1_out3_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            rows1_out3_blk_n <= rows1_out3_full_n;
        else 
            rows1_out3_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    rows1_out3_din <= rows1(16 - 1 downto 0);

    rows1_out3_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, rows_out_full_n, rows_out1_full_n, cols_out_full_n, cols_out2_full_n, rows1_out_full_n, rows1_out3_full_n, cols2_out_full_n, cols2_out4_full_n, level_out_full_n, scale_up_flag_out_full_n, scale_up_flag_out5_full_n, scale_in_out_full_n, scale_in_out6_full_n, init_flag_out_full_n)
    begin
        if ((not(((scale_up_flag_out_full_n = ap_const_logic_0) or (level_out_full_n = ap_const_logic_0) or (cols2_out4_full_n = ap_const_logic_0) or (cols2_out_full_n = ap_const_logic_0) or (rows1_out3_full_n = ap_const_logic_0) or (rows1_out_full_n = ap_const_logic_0) or (cols_out2_full_n = ap_const_logic_0) or (cols_out_full_n = ap_const_logic_0) or (rows_out1_full_n = ap_const_logic_0) or (rows_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (init_flag_out_full_n = ap_const_logic_0) or (scale_in_out6_full_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (scale_in_out_full_n = ap_const_logic_0) or (scale_up_flag_out5_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            rows1_out3_write <= ap_const_logic_1;
        else 
            rows1_out3_write <= ap_const_logic_0;
        end if; 
    end process;


    rows1_out_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, rows1_out_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            rows1_out_blk_n <= rows1_out_full_n;
        else 
            rows1_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    rows1_out_din <= rows1;

    rows1_out_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, rows_out_full_n, rows_out1_full_n, cols_out_full_n, cols_out2_full_n, rows1_out_full_n, rows1_out3_full_n, cols2_out_full_n, cols2_out4_full_n, level_out_full_n, scale_up_flag_out_full_n, scale_up_flag_out5_full_n, scale_in_out_full_n, scale_in_out6_full_n, init_flag_out_full_n)
    begin
        if ((not(((scale_up_flag_out_full_n = ap_const_logic_0) or (level_out_full_n = ap_const_logic_0) or (cols2_out4_full_n = ap_const_logic_0) or (cols2_out_full_n = ap_const_logic_0) or (rows1_out3_full_n = ap_const_logic_0) or (rows1_out_full_n = ap_const_logic_0) or (cols_out2_full_n = ap_const_logic_0) or (cols_out_full_n = ap_const_logic_0) or (rows_out1_full_n = ap_const_logic_0) or (rows_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (init_flag_out_full_n = ap_const_logic_0) or (scale_in_out6_full_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (scale_in_out_full_n = ap_const_logic_0) or (scale_up_flag_out5_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            rows1_out_write <= ap_const_logic_1;
        else 
            rows1_out_write <= ap_const_logic_0;
        end if; 
    end process;


    rows_out1_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, rows_out1_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            rows_out1_blk_n <= rows_out1_full_n;
        else 
            rows_out1_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    rows_out1_din <= trunc_ln91_3_fu_328_p1;

    rows_out1_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, rows_out_full_n, rows_out1_full_n, cols_out_full_n, cols_out2_full_n, rows1_out_full_n, rows1_out3_full_n, cols2_out_full_n, cols2_out4_full_n, level_out_full_n, scale_up_flag_out_full_n, scale_up_flag_out5_full_n, scale_in_out_full_n, scale_in_out6_full_n, init_flag_out_full_n)
    begin
        if ((not(((scale_up_flag_out_full_n = ap_const_logic_0) or (level_out_full_n = ap_const_logic_0) or (cols2_out4_full_n = ap_const_logic_0) or (cols2_out_full_n = ap_const_logic_0) or (rows1_out3_full_n = ap_const_logic_0) or (rows1_out_full_n = ap_const_logic_0) or (cols_out2_full_n = ap_const_logic_0) or (cols_out_full_n = ap_const_logic_0) or (rows_out1_full_n = ap_const_logic_0) or (rows_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (init_flag_out_full_n = ap_const_logic_0) or (scale_in_out6_full_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (scale_in_out_full_n = ap_const_logic_0) or (scale_up_flag_out5_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            rows_out1_write <= ap_const_logic_1;
        else 
            rows_out1_write <= ap_const_logic_0;
        end if; 
    end process;


    rows_out_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, rows_out_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            rows_out_blk_n <= rows_out_full_n;
        else 
            rows_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    rows_out_din <= trunc_ln91_3_fu_328_p1;

    rows_out_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, rows_out_full_n, rows_out1_full_n, cols_out_full_n, cols_out2_full_n, rows1_out_full_n, rows1_out3_full_n, cols2_out_full_n, cols2_out4_full_n, level_out_full_n, scale_up_flag_out_full_n, scale_up_flag_out5_full_n, scale_in_out_full_n, scale_in_out6_full_n, init_flag_out_full_n)
    begin
        if ((not(((scale_up_flag_out_full_n = ap_const_logic_0) or (level_out_full_n = ap_const_logic_0) or (cols2_out4_full_n = ap_const_logic_0) or (cols2_out_full_n = ap_const_logic_0) or (rows1_out3_full_n = ap_const_logic_0) or (rows1_out_full_n = ap_const_logic_0) or (cols_out2_full_n = ap_const_logic_0) or (cols_out_full_n = ap_const_logic_0) or (rows_out1_full_n = ap_const_logic_0) or (rows_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (init_flag_out_full_n = ap_const_logic_0) or (scale_in_out6_full_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (scale_in_out_full_n = ap_const_logic_0) or (scale_up_flag_out5_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            rows_out_write <= ap_const_logic_1;
        else 
            rows_out_write <= ap_const_logic_0;
        end if; 
    end process;


    scale_in_out6_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, scale_in_out6_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            scale_in_out6_blk_n <= scale_in_out6_full_n;
        else 
            scale_in_out6_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    scale_in_out6_din <= scale_in;

    scale_in_out6_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, rows_out_full_n, rows_out1_full_n, cols_out_full_n, cols_out2_full_n, rows1_out_full_n, rows1_out3_full_n, cols2_out_full_n, cols2_out4_full_n, level_out_full_n, scale_up_flag_out_full_n, scale_up_flag_out5_full_n, scale_in_out_full_n, scale_in_out6_full_n, init_flag_out_full_n)
    begin
        if ((not(((scale_up_flag_out_full_n = ap_const_logic_0) or (level_out_full_n = ap_const_logic_0) or (cols2_out4_full_n = ap_const_logic_0) or (cols2_out_full_n = ap_const_logic_0) or (rows1_out3_full_n = ap_const_logic_0) or (rows1_out_full_n = ap_const_logic_0) or (cols_out2_full_n = ap_const_logic_0) or (cols_out_full_n = ap_const_logic_0) or (rows_out1_full_n = ap_const_logic_0) or (rows_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (init_flag_out_full_n = ap_const_logic_0) or (scale_in_out6_full_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (scale_in_out_full_n = ap_const_logic_0) or (scale_up_flag_out5_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            scale_in_out6_write <= ap_const_logic_1;
        else 
            scale_in_out6_write <= ap_const_logic_0;
        end if; 
    end process;


    scale_in_out_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, scale_in_out_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            scale_in_out_blk_n <= scale_in_out_full_n;
        else 
            scale_in_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    scale_in_out_din <= scale_in;

    scale_in_out_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, rows_out_full_n, rows_out1_full_n, cols_out_full_n, cols_out2_full_n, rows1_out_full_n, rows1_out3_full_n, cols2_out_full_n, cols2_out4_full_n, level_out_full_n, scale_up_flag_out_full_n, scale_up_flag_out5_full_n, scale_in_out_full_n, scale_in_out6_full_n, init_flag_out_full_n)
    begin
        if ((not(((scale_up_flag_out_full_n = ap_const_logic_0) or (level_out_full_n = ap_const_logic_0) or (cols2_out4_full_n = ap_const_logic_0) or (cols2_out_full_n = ap_const_logic_0) or (rows1_out3_full_n = ap_const_logic_0) or (rows1_out_full_n = ap_const_logic_0) or (cols_out2_full_n = ap_const_logic_0) or (cols_out_full_n = ap_const_logic_0) or (rows_out1_full_n = ap_const_logic_0) or (rows_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (init_flag_out_full_n = ap_const_logic_0) or (scale_in_out6_full_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (scale_in_out_full_n = ap_const_logic_0) or (scale_up_flag_out5_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            scale_in_out_write <= ap_const_logic_1;
        else 
            scale_in_out_write <= ap_const_logic_0;
        end if; 
    end process;


    scale_up_flag_out5_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, scale_up_flag_out5_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            scale_up_flag_out5_blk_n <= scale_up_flag_out5_full_n;
        else 
            scale_up_flag_out5_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    scale_up_flag_out5_din <= scale_up_flag;

    scale_up_flag_out5_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, rows_out_full_n, rows_out1_full_n, cols_out_full_n, cols_out2_full_n, rows1_out_full_n, rows1_out3_full_n, cols2_out_full_n, cols2_out4_full_n, level_out_full_n, scale_up_flag_out_full_n, scale_up_flag_out5_full_n, scale_in_out_full_n, scale_in_out6_full_n, init_flag_out_full_n)
    begin
        if ((not(((scale_up_flag_out_full_n = ap_const_logic_0) or (level_out_full_n = ap_const_logic_0) or (cols2_out4_full_n = ap_const_logic_0) or (cols2_out_full_n = ap_const_logic_0) or (rows1_out3_full_n = ap_const_logic_0) or (rows1_out_full_n = ap_const_logic_0) or (cols_out2_full_n = ap_const_logic_0) or (cols_out_full_n = ap_const_logic_0) or (rows_out1_full_n = ap_const_logic_0) or (rows_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (init_flag_out_full_n = ap_const_logic_0) or (scale_in_out6_full_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (scale_in_out_full_n = ap_const_logic_0) or (scale_up_flag_out5_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            scale_up_flag_out5_write <= ap_const_logic_1;
        else 
            scale_up_flag_out5_write <= ap_const_logic_0;
        end if; 
    end process;


    scale_up_flag_out_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, scale_up_flag_out_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            scale_up_flag_out_blk_n <= scale_up_flag_out_full_n;
        else 
            scale_up_flag_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    scale_up_flag_out_din <= scale_up_flag;

    scale_up_flag_out_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, rows_out_full_n, rows_out1_full_n, cols_out_full_n, cols_out2_full_n, rows1_out_full_n, rows1_out3_full_n, cols2_out_full_n, cols2_out4_full_n, level_out_full_n, scale_up_flag_out_full_n, scale_up_flag_out5_full_n, scale_in_out_full_n, scale_in_out6_full_n, init_flag_out_full_n)
    begin
        if ((not(((scale_up_flag_out_full_n = ap_const_logic_0) or (level_out_full_n = ap_const_logic_0) or (cols2_out4_full_n = ap_const_logic_0) or (cols2_out_full_n = ap_const_logic_0) or (rows1_out3_full_n = ap_const_logic_0) or (rows1_out_full_n = ap_const_logic_0) or (cols_out2_full_n = ap_const_logic_0) or (cols_out_full_n = ap_const_logic_0) or (rows_out1_full_n = ap_const_logic_0) or (rows_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (init_flag_out_full_n = ap_const_logic_0) or (scale_in_out6_full_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (scale_in_out_full_n = ap_const_logic_0) or (scale_up_flag_out5_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            scale_up_flag_out_write <= ap_const_logic_1;
        else 
            scale_up_flag_out_write <= ap_const_logic_0;
        end if; 
    end process;

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;


    streamFlowin_mat_436_blk_n_assign_proc : process(streamFlowin_mat_436_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln882_2_reg_399)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln882_2_reg_399 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            streamFlowin_mat_436_blk_n <= streamFlowin_mat_436_empty_n;
        else 
            streamFlowin_mat_436_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    streamFlowin_mat_436_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln882_2_reg_399, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln882_2_reg_399 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            streamFlowin_mat_436_read <= ap_const_logic_1;
        else 
            streamFlowin_mat_436_read <= ap_const_logic_0;
        end if; 
    end process;


    strmFlowU_split15_blk_n_assign_proc : process(strmFlowU_split15_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln882_2_reg_399)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln882_2_reg_399 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            strmFlowU_split15_blk_n <= strmFlowU_split15_full_n;
        else 
            strmFlowU_split15_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strmFlowU_split15_din <= streamFlowin_mat_436_dout(31 downto 16);

    strmFlowU_split15_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln882_2_reg_399, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln882_2_reg_399 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            strmFlowU_split15_write <= ap_const_logic_1;
        else 
            strmFlowU_split15_write <= ap_const_logic_0;
        end if; 
    end process;


    strmFlowV_split16_blk_n_assign_proc : process(strmFlowV_split16_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln882_2_reg_399)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln882_2_reg_399 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            strmFlowV_split16_blk_n <= strmFlowV_split16_full_n;
        else 
            strmFlowV_split16_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strmFlowV_split16_din <= streamFlowin_mat_436_dout(16 - 1 downto 0);

    strmFlowV_split16_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln882_2_reg_399, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln882_2_reg_399 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            strmFlowV_split16_write <= ap_const_logic_1;
        else 
            strmFlowV_split16_write <= ap_const_logic_0;
        end if; 
    end process;

    trunc_ln91_2_fu_322_p1 <= cols(16 - 1 downto 0);
    trunc_ln91_3_fu_328_p1 <= rows(16 - 1 downto 0);
    zext_ln882_2_fu_349_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_154_reg_301),32));
    zext_ln882_fu_334_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_reg_290),32));
end behav;
